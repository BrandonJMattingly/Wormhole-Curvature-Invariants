(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    921615,      18750]
NotebookOptionsPosition[    912054,      18447]
NotebookOutlinePosition[    912913,      18475]
CellTagsIndexPosition[    912870,      18472]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Plotting the Invariants for the Schrodinger ThinShell Wormhole for a>M \
\>", "Title",
 CellChangeTimes->{{3.7102478848057156`*^9, 3.7102479031752977`*^9}, {
  3.7111221737855225`*^9, 3.711122175839566*^9}, {3.7111222239035754`*^9, 
  3.7111222258076143`*^9}, {3.717247674100478*^9, 3.7172476851066904`*^9}, {
  3.7208939556385765`*^9, 3.720893957525765*^9}, {3.72115229680149*^9, 
  3.7211522999378033`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "v", ",", "t", ",", "\[Eta]", ",", "\[Theta]", ",", "\[Phi]", ",", "\[Rho]",
    ",", "R", ",", "M", ",", "a", ",", "\[CapitalPhi]", ",", "b", ",", "R", 
   ",", "vs", ",", "rs", ",", "f", ",", "g", ",", "gi", ",", 
   "\[CapitalGamma]", ",", "RieDijkl", ",", "RieUiDjkl", ",", "RieSchUiDjkl", 
   ",", "RieSchDijkl", ",", "KPDij", ",", "KMDij", ",", "RicDij", ",", 
   "RicUiDj", ",", "RicUij", ",", "SDij", ",", " ", "SUiDj", ",", "SUij", ",",
    "WeylDijUkl", ",", "WeylDijkl", ",", "WeylUijDkl", ",", "WeylUjDikl", ",",
    "DualWeylUijDkl", ",", "DualWeylUjDikl", ",", "\[Epsilon]", ",", "I1", 
   ",", "I2", ",", "I3", ",", "I4", ",", "I5", ",", "I6", ",", "I7", ",", 
   "I8", ",", "I9", ",", "I10", ",", "I11", ",", "I12", ",", "I13", ",", 
   "I14"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7111220983299336`*^9, 3.711122147267973*^9}, {
  3.7172476994601893`*^9, 3.7172477030990596`*^9}, {3.717248114548242*^9, 
  3.7172481163296766`*^9}, {3.7210687405555944`*^9, 3.721068750883628*^9}, {
  3.721069592111742*^9, 3.721069592451776*^9}, {3.7213944133862476`*^9, 
  3.721394416563345*^9}, {3.7313409142318654`*^9, 3.7313409263452873`*^9}, {
  3.731341058298772*^9, 3.7313411279017315`*^9}}],

Cell[CellGroupData[{

Cell["Defining the Schrodinger Thin-Shell Metric", "Section",
 CellChangeTimes->{{3.710247933784791*^9, 3.710247943753112*^9}, {
  3.72089396217523*^9, 3.720893968006813*^9}, {3.7211522907378836`*^9, 
  3.721152294225232*^9}}],

Cell[TextData[StyleBox["First, we need to define an array to hold the \
variables, t, \[Eta], \[Theta], and \[Phi], that we will be using for \
Guassian Normal Coordinates. This step will allow us to take the appropriate \
derivatives later. Please remember to reevaluate the entire notebook whenever \
you reopen it. If you do not, you will just get a ton of errors.",
 FontFamily->"Baskerville Old Face"]], "Text",
 CellChangeTimes->{{3.7102479530474157`*^9, 3.7102479657608194`*^9}, {
  3.7102498236654654`*^9, 3.710249869683067*^9}, {3.7102501502791233`*^9, 
  3.7102501657036657`*^9}, {3.710697460803576*^9, 3.7106974968931847`*^9}, {
  3.7111221881028185`*^9, 3.71112221524039*^9}, {3.7208939810951214`*^9, 
  3.720893986999712*^9}, {3.72106950028356*^9, 3.721069527661298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "=", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Eta]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710246628697607*^9, 3.710246675087246*^9}, {
   3.710247592291622*^9, 3.710247611378401*^9}, 3.7102476557823257`*^9, {
   3.717247707374542*^9, 3.7172477097195873`*^9}, {3.7208952719911985`*^9, 
   3.7208952747084703`*^9}, {3.7208955856935654`*^9, 
   3.7208955906430607`*^9}, {3.7210687537949185`*^9, 3.721068760999639*^9}, 
   3.730048745817726*^9, {3.7314125735219107`*^9, 3.731412576476206*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"t"},
      {"\[Eta]"},
      {"\[Theta]"},
      {"\[Phi]"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7208955914251385`*^9, 3.721069598904421*^9, 3.721153534394009*^9, {
   3.72139379454996*^9, 3.721393799541116*^9}, 3.7213942978846784`*^9, 
   3.731340933454709*^9, 3.7313410839613376`*^9, 3.7313411328672276`*^9, 
   3.731413384079958*^9, 3.7325382905082846`*^9, 3.7326248062576485`*^9, 
   3.7326257275951138`*^9, 3.7326375645702057`*^9}]
}, Open  ]],

Cell[TextData[{
 "Now, we need the actual terms of the metric, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ds", "2"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", 
          FractionBox["m", 
           RowBox[{"R", "(", "\[Eta]", ")"}]]}]}], ")"}]}], 
      SuperscriptBox["dt", "2"]}], "+", 
     FractionBox[
      SuperscriptBox["d\[Eta]", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         FractionBox["m", 
          RowBox[{"R", "(", "\[Eta]", ")"}]]}]}], ")"}]], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"R", "(", "\[Eta]", ")"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d\[Theta]", "2"], "+", 
        RowBox[{
         SuperscriptBox["sin", "2"], 
         SuperscriptBox["\[Theta]d\[Phi]", "2"]}]}], ")"}]}]}]}], 
   TraditionalForm]]],
 ". Then we will take two patchs of Schwarzschild space, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalOmega]", 
     RowBox[{"1", ",", "2"}]], "\[Congruent]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["r", 
        RowBox[{"1", ",", "2"}]], "\[LessEqual]", "a"}], "|", 
      RowBox[{"a", ">", 
       RowBox[{"2", "M"}]}]}], "}"}]}], TraditionalForm]]],
 ", and identify them as joined at the boundary ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[PartialD]", 
     SubscriptBox["\[CapitalOmega]", 
      RowBox[{"1", ",", "2"}]]}], "\[Congruent]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["r", 
       RowBox[{"1", ",", "2"}]], "=", 
      RowBox[{"a", "|", 
       RowBox[{"a", ">", 
        RowBox[{"2", "M"}]}]}]}], "}"}]}], TraditionalForm]]],
 ", wormhole throat of \[Rho][\[Eta]]=a. "
}], "Text",
 CellChangeTimes->{{3.720895225541554*^9, 3.720895383076306*^9}, {
  3.721069541997731*^9, 3.7210695862471557`*^9}, {3.721394328775646*^9, 
  3.721394333673795*^9}, {3.7213944041399655`*^9, 3.7213944070820546`*^9}, {
  3.7314121123687997`*^9, 3.731412182146777*^9}, {3.731412347306291*^9, 
  3.7314124239339533`*^9}, {3.7314125235299115`*^9, 3.731412535627121*^9}, {
  3.73141258231479*^9, 3.7314125897735353`*^9}, {3.731413140644617*^9, 
  3.7314131595175037`*^9}, {3.731413255954147*^9, 3.7314132572512765`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}]}], "0", "0", "0"},
      {"0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], 
        RowBox[{"-", "1"}]], "0", "0"},
      {"0", "0", 
       SuperscriptBox[
        RowBox[{"(", "\[Rho]", ")"}], "2"], "0"},
      {"0", "0", "0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}], "2"]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gi", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "g", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7208953891239104`*^9, 3.7208955725732536`*^9}, {
  3.720895609493945*^9, 3.7208956112461205`*^9}, {3.720895690490044*^9, 
  3.7208957661096053`*^9}, {3.7208958075357475`*^9, 3.7208958370326967`*^9}, {
  3.7208959146604586`*^9, 3.7208959306440573`*^9}, {3.721069193502885*^9, 
  3.721069304234957*^9}, {3.7213943032798443`*^9, 3.7213943189183445`*^9}, {
  3.72139452515269*^9, 3.7213945306928606`*^9}, {3.7326247803451295`*^9, 
  3.732624787235267*^9}, {3.7326257127138147`*^9, 3.7326257233870287`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "\[Rho]"]}], "0", "0", "0"},
     {"0", 
      FractionBox["1", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"2", " ", "M"}], "\[Rho]"]}]], "0", "0"},
     {"0", "0", 
      SuperscriptBox["\[Rho]", "2"], "0"},
     {"0", "0", "0", 
      RowBox[{
       SuperscriptBox["\[Rho]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7208957670597005`*^9, 3.7208959318201747`*^9, {3.721069290100544*^9, 
   3.7210693048960233`*^9}, 3.7210696010026307`*^9, 3.721393801171172*^9, 
   3.721394300227751*^9, 3.721394421191487*^9, 3.721394532752924*^9, 
   3.7313409356571493`*^9, 3.7313410862285643`*^9, 3.7313411348544264`*^9, 
   3.731413384089959*^9, 3.7325382905182858`*^9, {3.73262479837049*^9, 
   3.7326248119077616`*^9}, {3.732625724997061*^9, 3.7326257276051135`*^9}, 
   3.732637564580206*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["\[Rho]", 
       RowBox[{
        RowBox[{"2", " ", "M"}], "-", "\[Rho]"}]], "0", "0", "0"},
     {"0", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "\[Rho]"]}], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SuperscriptBox["\[Rho]", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], 
       SuperscriptBox["\[Rho]", "2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7208957670597005`*^9, 3.7208959318201747`*^9, {3.721069290100544*^9, 
   3.7210693048960233`*^9}, 3.7210696010026307`*^9, 3.721393801171172*^9, 
   3.721394300227751*^9, 3.721394421191487*^9, 3.721394532752924*^9, 
   3.7313409356571493`*^9, 3.7313410862285643`*^9, 3.7313411348544264`*^9, 
   3.731413384089959*^9, 3.7325382905182858`*^9, {3.73262479837049*^9, 
   3.7326248119077616`*^9}, {3.732625724997061*^9, 3.7326257276051135`*^9}, 
   3.7326375646002064`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding the Connection", "Section",
 CellChangeTimes->{{3.7102480970969753`*^9, 3.710248101494115*^9}}],

Cell[TextData[{
 StyleBox["We will use the Table Function to find the different elements of \
the connection, ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[CapitalGamma]", "i"], ")"}], 
    RowBox[{"j", " ", "l"}]], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 StyleBox[". \nWe will use the formula ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[CapitalGamma]", "i"], ")"}], 
     RowBox[{"j", " ", "k"}]], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
      SuperscriptBox["g", 
       RowBox[{"i", " ", "l"}]], "(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", "j"], 
        SubscriptBox["g", 
         RowBox[{"l", " ", "k"}]]}], "+", 
       RowBox[{
        SubscriptBox["\[PartialD]", "k"], 
        SubscriptBox["g", 
         RowBox[{"l", " ", "j"}]]}], "-", 
       RowBox[{
        SubscriptBox["\[PartialD]", "l"], 
        SubscriptBox["g", 
         RowBox[{"j", " ", "k"}]]}]}], ")"}]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 "\n",
 StyleBox["To get \[CapitalGamma] type \[AliasDelimiter] Gamma \
\[AliasDelimiter] without the interior spaces.\nTo read the output, it goes i \
\[Rule] row of vectors, j \[Rule] column of vectors, and k \[Rule] row of \
individual vectors. For example, ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[CapitalGamma]", "t"], ")"}], 
     RowBox[{"t", " ", "r"}]], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"\[CapitalPhi]", "'"}], 
     RowBox[{"(", "r", ")"}]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 "."
}], "Text",
 CellChangeTimes->{{3.710248109793378*^9, 3.710248144975493*^9}, {
  3.7102496342965307`*^9, 3.7102497311492147`*^9}, {3.7102498034724464`*^9, 
  3.710249808488948*^9}, {3.710250617299821*^9, 3.7102506291960106`*^9}, {
  3.7105192132534513`*^9, 3.7105192395977583`*^9}, {3.710519903433362*^9, 
  3.7105200174179573`*^9}, {3.710520057855336*^9, 3.7105201566890774`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalGamma]", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"gi", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"v", "[", 
            RowBox[{"[", "j", "]"}], "]"}]], 
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "k"}], "]"}], "]"}]}], "+", 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"v", "[", 
            RowBox[{"[", "k", "]"}], "]"}]], 
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "-", 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"v", "[", 
            RowBox[{"[", "i", "]"}], "]"}]], 
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", "%", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7102453908642693`*^9, 3.7102454169538517`*^9}, {
  3.71024550465308*^9, 3.7102455376098638`*^9}, {3.71024558851503*^9, 
  3.7102457556748457`*^9}, {3.7102462492616673`*^9, 3.7102463166394043`*^9}, {
  3.7102463744421844`*^9, 3.7102464557263117`*^9}, {3.710246492247964*^9, 
  3.7102465122889676`*^9}, {3.7102465690346413`*^9, 3.7102465919799356`*^9}, {
  3.710246688992636*^9, 3.710246739058648*^9}, {3.7105191818068457`*^9, 
  3.7105192070269313`*^9}, {3.7105200233460712`*^9, 3.710520031886436*^9}, {
  3.711377387246113*^9, 3.7113773888621497`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {
           RowBox[{"Cot", "[", "\[Theta]", "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {
           RowBox[{"Cot", "[", "\[Theta]", "]"}]},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7208959406700597`*^9, 3.7210696080913396`*^9, 
  3.721153534521022*^9, 3.7213938046722803`*^9, 3.7213944251006107`*^9, 
  3.7213945358000174`*^9, 3.7313409400710325`*^9, 3.731341089136855*^9, 
  3.731341137883729*^9, 3.7314133841439643`*^9, 3.7325382906302967`*^9, 
  3.732624820387931*^9, 3.732625727625114*^9, 3.732637564630207*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding the Riemann Tensor", "Section",
 CellChangeTimes->{{3.710248174103417*^9, 3.7102482073303895`*^9}}],

Cell[TextData[{
 StyleBox["Next we need the Schwarzchild Riemann Tensor with mixed indices. \
We will use the Formula: ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox["R", "i"], ")"}], 
     RowBox[{"j", " ", "k", " ", "l"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", "k"], 
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[CapitalGamma]", "i"], ")"}], 
       RowBox[{"j", " ", "l"}]]}], "-", 
     RowBox[{
      SubscriptBox["\[PartialD]", "l"], 
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[CapitalGamma]", "i"], ")"}], 
       RowBox[{"j", " ", "k"}]]}], "+", 
     RowBox[{
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[CapitalGamma]", "m"], ")"}], 
       RowBox[{"j", " ", "l"}]], 
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[CapitalGamma]", "i"], ")"}], 
       RowBox[{"m", " ", "k"}]]}], "-", 
     RowBox[{
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[CapitalGamma]", "m"], ")"}], 
       RowBox[{"j", " ", "k"}]], 
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["\[CapitalGamma]", "i"], ")"}], 
       RowBox[{"m", " ", "l"}]]}]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 "\n",
 StyleBox["I have named the tables with a U indicated a raised indice and a D \
to indicate a lowered indice. This convention will be held for the entirity \
of the ",
  FontFamily->"Baskerville Old Face"],
 StyleBox["Mathematica",
  FontFamily->"Baskerville Old Face",
  FontSlant->"Italic"],
 StyleBox[" Notebook. For example, RieUiDjkl=",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"(", 
     SuperscriptBox["R", "i"], ")"}], 
    RowBox[{"j", " ", "k", " ", "l"}]], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 StyleBox[".",
  FontFamily->"Baskerville Old Face"],
 "\n",
 StyleBox["To read the output, it goes i \[Rule] row of matrices, j \[Rule] \
column of matrices, k \[Rule] row of individual matrix, l \[Rule] column of \
individual matrix. \nFor example, ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox["R", "t"], ")"}], 
     RowBox[{"r", " ", "t", " ", "r"}]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"b", "[", "r", "]"}]}], "+", 
         RowBox[{"r", " ", 
          RowBox[{
           SuperscriptBox["b", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}]}], 
      RowBox[{"2", " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{"r", "-", 
         RowBox[{"b", "[", "r", "]"}]}], ")"}]}]], "-", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[CapitalPhi]", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "2"], "-", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 "."
}], "Text",
 CellChangeTimes->{{3.7102482132185163`*^9, 3.7102482177991185`*^9}, {
   3.7102483972268357`*^9, 3.7102484200031133`*^9}, 3.7102494277758803`*^9, {
   3.7102494672648287`*^9, 3.7102496144965506`*^9}, {3.710250488285921*^9, 
   3.7102505040154934`*^9}, {3.710250612243315*^9, 3.7102506135874496`*^9}, {
   3.710520228577464*^9, 3.710520304127353*^9}, 3.7105203963947697`*^9, {
   3.710693959422899*^9, 3.7106939664045963`*^9}, {3.710695387786331*^9, 
   3.7106954992147923`*^9}, {3.721069654649995*^9, 3.7210696584503756`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RieSchUiDjkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"v", "[", 
         RowBox[{"[", "k", "]"}], "]"}]], 
       RowBox[{"\[CapitalGamma]", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "l"}], "]"}], "]"}]}], "-", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"v", "[", 
         RowBox[{"[", "l", "]"}], "]"}]], 
       RowBox[{"\[CapitalGamma]", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], "+", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"[", 
           RowBox[{"m", ",", "j", ",", "l"}], "]"}], "]"}], "*", 
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "m", ",", "k"}], "]"}], "]"}]}], ")"}]}], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"[", 
           RowBox[{"m", ",", "j", ",", "k"}], "]"}], "]"}], "*", 
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "m", ",", "l"}], "]"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710248449046017*^9, 3.7102487158967*^9}, {
  3.710248913906499*^9, 3.7102489270578136`*^9}, {3.710248974300537*^9, 
  3.7102489877728844`*^9}, {3.7102490406081676`*^9, 3.7102490571598225`*^9}, {
  3.7102492876588697`*^9, 3.7102493026263666`*^9}, {3.7102504016182547`*^9, 
  3.7102504090579987`*^9}, {3.710516178990573*^9, 3.710516192486868*^9}, {
  3.7106939856740503`*^9, 3.7106939882651033`*^9}, {3.710695368300898*^9, 
  3.7106953822072115`*^9}, {3.721069639985529*^9, 3.7210696409936295`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]},
         {"0", "0", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", "1"}]},
         {"0", "0", "1", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.720895949588951*^9, {3.7210696168782187`*^9, 3.7210696432548556`*^9}, 
   3.7211535345390234`*^9, 3.7213938082493896`*^9, 3.7213944283787117`*^9, 
   3.7213945390031166`*^9, 3.7313409488927965`*^9, 3.7313411408180227`*^9, 
   3.7314133842119713`*^9, 3.732538290695303*^9, 3.732624823527994*^9, 
   3.7326257276551147`*^9, 3.732637564672209*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["In addition, we will need the Riemann Tensor with its indices all \
lowered for our computation of the Weyl Tensor. For \
brevity\[CloseCurlyQuote]s sake, we will compute it here as ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["R", 
      RowBox[{"i", " ", "j", " ", "k", " ", "l"}]], "=", 
     RowBox[{
      SubscriptBox["g", 
       RowBox[{"i", " ", "m"}]], 
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["R", "m"], ")"}], 
       RowBox[{"j", ",", "k", ",", "l"}]]}]}],
    FontFamily->"Baskerville Old Face"], TraditionalForm]]],
 StyleBox[".",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.7102494091590185`*^9, 3.710249441832286*^9}, {
  3.710693944748444*^9, 3.7106940379534683`*^9}, {3.7106941159289274`*^9, 
  3.7106941431887527`*^9}, {3.710694356106673*^9, 3.710694356276676*^9}, {
  3.7106946647728834`*^9, 3.710694700878379*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RieSchDijkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}], "*", 
        RowBox[{"RieSchUiDjkl", "[", 
         RowBox[{"[", 
          RowBox[{"m", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}], 
       ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7106941486608953`*^9, 3.7106941748644977`*^9}, {
  3.710694243629265*^9, 3.7106942708995466`*^9}, {3.7106943138876224`*^9, 
  3.71069433883829*^9}, {3.7106954608579597`*^9, 3.7106954740622463`*^9}, {
  3.721069635586089*^9, 3.7210696368972197`*^9}, {3.7213938175726852`*^9, 
  3.721393820263769*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {"0", "0", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Rho]", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Rho]", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {"0", "0", 
          RowBox[{
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7210696206475954`*^9, 3.721069646025133*^9}, 
   3.721153535130083*^9, {3.721393811119481*^9, 3.721393821125795*^9}, 
   3.7213944312218013`*^9, 3.7213945421362143`*^9, 3.731340951946407*^9, 
   3.731341143338275*^9, 3.7314133842679768`*^9, 3.7325382907463083`*^9, 
   3.73262482780208*^9, 3.732625727685115*^9, 3.7326375647022095`*^9}]
}, Open  ]],

Cell[TextData[{
 "Now, we need to use the thin shell formalism with the Riemann tensor \
identifying at \[Rho]=a to be the mouth of the wormhole. First we need the \
second fundamental form on either side of the wormhole. From (eq 15.42) in \
Visser\[CloseCurlyQuote]s book, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["K", 
      RowBox[{" ", 
       RowBox[{"\[Mu]", " ", "\[Nu]"}]}]], "\[PlusMinus]"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       FractionBox["d\[Rho]", "d\[Eta]"]}], 
      SubscriptBox["|", 
       RowBox[{"\[Rho]", "=", "a"}]], 
      FractionBox[
       RowBox[{"\[PartialD]", " ", 
        SubscriptBox["g", 
         RowBox[{"\[Mu]", " ", "\[Nu]"}]]}], 
       RowBox[{"\[PartialD]", "\[Rho]"}]], 
      SubscriptBox["|", 
       RowBox[{"\[Rho]", "=", "a"}]]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[PlusMinus]", 
        FractionBox["1", "2"]}], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", "M"}], "a"]}]], 
       FractionBox[
        RowBox[{"\[PartialD]", " ", 
         SubscriptBox["g", 
          RowBox[{"\[Mu]", " ", "\[Nu]"}]]}], 
        RowBox[{"\[PartialD]", "\[Rho]"}]]}], 
      SubscriptBox["|", 
       RowBox[{"\[Rho]", "=", "a"}]]}]}]}], TraditionalForm]]],
 ". P corresponds to one side of the wormhole and M to the other."
}], "Text",
 CellChangeTimes->{{3.721069667378268*^9, 3.721069671442674*^9}, {
  3.7210697030768375`*^9, 3.7210697350140305`*^9}, {3.721069806657194*^9, 
  3.7210698201775465`*^9}, {3.7210703533688602`*^9, 3.7210704244519677`*^9}, {
  3.721070461318654*^9, 3.7210705523857594`*^9}, {3.721393838678345*^9, 
  3.7213938504727163`*^9}, {3.7213944415491176`*^9, 3.7213944669518995`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", "M"}], "a"]}]], ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KPDij", "=", 
   RowBox[{
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"2", "M"}], "a"]}]], 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["M", 
          SuperscriptBox["a", "2"]]}], "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "a", "0"},
       {"0", "0", "0", "a"}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KMDij", "=", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", "M"}], "a"]}]]}], 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["M", 
          SuperscriptBox["a", "2"]]}], "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "a", "0"},
       {"0", "0", "0", "a"}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kDij", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"KPDij", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], "-", 
      RowBox[{"KMDij", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.721070562935815*^9, 3.721070717497269*^9}, {
   3.721070756418161*^9, 3.7210707592264414`*^9}, {3.7210708299015083`*^9, 
   3.7210708384213605`*^9}, 3.721071575470637*^9, {3.7210716331354628`*^9, 
   3.721071639648667*^9}, {3.7210716807901964`*^9, 3.7210716825432506`*^9}, {
   3.7210717278346667`*^9, 3.7210718078331814`*^9}, {3.72107199814714*^9, 
   3.721072028291073*^9}, {3.721072166510384*^9, 3.7210721691524653`*^9}, {
   3.721072349989053*^9, 3.7210723918863893`*^9}, {3.721072439558936*^9, 
   3.7210724471991696`*^9}, {3.7326250563386602`*^9, 
   3.7326250966514673`*^9}, {3.7326251963444643`*^9, 3.732625316019863*^9}, {
   3.732625352824602*^9, 3.732625459162732*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}]]}], 
        SuperscriptBox["a", "2"]]}], "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"2", " ", "a", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", " ", "M"}], "a"]}]]}], "0"},
     {"0", "0", "0", 
      RowBox[{"2", " ", "a", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", " ", "M"}], "a"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7210723596113567`*^9, 3.721072397122552*^9}, 
   3.7210724478241887`*^9, 3.7213938523807755`*^9, {3.7213944784762516`*^9, 
   3.721394482607377*^9}, 3.7213945445142865`*^9, 3.7313409565703316`*^9, 
   3.731341146500591*^9, 3.731413384280978*^9, 3.7325382907583094`*^9, 
   3.732624869032906*^9, 3.73262512372401*^9, {3.732625197514488*^9, 
   3.732625316709877*^9}, {3.732625353424614*^9, 3.73262546004275*^9}, 
   3.732625727695115*^9, 3.73263756473221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", "[", "\[Eta]", "]"}], "=", "a"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "4"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "4"], 
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{"[", "i", "]"}], "]"}], 
     RowBox[{"g", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], 
     RowBox[{"n", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\[Rho]", "]"}]}], "Input",
 CellChangeTimes->{{3.7326251294541245`*^9, 3.732625183789213*^9}, 
   3.73262527843711*^9, {3.7326253313921723`*^9, 3.732625366834882*^9}, {
   3.7326254678229055`*^9, 3.7326254721629925`*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{{3.732625184739232*^9, 3.7326254728470063`*^9}, 
   3.7326257277051153`*^9, 3.7326375647422104`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{"2", " ", "M"}], "a"]}], 
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{"2", " ", "M"}], "\[Rho]"]}]]], "Output",
 CellChangeTimes->{{3.732625184739232*^9, 3.7326254728470063`*^9}, 
   3.7326257277051153`*^9, 3.7326375647422104`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kUiDj", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], "4"], 
      RowBox[{
       RowBox[{"gi", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "l"}], "]"}], "]"}], 
       RowBox[{"kDij", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "j"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kUiDj", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], "4"], 
      RowBox[{
       RowBox[{"gi", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "l"}], "]"}], "]"}], 
       RowBox[{"kUiDj", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "j"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.721071812874337*^9, 3.721071879101406*^9}, {
  3.7210719119354515`*^9, 3.721071919691697*^9}, {3.7210719655221305`*^9, 
  3.7210719744084015`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}]], " ", "\[Rho]"}], 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}]}]]}], "0", "0", 
      "0"},
     {"0", "0", "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "a"]}]]}], 
       SuperscriptBox["\[Rho]", "2"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "a"]}]], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}], 
       SuperscriptBox["\[Rho]", "2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7210718694551053`*^9, 3.7210718794424167`*^9}, 
   3.721071976633472*^9, 3.7213938601160183`*^9, 3.721394485479467*^9, 
   3.721394548412408*^9, 3.731340959743966*^9, 3.731341149109852*^9, 
   3.7314133842919793`*^9, 3.7325382907663107`*^9, 3.7326248756530385`*^9, 
   3.7326255173278975`*^9, 3.732625727725116*^9, 3.7326375647522106`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}]], " ", 
         SuperscriptBox["\[Rho]", "2"]}], 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], "2"]}]]}], "0", 
      "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "a"]}]]}], 
       SuperscriptBox["\[Rho]", "4"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "a"]}]], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Theta]", "]"}], "4"]}], 
       SuperscriptBox["\[Rho]", "4"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7210718694551053`*^9, 3.7210718794424167`*^9}, 
   3.721071976633472*^9, 3.7213938601160183`*^9, 3.721394485479467*^9, 
   3.721394548412408*^9, 3.731340959743966*^9, 3.731341149109852*^9, 
   3.7314133842919793`*^9, 3.7325382907663107`*^9, 3.7326248756530385`*^9, 
   3.7326255173278975`*^9, 3.732625727725116*^9, 3.7326375647522106`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RieDijkl", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"DiracDelta", "[", 
          RowBox[{"\[Rho]", "-", "a"}], "]"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"kDij", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "k"}], "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "j", "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "l", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"kDij", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "l"}], "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"kDij", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "l"}], "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "j", "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"kDij", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "k"}], "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"n", "[", 
            RowBox[{"[", "l", "]"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"RieSchDijkl", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7210720793586817`*^9, 3.7210723334875464`*^9}, {
   3.7210724114640055`*^9, 3.72107241870123*^9}, 3.721072506729006*^9, {
   3.721072778372411*^9, 3.7210727830885572`*^9}, {3.7211534023228035`*^9, 
   3.7211534067222433`*^9}, 3.721393865571189*^9, {3.7326248797931213`*^9, 
   3.7326248831831894`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "2"]], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "2"]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "2"]]}], "0", "0"},
         {
          FractionBox[
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "2"]], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0"},
         {"0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {"0", "0", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Rho]", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Rho]", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {"0", "0", 
          RowBox[{
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213938663232117`*^9, 3.7213944884025574`*^9, 
  3.7213945531805534`*^9, 3.7313409630276227`*^9, 3.7313411517281137`*^9, 
  3.7313412204209824`*^9, 3.7314133843509855`*^9, 3.7325382908473186`*^9, 
  3.732624889598318*^9, 3.732625521568982*^9, 3.732625727775117*^9, 
  3.7326375648322124`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding the Ricci Tensor", "Section",
 CellChangeTimes->{{3.710249448863989*^9, 3.710249456752778*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"Next", " ", "we", " ", "need", " ", "the", " ", "Riemann", " ", 
   RowBox[{"Tensor", ".", " ", "We"}], " ", "will", " ", "use", " ", "the", 
   " ", 
   RowBox[{"Formula", ":", " ", 
    FormBox[
     RowBox[{
      SubscriptBox["R", 
       RowBox[{"i", " ", "j"}]], "=", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", "k"], 
        SubscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[CapitalGamma]", "k"], ")"}], 
         RowBox[{"i", " ", "j"}]]}], "-", 
       RowBox[{
        SubscriptBox["\[PartialD]", "j"], 
        SubscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[CapitalGamma]", "k"], ")"}], 
         RowBox[{"i", " ", "k"}]]}], "+", 
       RowBox[{
        SubscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[CapitalGamma]", "m"], ")"}], 
         RowBox[{"i", " ", "j"}]], 
        SubscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[CapitalGamma]", "k"], ")"}], 
         RowBox[{"m", " ", "k"}]]}], "-", 
       RowBox[{
        SubscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[CapitalGamma]", "m"], ")"}], 
         RowBox[{"i", " ", "k"}]], 
        SubscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[CapitalGamma]", "k"], ")"}], 
         RowBox[{"m", " ", "j"}]]}]}]}],
     TraditionalForm]}]}],
  FontFamily->"Baskerville Old Face"]], "Text",
 CellChangeTimes->{{3.7102500318832855`*^9, 3.710250047064803*^9}, {
  3.710250447780871*^9, 3.710250480318124*^9}, {3.710250599979089*^9, 
  3.7102506087229633`*^9}, {3.7106955799641004`*^9, 3.710695658253796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RicDij", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gi", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "l"}], "]"}], "]"}], 
         RowBox[{"RieDijkl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", "%", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7102502904851427`*^9, 3.7102504279468875`*^9}, {
   3.7105163054582996`*^9, 3.7105163405930715`*^9}, {3.7105165926984973`*^9, 
   3.7105165984976187`*^9}, {3.7105166352334075`*^9, 3.7105166662690697`*^9}, 
   3.710518062983286*^9, {3.7105187872527285`*^9, 3.7105187937756543`*^9}, {
   3.7106955338655415`*^9, 3.7106955752879906`*^9}, {3.7106956641499205`*^9, 
   3.7106957495082607`*^9}, {3.721072620567525*^9, 3.7210726737811975`*^9}, {
   3.721072762119912*^9, 3.7210727656200204`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.721072544324176*^9, 3.7210727882187157`*^9, 
  3.7211535354591155`*^9, 3.7213938720173903`*^9, 3.7213945572606797`*^9, 
  3.7313409682196608`*^9, 3.7313423534906793`*^9, 3.731413384365987*^9, 
  3.73253829086132*^9, 3.7326255253190575`*^9, 3.732625727785117*^9, 
  3.732637564852213*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["In addition, we will need the Ricci Tensor with all of its indices \
raised to compute all invariants. We will define it as ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["R", 
     RowBox[{"i", " ", "j"}]], "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"i", " ", "k"}]], 
     SuperscriptBox["g", 
      RowBox[{"j", " ", "l"}]], 
     SubscriptBox["R", 
      RowBox[{"k", " ", "l"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Baskerville Old Face"],
 StyleBox[".",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.71069438331547*^9, 3.710694482649535*^9}, {
  3.7106947536597896`*^9, 3.710694773995248*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RicUij", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gi", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "k"}], "]"}], "]"}], "*", 
         RowBox[{"gi", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "l"}], "]"}], "]"}], "*", 
         RowBox[{"RicDij", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "l"}], "]"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710694501487631*^9, 3.710694638877263*^9}, {
  3.710695562271655*^9, 3.7106955663677597`*^9}, {3.71077240553916*^9, 
  3.710772407181204*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213939409985533`*^9, 3.7213945610968*^9, 
  3.731340975116454*^9, 3.731342355501721*^9, 3.7314133843759875`*^9, 
  3.7325382908683205`*^9, 3.7326255273590984`*^9, 3.7326257277951174`*^9, 
  3.732637564862213*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Finally, we will need the mixed Ricci Tensor. It is defined as ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox["R", "i"], ")"}], "j"], "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"i", " ", "k"}]], 
     SubscriptBox["R", 
      RowBox[{"k", " ", "j"}]]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7106972186963673`*^9, 3.7106972584513426`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RicUiDj", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gi", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "k"}], "]"}], "]"}], "*", 
        RowBox[{"RicDij", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "j"}], "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.71069728182768*^9, 3.7106973037248697`*^9}, {
  3.710697379120408*^9, 3.7106974357380695`*^9}, {3.7107725465090055`*^9, 
  3.7107725517591457`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213939431806216`*^9, 3.7213945631978655`*^9, 
  3.731340977683711*^9, 3.731342357648766*^9, 3.7314133843849883`*^9, 
  3.7325382908753214`*^9, 3.732625530599163*^9, 3.7326257278051176`*^9, 
  3.732637564872213*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding the Ricci Scalar and Trace-Free Ricci Tensors", "Section",
 CellChangeTimes->{{3.7102505179348855`*^9, 3.7102505229353857`*^9}, {
  3.7310710346143966`*^9, 3.731071049468746*^9}}],

Cell[TextData[{
 StyleBox["Following, we need the Ricci Scalar. We will use the Formula: ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"i", " ", "j"}]], 
     SubscriptBox["R", 
      RowBox[{"i", " ", "j", " "}]]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 StyleBox[".",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.7102505350315948`*^9, 3.710250582625354*^9}, {
  3.7312605829334316`*^9, 3.7312605897731156`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gi", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], 
       RowBox[{"RicDij", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7102506614212327`*^9, 3.710250775154605*^9}, {
  3.710772429143809*^9, 3.7107724303388386`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313409824831905`*^9, 3.731342360419823*^9, 
  3.731413384392989*^9, 3.732538290881322*^9, 3.732625532769206*^9, 
  3.732625727815118*^9, 3.732637564882213*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Next", " ", ",", 
   RowBox[{
    RowBox[{"we", " ", "need", " ", "the", " ", "lowered", " ", "trace"}], 
    "-", 
    RowBox[{"free", " ", "Ricci", " ", 
     RowBox[{"Tensor", ".", " ", "We"}], " ", "will", " ", "use", " ", "the", 
     " ", 
     RowBox[{"Formula", ":", " ", 
      FormBox[
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"i", " ", "j"}]], "=", 
        RowBox[{
         SubscriptBox["R", 
          RowBox[{"i", " ", "j"}]], "-", 
         RowBox[{
          FractionBox["R", "4"], 
          RowBox[{
           SubscriptBox["g", 
            RowBox[{"i", " ", "j"}]], "."}]}]}]}],
       TraditionalForm]}]}]}]}],
  FontFamily->"Baskerville Old Face"]], "Text",
 CellChangeTimes->{{3.7102500318832855`*^9, 3.710250047064803*^9}, {
   3.710250447780871*^9, 3.710250480318124*^9}, {3.710250599979089*^9, 
   3.7102506087229633`*^9}, {3.7106955799641004`*^9, 3.710695658253796*^9}, {
   3.7310705673612275`*^9, 3.731070598118956*^9}, {3.7310706540963016`*^9, 
   3.731070676600832*^9}, {3.7310707492175727`*^9, 3.731070760627837*^9}, 
   3.7310780602048426`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SDij", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RicDij", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], "-", 
      RowBox[{
       FractionBox["R", "4"], 
       RowBox[{"g", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", "%", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7102502904851427`*^9, 3.7102504279468875`*^9}, {
   3.7105163054582996`*^9, 3.7105163405930715`*^9}, {3.7105165926984973`*^9, 
   3.7105165984976187`*^9}, {3.7105166352334075`*^9, 3.7105166662690697`*^9}, 
   3.710518062983286*^9, {3.7105187872527285`*^9, 3.7105187937756543`*^9}, {
   3.7106955338655415`*^9, 3.7106955752879906`*^9}, {3.7106956641499205`*^9, 
   3.7106957495082607`*^9}, {3.731070701618436*^9, 3.731070737841298*^9}, 
   3.7310780426564217`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7313409850124435`*^9, 3.731342362406864*^9, 
  3.73141338440099*^9, 3.732538290888323*^9, 3.732625534499241*^9, 
  3.732625727825118*^9, 3.732637564882213*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["In addition, we will need the mixed trace-free Ricci Tensor. We \
will define it as ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     SuperscriptBox["S", "i"], "j"], "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"i", " ", "k"}]], 
     SubscriptBox["S", 
      RowBox[{"k", " ", "j"}]]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 StyleBox[".",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.71069438331547*^9, 3.710694482649535*^9}, {
  3.7106947536597896`*^9, 3.710694773995248*^9}, {3.7310707716641035`*^9, 
  3.7310708219503093`*^9}, {3.731070856530135*^9, 3.731070867375393*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SUiDj", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gi", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "k"}], "]"}], "]"}], "*", 
        RowBox[{"SDij", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "j"}], "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710694501487631*^9, 3.710694638877263*^9}, {
  3.710695562271655*^9, 3.7106955663677597`*^9}, {3.71077240553916*^9, 
  3.710772407181204*^9}, {3.7310708262844143`*^9, 3.731070877310637*^9}, {
  3.731070989640319*^9, 3.731070996632485*^9}, {3.7310710930427837`*^9, 
  3.7310710944498158`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7313409875176945`*^9, 3.7313423644319067`*^9, 
  3.731413384411991*^9, 3.7325382908953233`*^9, 3.7326255364322805`*^9, 
  3.7326257278351183`*^9, 3.7326375648922133`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Finally, we will need the raised trace-free Ricci Tensor. It is \
defined as ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["S", 
     RowBox[{"i", " ", "j"}]], "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"i", " ", "k"}]], 
     SubscriptBox[
      SuperscriptBox["S", "j"], "k"]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7106972186963673`*^9, 3.7106972584513426`*^9}, {
  3.731070893542035*^9, 3.731070969273831*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SUij", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gi", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "k"}], "]"}], "]"}], "*", 
        RowBox[{"SUiDj", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "k"}], "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.71069728182768*^9, 3.7106973037248697`*^9}, {
  3.710697379120408*^9, 3.7106974357380695`*^9}, {3.7107725465090055`*^9, 
  3.7107725517591457`*^9}, {3.7310709590465918`*^9, 3.731070980200096*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.731340989940936*^9, 3.731342366439949*^9, 
  3.731413384419992*^9, 3.7325382909023237`*^9, 3.732625538332319*^9, 
  3.7326257278451185`*^9, 3.7326375649022136`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding the Weyl Tensor", "Section",
 CellChangeTimes->{{3.710250796378727*^9, 3.7102508028753767`*^9}}],

Cell[TextData[{
 StyleBox["Now that we have the Riemann Tensor, the Ricci Tensor, and the \
Ricci Scalar. We can find the Weyl Tensor. \nWe will use the formula: ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", 
     RowBox[{"i", " ", "j", " ", "k", " ", "l"}]], "=", 
    RowBox[{
     SubscriptBox["R", 
      RowBox[{"i", " ", "j", " ", "k", " ", "l"}]], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["g", 
          RowBox[{"i", " ", "l"}]], 
         SubscriptBox["R", 
          RowBox[{"j", " ", "k"}]]}], "+", 
        RowBox[{
         SubscriptBox["g", 
          RowBox[{"j", " ", "k"}]], 
         SubscriptBox["R", 
          RowBox[{"i", " ", "l"}]]}], "-", 
        RowBox[{
         SubscriptBox["g", 
          RowBox[{"i", " ", "k"}]], 
         SubscriptBox["R", 
          RowBox[{"j", " ", "l"}]]}], "-", 
        RowBox[{
         SubscriptBox["g", 
          RowBox[{"j", " ", "l"}]], 
         SubscriptBox["R", 
          RowBox[{"i", " ", "k"}]]}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", "6"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["g", 
          RowBox[{"i", " ", "k"}]], 
         SubscriptBox["g", 
          RowBox[{"j", " ", "l"}]]}], "-", 
        RowBox[{
         SubscriptBox["g", 
          RowBox[{"i", " ", "l"}]], 
         SubscriptBox["g", 
          RowBox[{"j", " ", "k"}]]}]}], ")"}], "R"}]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 ".\n",
 StyleBox["The format of the naming conventions and output follows the same \
pattern as that of the Riemann Tensor.",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.7102508163157206`*^9, 3.7102508433254213`*^9}, {
  3.710251042150302*^9, 3.7102511718832736`*^9}, {3.7105204225392733`*^9, 
  3.710520464731887*^9}, {3.710695148773057*^9, 3.7106951564977293`*^9}, {
  3.7106957975973015`*^9, 3.7106958011323767`*^9}, {3.711378726024148*^9, 
  3.7113787263651547`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WeylDijkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RieDijkl", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "l"}], "]"}], "]"}], 
          RowBox[{"RicDij", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "k"}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "k"}], "]"}], "]"}], 
          RowBox[{"RicDij", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "l"}], "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "k"}], "]"}], "]"}], 
          RowBox[{"RicDij", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "l"}], "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "l"}], "]"}], "]"}], 
          RowBox[{"RicDij", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "k"}], "]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "6"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "k"}], "]"}], "]"}], 
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "l"}], "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "l"}], "]"}], "]"}], 
          RowBox[{"g", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "k"}], "]"}], "]"}]}]}], ")"}], "R"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710251179968082*^9, 3.7102514451996026`*^9}, {
  3.7105183173375854`*^9, 3.7105183237181897`*^9}, {3.710695139709857*^9, 
  3.710695177524187*^9}, {3.7106957863810525`*^9, 3.710695787454075*^9}, {
  3.7107724387770767`*^9, 3.710772465102287*^9}, {3.7112996170261765`*^9, 
  3.7112996180611978`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "2"]], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "2"]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "2"]]}], "0", "0"},
         {
          FractionBox[
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "2"]], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0"},
         {"0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {"0", "0", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Rho]", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Rho]", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {"0", "0", 
          RowBox[{
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213939496768336`*^9, 3.7213945674520035`*^9, 
  3.7313409944703894`*^9, 3.7313423690560026`*^9, 3.731413384459996*^9, 
  3.732538290942328*^9, 3.732625540620365*^9, 3.732625727875119*^9, 
  3.7326375649422145`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Example of getting an individual component of the \
Weyl tensor.",
 FontFamily->"Baskerville Old Face"]], "Text",
 CellChangeTimes->{{3.71051865246192*^9, 3.7105186718962946`*^9}, {
  3.710695835174122*^9, 3.7106958353721294`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"WeylDijkl", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7102515070647883`*^9, 3.710251520963178*^9}, {
  3.7102517129775248`*^9, 3.7102517183696294`*^9}, {3.7106951903214645`*^9, 
  3.710695190722473*^9}, {3.7106958110705943`*^9, 3.7106958119336133`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "M", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{
      RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
   SuperscriptBox["a", "2"]]}]], "Output",
 CellChangeTimes->{3.731413384475998*^9, 3.7325382909573298`*^9, 
  3.7326257278851194`*^9, 3.7326375649522147`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["To get the invariants, we will need to raise the indices of the \
Weyl Tensor. In the following input cells, I will do so.\nFirst, ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       SubscriptBox["C", "i"], "j"], ")"}], 
     RowBox[{"k", " ", "l"}]], "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"j", " ", "m"}]], 
     SubscriptBox["C", 
      RowBox[{"i", " ", "m", " ", "k", " ", "l"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.710695121159384*^9, 3.710695144758971*^9}, {
   3.710695214231494*^9, 3.7106952512523*^9}, {3.7106952994083753`*^9, 
   3.710695333475134*^9}, 3.7106958220688453`*^9, {3.710697821746667*^9, 
   3.710697842643756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WeylUjDikl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gi", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "m"}], "]"}], "]"}], "*", 
        RowBox[{"WeylDijkl", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m", ",", "k", ",", "l"}], "]"}], "]"}]}], 
       ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7106961819487033`*^9, 3.7106962796714745`*^9}, 
   3.710696414205927*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "2"]], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "2"]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "M", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", "\[Rho]", " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}]}]]}], "0", "0"},
         {
          FractionBox[
           RowBox[{"2", " ", "M", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", "\[Rho]", " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}]}]], "0", "0", 
          "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "1"},
         {"0", "0", 
          RowBox[{"-", "1"}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"2", " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
           RowBox[{"DiracDelta", "[", 
            RowBox[{
             RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {"0", "0", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213939529419394`*^9, 3.7213945703720922`*^9, 
  3.7313409970506477`*^9, 3.7313423735590973`*^9, 3.731413384511001*^9, 
  3.732538290998334*^9, 3.7326255441104345`*^9, 3.732625727965121*^9, 
  3.7326375650422163`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Checking the Weyl Tensor for tracelessness i.e. that ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       SubscriptBox["C", "j"], "j"], ")"}], 
     RowBox[{"i", " ", "l"}]], "=", 
    RowBox[{
     SubscriptBox[
      RowBox[{"(", 
       SuperscriptBox[
        SubscriptBox["C", "i"], "j"], ")"}], 
      RowBox[{"j", " ", "l"}]], "=", 
     RowBox[{
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         SubscriptBox["C", "i"], "j"], ")"}], 
       RowBox[{"l", " ", "j"}]], "=", "0"}]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 StyleBox[".",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.711299131016741*^9, 3.711299175255664*^9}, {
  3.7113794705930195`*^9, 3.711379479218212*^9}, {3.7113799759318533`*^9, 
  3.7113800161117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "4"], 
      RowBox[{"WeylUjDikl", "[", 
       RowBox[{"[", 
        RowBox[{"j", ",", "j", ",", "i", ",", "l"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "4"], 
      RowBox[{"WeylUjDikl", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "j", ",", "l"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "4"], 
      RowBox[{"WeylUjDikl", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j", ",", "l", ",", "j"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7112991896829596`*^9, 3.711299309386525*^9}, {
  3.7112993525434217`*^9, 3.711299353485443*^9}, {3.711379352062364*^9, 
  3.7113793701987915`*^9}, {3.7113794081226435`*^9, 3.7113794659059167`*^9}, {
  3.711379949985311*^9, 3.7113799603705254`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.731413384526003*^9, 3.732538291012335*^9, 
  3.7326257279851213`*^9, 3.7326375650622168`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
         RowBox[{"DiracDelta", "[", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
        SuperscriptBox["a", "2"]]}], "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"DiracDelta", "[", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
        SuperscriptBox["\[Rho]", "2"]], "-", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", "\[Rho]", " ", 
         RowBox[{"DiracDelta", "[", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}]}]], "+", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"DiracDelta", "[", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
        SuperscriptBox["\[Rho]", "2"]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{
          RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{
          RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.731413384526003*^9, 3.732538291012335*^9, 
  3.7326257279851213`*^9, 3.732637565072217*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", "M", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{
          RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
       SuperscriptBox["a", "2"]], "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "a", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
           RowBox[{"3", "/", "2"}]], " ", 
          RowBox[{"DiracDelta", "[", 
           RowBox[{
            RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
         SuperscriptBox["\[Rho]", "2"]]}], "+", 
       FractionBox[
        RowBox[{"2", " ", "M", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", "\[Rho]", " ", 
         RowBox[{"DiracDelta", "[", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
         RowBox[{"DiracDelta", "[", 
          RowBox[{
           RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
        SuperscriptBox["\[Rho]", "2"]]}], "0", "0"},
     {"0", "0", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{
          RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
        RowBox[{"DiracDelta", "[", 
         RowBox[{
          RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.731413384526003*^9, 3.732538291012335*^9, 
  3.7326257279851213`*^9, 3.732637565072217*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Second, ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox["C", 
       RowBox[{"i", " ", "j"}]], ")"}], 
     RowBox[{"k", " ", "l"}]], "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"i", " ", "m"}]], 
     SubscriptBox[
      RowBox[{"(", 
       SuperscriptBox[
        SubscriptBox["C", "i"], "j"], ")"}], 
      RowBox[{"k", " ", "l"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.710696344186926*^9, 3.710696393188825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WeylUijDkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gi", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}], "*", 
        RowBox[{"WeylUjDikl", "[", 
         RowBox[{"[", 
          RowBox[{"m", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}], 
       ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7106964023017364`*^9, 3.7106964650400095`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0"},
         {
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]]},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}]},
         {"0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213939614902086`*^9, 3.721394573848198*^9, 
  3.7313410238353257`*^9, 3.731342377095171*^9, 3.7314133846470146`*^9, 
  3.732538291129347*^9, 3.732625547950512*^9, 3.732625728085123*^9, 
  3.7326375651722193`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Third, ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["C", 
      RowBox[{"i", " ", "j"}]], 
     RowBox[{"k", " ", "l"}]], "=", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"k", " ", "m"}]], 
     SuperscriptBox["g", 
      RowBox[{"l", " ", "n"}]], 
     SubscriptBox["C", 
      RowBox[{"i", " ", "j", " ", "m", " ", "n"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.710697124540953*^9, 3.7106971255170507`*^9}, 
   3.710697166167115*^9, {3.710697513517847*^9, 3.710697584584953*^9}, {
   3.7106976852700205`*^9, 3.710697687094203*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WeylDijUkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gi", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "m"}], "]"}], "]"}], 
         RowBox[{"gi", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "n"}], "]"}], "]"}], 
         RowBox[{"WeylDijkl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j", ",", "m", ",", "n"}], "]"}], "]"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710697609306425*^9, 3.710697727991292*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0"},
         {
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]]},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}]},
         {"0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213939641172895`*^9, 3.7213945769122915`*^9, 
  3.7313410267706194`*^9, 3.731342379686224*^9, 3.7314133846970196`*^9, 
  3.732538291177352*^9, 3.7326255501505556`*^9, 3.732625728125124*^9, 
  3.73263756522222*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Next we will need the duals of several of the Weyl tensors. The \
dual of a Weyl Tensor is defined as ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"C", 
     SubscriptBox["*", 
      RowBox[{"i", " ", "j", " ", "k", " ", "l"}]]}], "\[Congruent]", 
    RowBox[{
     FractionBox["1", "2"], 
     SubscriptBox["\[Epsilon]", 
      RowBox[{"i", " ", "j", " ", "k", " ", "l"}]], 
     SubscriptBox[
      RowBox[{"(", 
       SuperscriptBox["C", 
        RowBox[{"m", " ", "n"}]], ")"}], 
      RowBox[{"k", " ", "l"}]]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 StyleBox[" where ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", 
    RowBox[{"i", " ", "j", " ", "k", " ", "l"}]], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 StyleBox[" is the Levi-Civita tensor Density. ",
  FontFamily->"Baskerville Old Face"],
 "\[ImplicitPlus]"
}], "Text",
 CellChangeTimes->{{3.7106979525287437`*^9, 3.710697997307221*^9}, {
  3.7106980343319235`*^9, 3.710698175466035*^9}, {3.710772598384902*^9, 
  3.710772604209058*^9}, {3.710860115997123*^9, 3.710860156539975*^9}, {
  3.710860199258916*^9, 3.710860274008495*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"LeviCivitaTensor", "[", "4", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7106981822707157`*^9, 3.7106982133638244`*^9}, {
   3.7108593043976574`*^9, 3.7108593473975725`*^9}, 3.7108595427547927`*^9, {
   3.7108595897277937`*^9, 3.710859651988139*^9}, {3.7108599789771614`*^9, 
   3.710859979177165*^9}, 3.7108601098069925`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "1"},
           {"0", "0", 
            RowBox[{"-", "1"}], "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", 
            RowBox[{"-", "1"}]},
           {"0", "0", "0", "0"},
           {"0", "1", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "1", "0"},
           {"0", 
            RowBox[{"-", "1"}], "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", 
            RowBox[{"-", "1"}]},
           {"0", "0", "1", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "1"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {
            RowBox[{"-", "1"}], "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", 
            RowBox[{"-", "1"}], "0"},
           {"0", "0", "0", "0"},
           {"1", "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", "1"},
           {"0", "0", "0", "0"},
           {"0", 
            RowBox[{"-", "1"}], "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", 
            RowBox[{"-", "1"}]},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"1", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "1", "0", "0"},
           {
            RowBox[{"-", "1"}], "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", 
            RowBox[{"-", "1"}], "0"},
           {"0", "1", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "1", "0"},
           {"0", "0", "0", "0"},
           {
            RowBox[{"-", "1"}], "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", 
            RowBox[{"-", "1"}], "0", "0"},
           {"1", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"},
           {"0", "0", "0", "0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4, 4, 4}, 0, {
       1, {{0, 6, 12, 18, 24}, {{2, 3, 4}, {2, 4, 3}, {3, 2, 4}, {3, 4, 2}, {
         4, 2, 3}, {4, 3, 2}, {1, 3, 4}, {1, 4, 3}, {3, 1, 4}, {3, 4, 1}, {4, 
         1, 3}, {4, 3, 1}, {1, 2, 4}, {1, 4, 2}, {2, 1, 4}, {2, 4, 1}, {4, 1, 
         2}, {4, 2, 1}, {1, 2, 3}, {1, 3, 2}, {2, 1, 3}, {2, 3, 1}, {3, 1, 
         2}, {3, 2, 1}}}, {1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 
        1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1}}]]]]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710859251881531*^9, 3.7108592609077225`*^9}, {
  3.7108593935615683`*^9, 3.710859403892784*^9}, {3.710859548031903*^9, 
  3.7108595593971543`*^9}, {3.710859593771879*^9, 3.7108595992469945`*^9}, {
  3.710859654657196*^9, 3.710859659494301*^9}, {3.7108599817452183`*^9, 
  3.7108599936654725`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.710859998330573*^9, 3.7108600398324757`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7314133847370234`*^9, 3.7325382912163553`*^9, 
  3.732625728165125*^9, 3.732637565262221*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The first Dual we need is ",
  FontFamily->"Baskerville Old Face",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"(", 
       SuperscriptBox["C", "*"], ")"}], "kl"], "ij"], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["\[Epsilon]", 
      RowBox[{"i", " ", "j", " ", "m", " ", "n"}]], 
     SuperscriptBox[
      SubscriptBox["C", 
       RowBox[{"k", " ", "l"}]], 
      RowBox[{"m", " ", "n"}]]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face",
  FontColor->GrayLevel[0]],
 StyleBox[".",
  FontFamily->"Baskerville Old Face",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.71069830192768*^9, 3.710698347050192*^9}, {
  3.7106983902925158`*^9, 3.710698461590645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DualWeylUijDkl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "*", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "1"}], "4"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Epsilon]", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "m", ",", "n"}], "]"}], "]"}], "*", 
          RowBox[{"WeylUijDkl", "[", 
           RowBox[{"[", 
            RowBox[{"m", ",", "n", ",", "k", ",", "l"}], "]"}], "]"}]}], 
         ")"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7106982374212303`*^9, 3.710698284983986*^9}, {
  3.710698488993385*^9, 3.710698521209606*^9}, {3.7108590899139695`*^9, 
  3.7108591091703663`*^9}, {3.7108592021893473`*^9, 3.7108592330581355`*^9}, {
  3.7108597336958923`*^9, 3.710859736884963*^9}, {3.7108600488826714`*^9, 
  3.710860091296563*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]]},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}]},
         {"0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0"},
         {
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.721393970355483*^9, 3.721394583413492*^9, 
  3.7313410335963016`*^9, 3.7313423854893436`*^9, 3.73141338479803*^9, 
  3.7325382912763615`*^9, 3.7326255566406856`*^9, 3.7326257281951256`*^9, 
  3.7326375653122215`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The second dual we need is ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"(", 
       SuperscriptBox["C", "*"], ")"}], 
      RowBox[{"i", " ", "k", " ", "l"}]], "j"], "="}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"i", " ", "j", " ", "m", " ", "n"}]], 
    SuperscriptBox[
     SubscriptBox["C", 
      RowBox[{"i", " ", "m", " ", "n"}]], "j"]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.71086030088706*^9, 3.710860305171152*^9}, {
  3.7108603536781673`*^9, 3.710860398193102*^9}, {3.710860466072565*^9, 
  3.7108604680426064`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DualWeylUjDikl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "*", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"m", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "1"}], "4"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Epsilon]", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "m", ",", "n"}], "]"}], "]"}], "*", 
          RowBox[{"WeylUjDikl", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "m", ",", "n"}], "]"}], "]"}]}], 
         ")"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "4"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.710698523819867*^9, 3.7106985333938246`*^9}, {
  3.7108604128374085`*^9, 3.710860418022539*^9}, {3.7108604736627245`*^9, 
  3.7108604849879627`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]]},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}]},
         {"0", "0", "0", "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0"},
         {"0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          RowBox[{"-", 
           FractionBox["1", 
            SuperscriptBox["\[Rho]", "2"]]}]},
         {"0", "0", 
          FractionBox["1", 
           SuperscriptBox["\[Rho]", "2"]], "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "3"]]},
         {"0", "0", "0", "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "3"]]}], "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0"},
         {
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", 
          FractionBox[
           RowBox[{"2", " ", "a", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["\[Rho]", "2"]], "0"},
         {"0", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "a", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "\[Rho]"]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["\[Rho]", "2"]]}], "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", 
              RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{"2", " ", "M"}], "a"]}]], " ", 
            RowBox[{"DiracDelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
           SuperscriptBox["a", "3"]], "0", "0"},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", 
               RowBox[{"2", " ", "M"}]}], ")"}], " ", "M", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"2", " ", "M"}], "a"]}]], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}]}], 
            SuperscriptBox["a", "3"]]}], "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7213939731915703`*^9, 3.7213945867535954`*^9, 
  3.731341036812623*^9, 3.731342388083396*^9, 3.7314133848660364`*^9, 
  3.732538291339368*^9, 3.73262555886073*^9, 3.7326257282451267`*^9, 
  3.732637565372223*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding the Invariants", "Section",
 CellChangeTimes->{{3.7107726823906593`*^9, 3.7107726868507767`*^9}}],

Cell[TextData[{
 StyleBox["We now have everything we need to calculate the invariants as \
outlined in the paper \[OpenCurlyDoubleQuote]A new way to See inside Black \
Holes\[CloseCurlyDoubleQuote] by Henry, Overduin and Wilcomb using the G\
\[CloseCurlyQuote]eh\[CloseCurlyQuote]eniau and Debever\[CloseCurlyQuote]s \
(GD) invariants.\n",
  FontFamily->"Baskerville Old Face"],
 StyleBox["The first one we will find is ",
  FontFamily->"Baskerville Old Face",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], "\[Congruent]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["C", 
       RowBox[{"i", " ", "j"}]], 
      RowBox[{"k", " ", "l"}]], 
     SuperscriptBox[
      SubscriptBox["C", 
       RowBox[{"k", " ", "l"}]], 
      RowBox[{"i", " ", "j"}]]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face",
  FontColor->GrayLevel[0]],
 StyleBox[". Notice that it is spherically symmetric i.e. that it only \
depends on r and functions of r. ",
  FontFamily->"Baskerville Old Face",
  FontColor->GrayLevel[0]],
 "Also notice the factor of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SuperscriptBox["r", "6"]], TraditionalForm]]],
 "out front."
}], "Text",
 CellChangeTimes->{{3.710772694161976*^9, 3.710772806540964*^9}, {
  3.710773122099972*^9, 3.710773123805011*^9}, {3.7120654479485726`*^9, 
  3.712065466245869*^9}, {3.7153394179419537`*^9, 3.7153394251592207`*^9}, {
  3.7310711641354756`*^9, 3.731071188499055*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[CapitalPhi]", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.730645278380984*^9, 3.730645288916037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"WeylDijUkl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], "*", 
         RowBox[{"WeylDijUkl", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "l", ",", "i", ",", "j"}], "]"}], "]"}]}], 
        ")"}]}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710772819071286*^9, 3.7107729242981577`*^9}, {
   3.7107729746990285`*^9, 3.7107729774491053`*^9}, 3.710773015297115*^9, {
   3.710773276567765*^9, 3.7107732819269004`*^9}, 3.711119238473956*^9, 
   3.7111195433776627`*^9, 3.711120359299425*^9, 3.7120604163096285`*^9, {
   3.7153407138918943`*^9, 3.7153407295814857`*^9}, {3.7301311262092886`*^9, 
   3.730131141041772*^9}, {3.7310712312340755`*^9, 3.731071243450366*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["4", 
   SuperscriptBox["\[Rho]", "4"]], "+", 
  FractionBox[
   RowBox[{"16", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "M"}]}], ")"}], "3"], " ", 
    SuperscriptBox["M", "2"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}], "2"]}], 
   SuperscriptBox["a", "7"]], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"a", " ", 
     SuperscriptBox["\[Rho]", "6"]}]], 
   RowBox[{"16", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "M"}]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "M"}], "+", "\[Rho]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}], "2"]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"a", " ", 
     SuperscriptBox["\[Rho]", "6"]}]], 
   RowBox[{"16", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "M"}]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "M"}], "+", "\[Rho]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}], "2"]}]}]}]], "Output",
 CellChangeTimes->{3.7313410490618477`*^9, 3.7313423924774866`*^9, 
  3.731413384921042*^9, 3.732538291389373*^9, 3.7326255631308155`*^9, 
  3.732625728285127*^9, 3.732637565412224*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The Second one is ",
  FontFamily->"Baskerville Old Face",
  FontColor->RGBColor[0., 0., 0.]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "2"], " ", "\[Congruent]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       SubscriptBox["C", 
        RowBox[{"i", " ", "j"}]], 
       RowBox[{"k", " ", "l"}]]}], 
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"(", 
        SuperscriptBox["C", "*"], ")"}], 
       RowBox[{"k", " ", "l", " "}]], 
      RowBox[{"i", " ", "j"}]]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face",
  FontColor->RGBColor[0., 0., 0.]],
 "\n",
 StyleBox["This one is empty",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.7107731035144787`*^9, 3.710773163117137*^9}, {
  3.7108606435452995`*^9, 3.7108606565066*^9}, {3.730564882247503*^9, 
  3.7305648906046705`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I2", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"WeylDijUkl", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}], "*", 
         RowBox[{"DualWeylUijDkl", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}], 
        ")"}]}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7108605206527157`*^9, 3.7108605857340794`*^9}, 
   3.7111203629105015`*^9, 3.7120604176047583`*^9, {3.7305684277571516`*^9, 
   3.730568433060259*^9}, {3.7305684796952534`*^9, 3.730568481321286*^9}, 
   3.7306450522003946`*^9, {3.731071273894099*^9, 3.73107129378057*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313410525121927`*^9, 3.731342395223542*^9, 
  3.7314133849370437`*^9, 3.7325382914003735`*^9, 3.732625565510863*^9, 
  3.7326257283051276`*^9, 3.732637565422224*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox["The",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  StyleBox[" ",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  StyleBox["Third",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  StyleBox[" ",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  StyleBox["one",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  StyleBox[" ",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  StyleBox["is",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  StyleBox[" ",
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain",
   FontColor->RGBColor[0., 0., 0.]], 
  RowBox[{
   StyleBox[
    FormBox[
     RowBox[{
      SubscriptBox["I", "3"], " ", "\[Congruent]", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["C", 
         RowBox[{"i", " ", "j"}]], 
        RowBox[{"k", " ", "l"}]], 
       SuperscriptBox[
        SubscriptBox["C", 
         RowBox[{"k", " ", "l"}]], 
        RowBox[{"m", " ", "n"}]], 
       SuperscriptBox[
        SubscriptBox["C", 
         RowBox[{"m", " ", "n", " "}]], 
        RowBox[{"i", " ", "j"}]]}]}],
     TraditionalForm],
    FontFamily->"Baskerville Old Face",
    FontWeight->"Plain"], 
   StyleBox[".",
    FontFamily->"Baskerville Old Face",
    FontWeight->"Plain"], " "}]}]], "Text",
 CellChangeTimes->{{3.7305666900603256`*^9, 3.7305667340512323`*^9}, {
   3.7310713850507555`*^9, 3.7310714789230103`*^9}, 3.731071589148644*^9, {
   3.732638170521632*^9, 3.732638173224902*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I3", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "4"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "1"}], "4"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WeylDijUkl", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], "*", 
           RowBox[{"WeylDijUkl", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "l", ",", "m", ",", "n"}], "]"}], "]"}], 
           RowBox[{"WeylDijUkl", "[", 
            RowBox[{"[", 
             RowBox[{"m", ",", "n", ",", "i", ",", "j"}], "]"}], "]"}]}], 
          ")"}]}]}]}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730566790270368*^9, 3.7305669072637463`*^9}, {
  3.7305670048077383`*^9, 3.7305670069287815`*^9}, {3.730568425427105*^9, 
  3.730568438880375*^9}, {3.7306450295339394`*^9, 3.7306450553904586`*^9}, {
  3.7310713148720694`*^9, 3.7310713656192923`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["8", 
   SuperscriptBox["\[Rho]", "6"]], "-", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["a", "10"]], 
   RowBox[{"64", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "M"}]}], ")"}], "4"], " ", 
    SuperscriptBox["M", "3"], " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"2", " ", "M"}], "a"]}]], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}], "3"]}]}], "-", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Rho]", "6"]], 
   RowBox[{"64", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
     RowBox[{"9", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "-", 
       FractionBox[
        RowBox[{"2", " ", "a", " ", "M"}], "\[Rho]"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}], "3"]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Rho]", "9"]], 
   RowBox[{"64", " ", 
    SuperscriptBox["a", "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "a"]}], ")"}], 
     RowBox[{"9", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "M"}], "-", "\[Rho]"}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "a"}], "+", "\[Rho]"}], "]"}], "3"]}]}]}]], "Output",
 CellChangeTimes->{3.7313423980225983`*^9, 3.7314133849950495`*^9, 
  3.73253829146138*^9, 3.7326255674549017`*^9, 3.7326257284151297`*^9, 
  3.7326375655422263`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   RowBox[{
    StyleBox["The",
     FontColor->RGBColor[0., 0., 0.]], 
    StyleBox[" ",
     FontColor->RGBColor[0., 0., 0.]], "Fourth", 
    StyleBox[" ",
     FontColor->RGBColor[0., 0., 0.]], 
    StyleBox["one",
     FontColor->RGBColor[0., 0., 0.]], 
    StyleBox[" ",
     FontColor->RGBColor[0., 0., 0.]], 
    StyleBox["is",
     FontColor->RGBColor[0., 0., 0.]], 
    StyleBox[" ",
     FontColor->RGBColor[0., 0., 0.]], 
    RowBox[{
     FormBox[
      RowBox[{
       SubscriptBox["I", "4"], " ", "\[Congruent]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          SubscriptBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["C", 
              RowBox[{"i", " ", "j"}]], 
             RowBox[{"k", " ", "l"}]], "(", 
            SuperscriptBox["C", "*"], ")"}], 
           RowBox[{"k", " ", "l"}]], 
          RowBox[{"m", " ", "n"}]]}], 
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"m", " ", "n", " "}]], 
         RowBox[{"i", " ", "j"}]]}]}],
      TraditionalForm], "."}]}],
   FontFamily->"Baskerville Old Face",
   FontWeight->"Plain"]],
  CellChangeTimes->{{3.7305666900603256`*^9, 3.7305667340512323`*^9}}],
 "\nThis one is also empty."
}], "Text",
 CellChangeTimes->{{3.73056703326231*^9, 3.7305670622499003`*^9}, {
  3.7305674119585075`*^9, 3.730567412288514*^9}, {3.7307251618382607`*^9, 
  3.7307251618382607`*^9}, {3.7310714847851486`*^9, 3.731071504608622*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I4", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"-", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"l", "=", "1"}], "4"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"m", "=", "1"}], "4"], 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "1"}], "4"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WeylDijUkl", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], "*", 
            RowBox[{"DualWeylUijDkl", "[", 
             RowBox[{"[", 
              RowBox[{"m", ",", "n", ",", "k", ",", "l"}], "]"}], "]"}], 
            RowBox[{"WeylDijUkl", "[", 
             RowBox[{"[", 
              RowBox[{"m", ",", "n", ",", "i", ",", "j"}], "]"}], "]"}]}], 
           ")"}]}]}]}]}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730567076558188*^9, 3.7305671019947023`*^9}, {
   3.7306450256448607`*^9, 3.730645026354875*^9}, 3.730725168469924*^9, {
   3.7310715312202616`*^9, 3.731071570431198*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313424019546795`*^9, 3.7314133850630565`*^9, 
  3.732538291533387*^9, 3.7326255721429963`*^9, 3.7326257284451303`*^9, 
  3.7326375656022277`*^9}]
}, Open  ]],

Cell[TextData[{
 "The Fifth is simply the Ricci Scallar, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "5"], "=", "R"}], TraditionalForm]]],
 ". I will set the fifth to it for brevity\[CloseCurlyQuote]s sake."
}], "Text",
 CellChangeTimes->{{3.730567696838261*^9, 3.7305677207217464`*^9}, {
  3.7310649789025*^9, 3.731064980075526*^9}, {3.7312610696020937`*^9, 
  3.731261080299163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I5", "=", "R"}]], "Input",
 CellChangeTimes->{{3.73056772392181*^9, 3.7305677260618534`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313424044807315`*^9, 3.731413385073057*^9, 
  3.732538291540388*^9, 3.7326257284551306`*^9, 3.7326375656022277`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The Sixth one is ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "6"], "\[Congruent]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["S", "i"], "j"], 
     SuperscriptBox[
      SubscriptBox["S", "j"], "i"]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 ". Notice that it is spherically symmetric i.e. it is only dependant on r. \
Also notice the factor of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SuperscriptBox["r", "6"]], TraditionalForm]]],
 "out front."
}], "Text",
 CellChangeTimes->{{3.7107731845267143`*^9, 3.710773214473016*^9}, {
  3.712065422049908*^9, 3.712065442752637*^9}, {3.7153393739654922`*^9, 
  3.715339429785384*^9}, {3.7305666812901497`*^9, 3.730566682130167*^9}, {
  3.7310649892077456`*^9, 3.7310650112602687`*^9}, {3.7310716350447254`*^9, 
  3.7310716528041525`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I6", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SUiDj", "[", 
        RowBox[{"[", 
         RowBox[{"j", ",", "i"}], "]"}], "]"}], 
       RowBox[{"SUiDj", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7107732230992327`*^9, 3.710773325407074*^9}, 
   3.711120365890564*^9, 3.712060418564854*^9, {3.7153382094074717`*^9, 
   3.7153382105755887`*^9}, {3.7310716060490446`*^9, 3.7310716312126374`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.731342406537775*^9, 3.731413385081058*^9, 
  3.7325382915463886`*^9, 3.7326255760430746`*^9, 3.732625728465131*^9, 
  3.732637565612228*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The Seventh one is ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "7"], "\[Congruent]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["S", "i"], "j"], 
     SuperscriptBox[
      SubscriptBox["S", "j"], "k"], 
     SuperscriptBox[
      SubscriptBox["S", "k"], "i"]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 ". Notice that it is spherically symmetric i.e. it is only dependant on r. \
Also notice the factor of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SuperscriptBox["r", "6"]], TraditionalForm]]],
 "out front."
}], "Text",
 CellChangeTimes->{{3.7305671666850543`*^9, 3.7305672146710243`*^9}, 
   3.7310650235655575`*^9, {3.7310717439759564`*^9, 3.731071754327199*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I7", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"SUiDj", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i"}], "]"}], "]"}], 
        RowBox[{"SUiDj", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "j"}], "]"}], "]"}], 
        RowBox[{"SUiDj", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "k"}], "]"}], "]"}]}], ")"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7305672228352337`*^9, 3.7305672829374533`*^9}, {
  3.730568444789499*^9, 3.7305684474375525`*^9}, {3.7306450363890777`*^9, 
  3.730645038709124*^9}, {3.731071757411273*^9, 3.7310717829808865`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.731342408813822*^9, 3.731413385089059*^9, 
  3.732538291552389*^9, 3.7326255781131163`*^9, 3.732625728475131*^9, 
  3.7326375656222277`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The Eigth one is ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "8"], "\[Congruent]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["S", "i"], "j"], 
     SuperscriptBox[
      SubscriptBox["S", "j"], "k"], 
     SuperscriptBox[
      SubscriptBox["S", "k"], "l"], 
     SuperscriptBox[
      SubscriptBox["S", "l"], "i"]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 ". "
}], "Text",
 CellChangeTimes->{{3.7305671666850543`*^9, 3.7305672146710243`*^9}, {
  3.7305672991737804`*^9, 3.7305673307798553`*^9}, {3.731071797591238*^9, 
  3.731071806138447*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I8", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"SUiDj", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i"}], "]"}], "]"}], 
         RowBox[{"SUiDj", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "j"}], "]"}], "]"}], 
         RowBox[{"SUiDj", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "k"}], "]"}], "]"}], 
         RowBox[{"SUiDj", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "l"}], "]"}], "]"}]}], ")"}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7305672228352337`*^9, 3.7305672829374533`*^9}, {
  3.730567337564992*^9, 3.7305673556593575`*^9}, {3.730568450457613*^9, 
  3.730568453277669*^9}, {3.730645040670164*^9, 3.7306450438302274`*^9}, {
  3.731071809475523*^9, 3.7310718416342936`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313424107988625`*^9, 3.7314133850970592`*^9, 
  3.7325382915583897`*^9, 3.73262557979315*^9, 3.732625728475131*^9, 
  3.732637565632228*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The ninth one is ",
  FontFamily->"Baskerville Old Face"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "9"], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["C", 
       RowBox[{"i", " ", "k", " ", "l"}]], "j"], 
     SuperscriptBox["S", 
      RowBox[{"k", " ", "l"}]], 
     SuperscriptBox[
      SubscriptBox["S", "j"], "i"]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face"],
 ".\n",
 StyleBox["This one is empty.",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.710773343672557*^9, 3.710773400627567*^9}, {
  3.710773486574377*^9, 3.7107734917305107`*^9}, {3.730725218982975*^9, 
  3.7307252220232787`*^9}, {3.7310718683009377`*^9, 3.7310718707369957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I9", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "4"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"WeylUjDikl", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], "*", 
          RowBox[{"SUij", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
          RowBox[{"SUiDj", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "k"}], "]"}], "]"}]}], ")"}]}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.710773425258232*^9, 3.7107734803851976`*^9}, 
   3.7111203691286325`*^9, 3.712060419772975*^9, {3.7310718735360603`*^9, 
   3.731071876627138*^9}, {3.731071941754262*^9, 3.7310719897754135`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313424126469035`*^9, 3.731413385108061*^9, 
  3.7325382915793915`*^9, 3.732625581523184*^9, 3.7326257284851313`*^9, 
  3.732637565642228*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["The tenth one is ",
  FontFamily->"Baskerville Old Face",
  FontColor->RGBColor[0., 0., 0.]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "10"], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       SubscriptBox[
        RowBox[{"(", 
         SuperscriptBox["C", "*"], ")"}], 
        RowBox[{"i", " ", "k", " ", "l"}]], "j"]}], 
     SuperscriptBox["S", 
      RowBox[{"k", " ", "l"}]], 
     SuperscriptBox[
      SubscriptBox["S", "j"], "i"]}]}], TraditionalForm]],
  FontFamily->"Baskerville Old Face",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[".\nThis one is also empty.",
  FontFamily->"Baskerville Old Face",
  FontColor->RGBColor[0., 0., 0.]]
}], "Text",
 CellChangeTimes->{{3.71077349809168*^9, 3.710773565136506*^9}, {
  3.710860731357179*^9, 3.7108607361662793`*^9}, {3.730725411208195*^9, 
  3.7307254117992544`*^9}, {3.7310720637552357`*^9, 3.731072065591282*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I10", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "4"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"DualWeylUjDikl", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}]}], "*", 
          RowBox[{"SUij", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
          RowBox[{"SUiDj", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "k"}], "]"}], "]"}]}], ")"}]}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7108606624907236`*^9, 3.710860713283804*^9}, 
   3.711120371658689*^9, 3.7120604215331507`*^9, {3.731072017470132*^9, 
   3.7310720551920347`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.731342415592964*^9, 3.7314133851160617`*^9, 
  3.7325382915873923`*^9, 3.7326255832832193`*^9, 3.7326257284951315`*^9, 
  3.7326375656432285`*^9}]
}, Open  ]],

Cell[TextData[{
 "The eleventh one is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "11"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"j", " ", "n", " ", "o"}]], "i"]}], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"j", " ", "n", " ", "o"}]], "i"]}]}], ")"}], 
     SuperscriptBox["S", 
      RowBox[{"l", " ", "m"}]], 
     SuperscriptBox["S", 
      RowBox[{"n", " ", "o"}]]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7307254183679113`*^9, 3.7307254297210464`*^9}, {
  3.7307254915392275`*^9, 3.730725525229596*^9}, {3.730725570607134*^9, 
  3.7307256934124126`*^9}, {3.7307257682949004`*^9, 3.7307257691119823`*^9}, {
  3.731072067535328*^9, 3.731072070438399*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I11", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "4"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "1"}], "4"], 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"o", "=", "1"}], "4"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i", ",", "n", ",", "o"}], "]"}], "]"}]}], 
              "+", 
              RowBox[{
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i", ",", "n", ",", "o"}], "]"}], 
                "]"}]}]}], ")"}], "*", 
            RowBox[{"SUij", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
            RowBox[{"SUij", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "o"}], "]"}], "]"}]}], ")"}]}]}]}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.730741194137826*^9, 3.730741334920052*^9}, {
  3.7310720991520853`*^9, 3.7310721443021793`*^9}, {3.731072206977679*^9, 
  3.73107223620337*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.731342418371023*^9, 3.7314133852080708`*^9, 
  3.732538291676401*^9, 3.732625585153257*^9, 3.7326257285851336`*^9, 
  3.7326375657382326`*^9}]
}, Open  ]],

Cell[TextData[{
 "The twelth one is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "12"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"j", " ", "n", " ", "o"}]], "i"]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"j", " ", "n", " ", "o"}]], "i"]}]}], ")"}], 
     SuperscriptBox["S", 
      RowBox[{"l", " ", "m"}]], 
     SuperscriptBox["S", 
      RowBox[{"n", " ", "o"}]]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7307254183679113`*^9, 3.7307254297210464`*^9}, {
  3.7307254915392275`*^9, 3.730725525229596*^9}, {3.730725570607134*^9, 
  3.7307256934124126`*^9}, {3.7307257682949004`*^9, 3.7307257691119823`*^9}, {
  3.7307413474113855`*^9, 3.730741353793534*^9}, {3.7307414150769415`*^9, 
  3.73074145034175*^9}, {3.7310730346354704`*^9, 3.7310730383705597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I12", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "4"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "1"}], "4"], 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"o", "=", "1"}], "4"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i", ",", "n", ",", "o"}], "]"}], "]"}]}], 
              "+", 
              RowBox[{
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i", ",", "n", ",", "o"}], "]"}], 
                "]"}]}]}], ")"}], "*", 
            RowBox[{"SUij", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
            RowBox[{"SUiDj", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "o"}], "]"}], "]"}]}], ")"}]}]}]}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.730741194137826*^9, 3.730741334920052*^9}, {
  3.7307413891923437`*^9, 3.730741392666422*^9}, {3.7307414829355373`*^9, 
  3.730741483263547*^9}, {3.7310729577686377`*^9, 3.731072997385583*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.731342421050079*^9, 3.73141338529908*^9, 
  3.73253829176241*^9, 3.7326255874343023`*^9, 3.7326257287151356`*^9, 
  3.732637565828234*^9}]
}, Open  ]],

Cell[TextData[{
 "The thirteenth one is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "13"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"j", " ", "n", " ", "o"}]], "k"]}], "+", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"j", " ", "n", " ", "o"}]], "k"]}]}], ")"}], 
     SuperscriptBox["S", 
      RowBox[{"l", " ", "m"}]], 
     SuperscriptBox["S", 
      RowBox[{"n", " ", "o"}]], 
     SuperscriptBox[
      SubscriptBox["S", "k"], "i"]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7307254183679113`*^9, 3.7307254297210464`*^9}, {
  3.7307254915392275`*^9, 3.730725525229596*^9}, {3.730725570607134*^9, 
  3.7307256934124126`*^9}, {3.7307257682949004`*^9, 3.7307257691119823`*^9}, {
  3.7307414871836357`*^9, 3.730741498045887*^9}, {3.730741537929802*^9, 
  3.730741563461387*^9}, {3.731073042089644*^9, 3.7310730465427513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I13", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "4"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "1"}], "4"], 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"o", "=", "1"}], "4"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "k", ",", "n", ",", "o"}], "]"}], "]"}]}], 
              "+", 
              RowBox[{
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "k", ",", "n", ",", "o"}], "]"}], 
                "]"}]}]}], ")"}], "*", 
            RowBox[{"SUij", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
            RowBox[{"SUij", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "o"}], "]"}], "]"}], 
            RowBox[{"SUiDj", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k"}], "]"}], "]"}]}], ")"}]}]}]}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.730741194137826*^9, 3.730741334920052*^9}, {
  3.7307414768463974`*^9, 3.7307414774824123`*^9}, {3.730741569701528*^9, 
  3.7307415973641624`*^9}, {3.7310730126579533`*^9, 3.731073072236356*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313424235351295`*^9, 3.7314133854050903`*^9, 
  3.7325382918614197`*^9, 3.732625589604346*^9, 3.732625728815138*^9, 
  3.732637565938236*^9}]
}, Open  ]],

Cell[TextData[{
 "The fourteenth one is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "14"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"j", " ", "n", " ", "o"}]], "k"]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          SuperscriptBox["C", "*"], 
          RowBox[{"i", " ", "l", " ", "m"}]], "j"], 
        SuperscriptBox[
         SubscriptBox["C", 
          RowBox[{"j", " ", "n", " ", "o"}]], "k"]}]}], ")"}], 
     SuperscriptBox["S", 
      RowBox[{"l", " ", "m"}]], 
     SuperscriptBox["S", 
      RowBox[{"n", " ", "o"}]], 
     SuperscriptBox[
      SubscriptBox["S", "k"], "i"]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7307254183679113`*^9, 3.7307254297210464`*^9}, {
  3.7307254915392275`*^9, 3.730725525229596*^9}, {3.730725570607134*^9, 
  3.7307256934124126`*^9}, {3.7307257682949004`*^9, 3.7307257691119823`*^9}, {
  3.7307413474113855`*^9, 3.730741353793534*^9}, {3.7307414150769415`*^9, 
  3.73074145034175*^9}, {3.7307416050643406`*^9, 3.7307416198956823`*^9}, {
  3.7310731012990584`*^9, 3.7310731185264707`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I14", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "4"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "4"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "4"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"m", "=", "1"}], "4"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "1"}], "4"], 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"o", "=", "1"}], "4"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "k", ",", "n", ",", "o"}], "]"}], "]"}]}], 
              "+", 
              RowBox[{
               RowBox[{"DualWeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "l", ",", "m"}], "]"}], "]"}], 
               RowBox[{"WeylUjDikl", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "k", ",", "n", ",", "o"}], "]"}], 
                "]"}]}]}], ")"}], "*", 
            RowBox[{"SUij", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "*", 
            RowBox[{"SUij", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "o"}], "]"}], "]"}], 
            RowBox[{"SUiDj", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k"}], "]"}], "]"}]}], ")"}]}]}]}]}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.730741194137826*^9, 3.730741334920052*^9}, {
  3.7307413891923437`*^9, 3.730741392666422*^9}, {3.730741479182453*^9, 
  3.730741479573462*^9}, {3.730741629072893*^9, 3.7307416419261837`*^9}, {
  3.731073175430827*^9, 3.7310732366862955`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7313424260901823`*^9, 3.7314133855081005`*^9, 
  3.73253829195743*^9, 3.732625591614386*^9, 3.73262572891514*^9, 
  3.7326375660282383`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Indepenence of the Invariants", "Section",
 CellChangeTimes->{{3.7111184744750123`*^9, 3.711118482316188*^9}, {
  3.7310650544672947`*^9, 3.7310650603344407`*^9}}],

Cell[TextData[{
 StyleBox["Now that we have all 14 invariants, we need to determine what is \
the minimum number of linearly independent invariants. Since ",
  FontFamily->"Baskerville Old Face"],
 "all but I1 and I3 are zero, I will focus on the two non-zero functions: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "1"], " ", "and", " ", 
    SubscriptBox["I", "3"]}], TraditionalForm]]],
 ". We will compute the Wronskian to check if they are linearly independant \
or not. If the Wronskian is nonzero, they are linearly independant. If it is \
zero, they are linearly dependant. Upon computation, the Wronskian is \
non-zero thuse they are linearly independant."
}], "Text",
 CellChangeTimes->{{3.7111184879973145`*^9, 3.7111185995508213`*^9}, {
  3.7111208488639545`*^9, 3.7111208755435224`*^9}, {3.7310650637455215`*^9, 
  3.7310650819269543`*^9}, {3.7310651270993404`*^9, 3.7310653419430866`*^9}, {
  3.731256883006522*^9, 3.731256988243045*^9}, {3.7312570915349855`*^9, 
  3.73125716211057*^9}, {3.731262128128936*^9, 3.731262128391962*^9}, {
  3.731342660413129*^9, 3.731342667312272*^9}, {3.7313430124468637`*^9, 
  3.7313430444965253`*^9}, {3.731343114103962*^9, 3.731343115791997*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"b", ",", "\[CapitalPhi]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Wronskian", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"I1", ",", "I3"}], "}"}], ",", "\[Eta]"}], "]"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.731065300019086*^9, 3.731065317249499*^9}, {
  3.731065350571295*^9, 3.731065353099354*^9}, {3.7310654306034656`*^9, 
  3.731065440131687*^9}, {3.731248909609005*^9, 3.7312489423672805`*^9}, {
  3.7312547371929617`*^9, 3.731254847733015*^9}, {3.731254882359477*^9, 
  3.7312549285050917`*^9}, {3.7312551240736465`*^9, 3.7312551417304115`*^9}, {
  3.7312551938606243`*^9, 3.7312551988931274`*^9}, {3.731259532659064*^9, 
  3.7312595334870825`*^9}, {3.7312595646100516`*^9, 3.731259645546897*^9}, {
  3.7313430553117476`*^9, 3.7313430700660505`*^9}, {3.732625596144477*^9, 
  3.732625599227538*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting the Invariants", "Section",
 CellChangeTimes->{{3.7111184744750123`*^9, 3.711118482316188*^9}}],

Cell[TextData[{
 StyleBox["Now that the program has calculated each one of the identified \
Invariants, we need to plot each one to inspect them for transversability. \
Thanks to Cooper Watson\[CloseCurlyQuote]s program \
\[OpenCurlyDoubleQuote]Kerr_newman_skeleton_file.nb\[CloseCurlyDoubleQuote] \
for the ",
  FontFamily->"Baskerville Old Face"],
 StyleBox["Mathematica",
  FontFamily->"Baskerville Old Face",
  FontSlant->"Italic"],
 StyleBox[" code lines to accomplish this. Since our invariants are functions \
of a single variable, r, we will evaluate these as plots.",
  FontFamily->"Baskerville Old Face"]
}], "Text",
 CellChangeTimes->{{3.7111184879973145`*^9, 3.7111185995508213`*^9}, {
  3.7111208488639545`*^9, 3.7111208755435224`*^9}}],

Cell[TextData[StyleBox["First, we need to define our varibles. We will \
normalize M=1. According to Visser, this implies that a=3/2.",
 FontFamily->"Baskerville Old Face"]], "Text",
 CellChangeTimes->{{3.711118935385335*^9, 3.711118958705862*^9}, {
  3.71206082566356*^9, 3.712060841543148*^9}, {3.7153392211242914`*^9, 
  3.7153392427470193`*^9}, {3.7325556472483945`*^9, 3.7325556855852275`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "\[Rho]", ",", "M", ",", "\[Eta]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"3", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1"}], 
  ";"}], "\[IndentingNewLine]", "I1", "\[IndentingNewLine]", "I3", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "I1", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711118972903195*^9, 3.7111190280553885`*^9}, {
   3.7111190894887085`*^9, 3.711119096890872*^9}, 3.711119147641968*^9, {
   3.711119178077651*^9, 3.7111192030391874`*^9}, {3.7111197141823025`*^9, 
   3.7111197339687576`*^9}, {3.7111204544355497`*^9, 
   3.7111204689378815`*^9}, {3.7111205178539715`*^9, 3.711120527382185*^9}, {
   3.7111206650537443`*^9, 3.7111206653217506`*^9}, {3.7111212137056346`*^9, 
   3.7111212138396387`*^9}, {3.711122131118634*^9, 3.711122134104695*^9}, {
   3.711724319171626*^9, 3.711724321550864*^9}, {3.7117245365991597`*^9, 
   3.7117245391372166`*^9}, {3.7120604071967173`*^9, 
   3.7120604093729353`*^9}, {3.7120605560426006`*^9, 
   3.7120605687718735`*^9}, {3.7120606531513104`*^9, 
   3.7120606608720827`*^9}, {3.7153391844190407`*^9, 
   3.7153391959394245`*^9}, {3.7213942126780243`*^9, 3.72139422979655*^9}, {
   3.721394659667864*^9, 3.7213946702731943`*^9}, 3.7213947047562804`*^9, {
   3.7213947519477477`*^9, 3.721394753932808*^9}, {3.72139496732897*^9, 
   3.721395012477429*^9}, {3.7213950442714186`*^9, 3.7213951047283087`*^9}, {
   3.7213951561658998`*^9, 3.721395156321909*^9}, {3.721395186912896*^9, 
   3.7213952828438864`*^9}, 3.721397018254436*^9, {3.721397163051649*^9, 
   3.721397252101862*^9}, {3.7213973198053036`*^9, 3.7213973366109133`*^9}, {
   3.73134313168337*^9, 3.7313431322933826`*^9}, 3.7325341107963552`*^9, {
   3.732536862644512*^9, 3.732536862811529*^9}, 3.7325383202932625`*^9, {
   3.732539325983822*^9, 3.732539411235346*^9}, 3.7325396190201225`*^9, {
   3.7325406817483845`*^9, 3.732540740597269*^9}, {3.7325408949407015`*^9, 
   3.732540903452553*^9}, {3.7325409582310305`*^9, 3.7325410195451612`*^9}, {
   3.7325512384953938`*^9, 3.7325512403114333`*^9}, {3.73255128587142*^9, 
   3.732551287569459*^9}, {3.7325517047761154`*^9, 3.732551765828451*^9}, {
   3.7325518030082645`*^9, 3.7325518036412787`*^9}, {3.732552113373459*^9, 
   3.732552118178562*^9}, 3.7325549814528217`*^9, {3.7325554789455657`*^9, 
   3.732555479449616*^9}, {3.7325556117598457`*^9, 3.7325556125589256`*^9}, {
   3.732555692770946*^9, 3.7325557042740965`*^9}, 3.732622421449938*^9, {
   3.7326245175678625`*^9, 3.732624531565144*^9}, {3.732624582301162*^9, 
   3.7326246422263627`*^9}, {3.7326256026856084`*^9, 3.732625608115717*^9}, {
   3.732637591518772*^9, 3.732637593317809*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["4", 
   SuperscriptBox["\[Rho]", "4"]], "-", 
  FractionBox[
   RowBox[{"1024", " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "\[Rho]"}]}], "]"}], "2"]}], "2187"], "-", 
  FractionBox[
   RowBox[{"16", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Rho]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "\[Rho]"}]}], "]"}], "2"]}], 
   RowBox[{"3", " ", 
    SuperscriptBox["\[Rho]", "6"]}]], "-", 
  FractionBox[
   RowBox[{"16", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Rho]"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "\[Rho]"}]}], "]"}], "2"]}], 
   RowBox[{"3", " ", 
    SuperscriptBox["\[Rho]", "6"]}]]}]], "Output",
 CellChangeTimes->{3.732625608865732*^9, 3.73262572892514*^9, 
  3.7326375660482388`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["8", 
   SuperscriptBox["\[Rho]", "6"]], "-", 
  FractionBox[
   RowBox[{"32768", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "\[Rho]"}]}], "]"}], "3"]}], 
   RowBox[{"59049", " ", 
    SqrtBox["3"]}]], "-", 
  FractionBox[
   RowBox[{"512", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["3", "2"], "-", 
       FractionBox["3", "\[Rho]"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "\[Rho]"}]}], "]"}], "3"]}], 
   RowBox[{"81", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox["\[Rho]", "6"]}]], "+", 
  FractionBox[
   RowBox[{"64", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "-", "\[Rho]"}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"DiracDelta", "[", 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"2", " ", "\[Rho]"}]}], "]"}], "3"]}], 
   RowBox[{"3", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox["\[Rho]", "9"]}]]}]], "Output",
 CellChangeTimes->{3.732625608865732*^9, 3.73262572892514*^9, 
  3.7326375660482388`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Plot of I1.\nNotice that the function has an \
asymptote at r=0,2.",
 FontFamily->"Baskerville Old Face"]], "Text",
 CellChangeTimes->{{3.7111202589332714`*^9, 3.711120266034423*^9}, {
  3.7111210610546007`*^9, 3.7111210824010468`*^9}, {3.7111211209058647`*^9, 
  3.711121135510187*^9}, {3.712061046536645*^9, 3.7120610526242537`*^9}, {
  3.721401108647608*^9, 3.721401109787642*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", "I1", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Orange", ",", 
      RowBox[{"Opacity", "[", "0.7", "]"}], ",", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", "10"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Framed", "[", "\"\<Plot of Sc I1\>\"", "]"}], ",", "Red", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "\"\<\[Rho]\>\"", "]"}], ",", "Bold", ",", 
        "Red"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "\"\<\[Rho]\>\"", "]"}], ",", "Bold", ",", 
        "Red"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "\"\<I1\>\"", "]"}], ",", "Bold", ",", "Red"}],
        "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7111186860807405`*^9, 3.711118729094694*^9}, {
   3.7111188843182116`*^9, 3.711118901775601*^9}, {3.711119042153698*^9, 
   3.711119109220134*^9}, {3.7111191886868753`*^9, 3.7111191907609205`*^9}, {
   3.7111195573159637`*^9, 3.711119579927452*^9}, {3.7111196603271565`*^9, 
   3.711119694838891*^9}, {3.711119753071187*^9, 3.7111197534131937`*^9}, {
   3.711119837287016*^9, 3.7111198393380594`*^9}, {3.7111204836852107`*^9, 
   3.711120505212697*^9}, {3.7111205451355844`*^9, 3.7111205894355755`*^9}, {
   3.711120645435298*^9, 3.7111206985974894`*^9}, {3.7111207688862343`*^9, 
   3.711120773255328*^9}, {3.711120887204854*^9, 3.711120978471832*^9}, {
   3.711121084581092*^9, 3.7111211141007185`*^9}, {3.7117245015463657`*^9, 
   3.7117245025323877`*^9}, {3.711724543048299*^9, 3.711724563900759*^9}, {
   3.712060646423638*^9, 3.7120606762246175`*^9}, 3.712061026527644*^9, {
   3.712065223729379*^9, 3.7120652632903657`*^9}, {3.7147570889895573`*^9, 
   3.714757105758562*^9}, 3.71475714719176*^9, {3.7213940135698323`*^9, 
   3.7213940166149254`*^9}, {3.721394067216503*^9, 3.7213940887151766`*^9}, {
   3.7213946924978943`*^9, 3.7213946929889092`*^9}, {3.7213948187788253`*^9, 
   3.7213948191188354`*^9}, {3.721394886110914*^9, 3.72139488633092*^9}, {
   3.721397215246533*^9, 3.721397216383574*^9}, {3.721397259934141*^9, 
   3.7213972609721785`*^9}, {3.7214012338492947`*^9, 3.7214012493717613`*^9}, 
   3.7313248005907345`*^9, {3.731343397776861*^9, 3.7313434106411257`*^9}, {
   3.7313435252265406`*^9, 3.73134353865082*^9}, {3.7314133625748076`*^9, 
   3.7314133700625563`*^9}, {3.7325548371813955`*^9, 3.732554856478325*^9}, {
   3.732554897072384*^9, 3.732554942753952*^9}, {3.7325557445491233`*^9, 
   3.7325557895586243`*^9}, {3.7326245468154488`*^9, 
   3.7326245596867085`*^9}, {3.7326246456664314`*^9, 
   3.7326246497045126`*^9}, {3.732625614475844*^9, 3.732625633478225*^9}, {
   3.732625688921337*^9, 3.732625689091341*^9}, {3.7326257822592087`*^9, 
   3.7326257823792105`*^9}, {3.732637703418084*^9, 3.7326377124582696`*^9}, {
   3.7326377567321873`*^9, 3.7326377844297605`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
hSu7gFuGiGVwRWE7UlFp5LnK1Q3cLmdryIyx7EBZFp3ykcXdwO3MRsUW5+2d
6EzBoD5PYA9wOynHjucRWxdqk+BwOWjeC9z2RrUv1AruQvcvT85x0uoDbs8e
exuSdUiTcSgvNlnm2BXg9vvbVbOXmDmid+2x0rfWeAO3dc1X30ia+aBBV8Gl
N9dg4HbgzQ9hubQQZP35lHj+uUTgluv9VDVJsyj0/c96d8M1acDtlMuY3/db
HNKSeiZqdv83cCuKdNM2pSUhveyOwrxzucDtPKEZb+LafyIjk5OOkmqFwK1V
+5mlkmbp6MmylLOGa0qBW9ujsry67zORaqO91RnzcuD2Q+yURp9vWehXVHrP
8/uVwK3T8pof3ZE5SN2G64ivQTVw62Yd8W1TWh7KvyQfnneuFrj98sfy5f2y
AnRK0UCc7Ug9cPtd54JeXHsRqpr++b6kWiNw65eO9vBMLEWXmorLd6Nm4LZw
Np+YpFkZao+ets1wTStwe2KfoWmyZTkK/7Hw9y/LNuC29El536X3FeheEHp8
xrwduNUMU7sg4FqJFJ2Orut50gHcVrUE5/t8q0Ic5jdqnt/vBG61JSR2qAdW
o0RDi3fif/3iMW4vmvdL2SbUIjW1hP5tuj3AbVPU2feb0urQlA3lnnnneoFb
ve40vuLcepQ5f+iY7qk+4LZtqdyd+2UNyHqyKD/bkX7g1uCke9P8+kZ0uHc1
8+3+Adb71lLoRFx7E5pZoaYvqTYI3N5KvJOqPdCMSn/qzAtXGgJul9dKtr1K
U2dE+O6c9yznKnAr9Xy21ccqS+Qr83BkcIIvcPtFyLHbocoZeQ2mXhmcEA3c
RpasdmrS+IY4igvKbz1OBm7rsjXdHar80IrSa0sHJ2QAt9cipIbiHIL/nuMG
ykO3ZgO3Q86d+5o0ItCjKBP7W4/zgdvYbSW/eUyj0IrV3Oob4ouBW+6QmHsO
VTGoKT2Bc3BCOXCrtsxj6WrFeKTIw3vmqEQlcPvm44usOIdEZKO4ixm6tRq4
zRa6cv/wQDJqMrKYOeNsLXA788kBqSaNn0jR77fhrcf1wO2pvo3Z9/1/IZuG
6b9zXRuB28xAgSge03TUuODoyg3xzcDtjVYTa/WgDLTlmMMLm+pW4FZ0aedF
h6pM9GN7W+fAhHbgNvTMOYXaqVmop1rIWWpaB3B7/EOuyGrFbDT/4dq9RyU6
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
S7ZVALfWfrUn5qNCHLTSsyZetAq4Lbpq/FkutBhzT7/zWKuxGrh9Y/us33NG
GT48tGsBO64FbmVuZcwJ0SjHXyrmRn20rAdu8w7N2hb/tgIPJrWfkNduBG6N
N5y7kJleiXd6xw7myzYDt3NFvV+V8lfjD9bWdjf5W4HbmJ4+/6YdNbg30v+9
2ZU24PZczpb8/me1eK7vh4tHjraz3rdB5n+44uuwqusT2SXbOoDbr9Y5EsIT
GvCVd3qTeld0ArcdBy7qSd9pwtF3Fdyt2LuBW2uZgLdyoc24/srSG1qN3cDt
RuE/Iao9LXjq2anb1mT3ALct/RKtnjPa8KZDg1PZcS9wi+uTHqwOacNaO6rK
0z73Abdv8i8Lh2i04xebU30+WvYDt2eTp3owuttx4Kqg+5fvDAC3AY1lW86U
X2RuWaqtf9bwAnAr/W2o3t75C17/3r7wsupn4FbUvn2qvXMoDr9ZO+Wyaghw
O1nf4HCnbCxuTmez27c+BridLKTrYeecjIer+T11VZOA26f5awY/caZjgcGZ
4c+O/gJun3p6L+iU/Y2nTBLW3rc+E7h9arx8h7JeDraxtG85ibKB2ydqX67a
OefjOeLzb+qq5gG3T8QX2zXlFGE3D48Ro32FwO2Wm/vKPnGW4RVrpE2fHS0B
bmNKp1xP/lSOj548apriWwbcblH9xd0pW4k/ujio7VtfAdzG+Ji/n51VhSvq
ygTzwiqB2y0zdq5U1qvBi6UXZp9E1cBtzAOeWP1JdfjiNR276tga4HZLQ6KG
nXM99grxPKGrWgfcxux/2hAj34g7hpvnd/6sB263hG+715TThNdvXV1jtK8R
uI2RmDh1+tUWbGR63ZMtpwm4nZ9QlvmJsw1HpgbrPTvaAtxqDuAPAZltmH3a
4BqB0lbgtuzMvVUluh047ldUMf/1duB23rsTAx2ynVj7agXat74DuD39Qz6O
m7sLTxLmcLbq6wBuHUdmvZqd1YU9gxZx5IV1ArdlawcPrXbqxmpHVLRn3e0C
buedL5ivrNeDWwbPJ51E3cCt5ofQxqNyvfjNRzMpZ/Ye4La0g2dtbKg+M23y
Bz//6VrArUyDH8dTRS+sXFT0Vl3GGbj9kF7F9USRiX0ZkoP7ZfyA2ynTQ55I
+CZgNOX08ju7w4Hb9NjhZ48Vf+Fa/Z9e+2VigNvkkPnxHXWZWDrvvIpOdAJw
++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
VTWv0gquQq1PllQ5adWBnm9tJ1vt2V2L3lgsFp9+pRH0XK22rFeuuh6teb9Q
w+xOC+iZPrL96JI7Tahh/xuV+3FtoOcz/60WbNn/zRF+bdKZ3gl6avD/jjac
9/c8dkbAYcWhbtBzsc6ZzqZLnWj5+ZehOsU9oOd2hnOGzsB35FuFRSKUIkDP
x7aVyjoDkUiLUWMZrvQT9OyYZLw/1TgBbVAyfKkmkw16uig9ZtcZSEWbLxnt
C1cqAj2XRisfNonIRE6qTF7rr+Wgp8mpHytTjXOQSyHWVZOpBj3zhvdwz5Qr
QG560b8mRtaBnis/ZJVoDxQjD/bYVeFKTaDnVoflhflFZeiLVZylwa9W0FO/
qUXZJKIC5UzTGrD62g56vpfz9Vv8oQodKtb62qbfCXp25K8zu3asDh25co7/
c18P6DlnaV/3DLkGVCCrzZwY2Qd67rgVphk1swkdm6ijf+rBAOi5Lvz6upVz
nVDRgg25OtlM0PP6/fU10nN9UX79Q1Wd7F+g524nv9UJXqFowfzA/fzzckFP
K813TOm50ehI6hJ2newS0POBwcGzA9rxKFH+16HTSpWg5+VH03gTvJJR+dRJ
K/nn1YKeR60yvN/0pKKhOkWusIEG0NMlM9FTem4Gmo6Ni7WzW0DPGYXud4W3
/ka2KUcLeA63g56vK5/sHdDORm6BvUqnlTpBT86msxJlZrnI39HKN2hNN0vP
oQXJXzMLUarhL1Mt/n7Q8zznhA9veopRgealrtCBAdCz9emVYDn+MlSrNum0
YN0Q6Jk7q85AJMQYGTZ8ODnciUFPsckfO4RDXqAb6mEpQ51poKcEZ5X1lBQr
lCc27dpwD0vPTRxGfsIh71EPd7LJUGcp6PmZ/VntZHUn9NwYJd7tY+m59kHG
jSkprkj02szdwz0sPSPZZnNMVfyM3C52Z93pbgQ9VU20LYVDvqK1Z9KPDXW2
gp6/R3zmia70RuXfDrZv7mfp6Y3v5k5W90Wfl8QG3O1j6Xl9xHnOKwF/pO+6
6lZkL0vPkXvN3yyeBKHh93wj8j0sPeOZU7uEFENQnKhRzJ3uQdDT7M8GubdD
oejF25onEV3DoGeEuvc6lUAr3Bt2S3q6FUvPof7cbOVAV+wxsu+DiBVLz5k7
8gQbpnjjhnR/QUFvlp6zdzW5KQcGYDZnhrqIFUvPZTd0t9pWhOIXoVU7Xkaw
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
25guFYpNV3nbhdVrvlM0izTW+dTnA/+kH/G0ybu9SoJH7CFlWcy7+oOuRSDe
66SSGjbnpt+vr1t9lXJrjnuH8vdSIKRVGECbF3fITT0YPkUpVX/5ZH9+BXBi
OrxYEZtLefOrHotpUfZ4Mpfs6qkG/XE5Rruxye33nTlsBFD8ax9ukV1WD07d
UPlNm8ppVH/9t3KUnwkxLTxbmsHqGx/UeLH572V9wMbzmylrF2+T51JpA9ab
136lzU0/jQRGHHkoh0Pb61yK20HU/KkzrthM7F5hadezkmJ75NOz5QadoLXK
ezkHNiuWdBvZJrNSoofPb38x1AXWxBan0CalINnU2GERpdVvbSXLkx5wyJ3r
Jis2gWSAz41jc4BfsczOgasP2JppCzliszT6S/8v+wlAVRHtgvyDYJSrjZKG
zTrL+3oJqgPA6v6NqKfeQ0DhggaXAzbHyi8/8BptAy+TwdXZm8MgverXH9oU
YTrDWiDRDDa7ftibrIDpXs6lINpMvPdyt3t2PUi5NLPSan4EjP9csKZNjb2z
KQ1K1eCUrH7L7uxR4PbJ/+QebMbsr9LrdSgHA0vj4ydcxoCEu6LUJDaFE12i
rt8sAS8qeV7F6Y6DzMe1S+Ox+dtuwrO1uhD8C9UP+PHFCYx8Ktl23/k92GN6
8IGs6XHlPcbZAmMWUUBIWLtBsCkDaP2KdF7qEUPRe/NksdxMKhjscH9ltKYY
3LdUSdxj94iSYuR/fw/MAoVUq6/7KdXga1JD5JlUfcoBGZft7BtzAQgb2CV+
sh5s6A6zDmw9TPkzb91VaZcPKrRkWtjlmoC0RmxR+B1lyrG8a0GhTf+AW9r1
sAXFFnD5RJumhJYCZYfM5+Wfj5WAhfCm3T3HOoCQZf4q1bAtlPh5z6y70eXg
pt+pnHKjHvBsi7WR4Q9eCsh7Yquyuho02OfpplsOgOSclAjeTjbK052W58Iz
asChWfuVtb8GgVqbZ+X1S4spOX6396y+VwfEdm0cLs8eAuqbLKwfvZkHy+aN
+ay3NIDF5qllRXnY84r/rqy+9STQNNpm8uVAE0jumHifUzYKku6396nuGgQ/
PH1mvpQ2g+dxCxuXJY+DtBMVLCGt7aBw5zrh+0GtYFvJ9W0xXZPgRmLjFfHk
BjDc6sP11boNsK5cxhnRPwUuPjj1XZK1BvC8XrVQe6IdtGiEDIdiz0VVtfNr
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
GWHnSAQO4/g50gh2jkTg0IufI0X802/rf3ARfpw=
   "], {{
     {RGBColor[1, 0.5, 0], Opacity[0.7], EdgeForm[None], Specularity[
       GrayLevel[1], 10], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
I5+dY19q516ejfxf3ovvkV8GHhudJvILwf2dvKcXgDvg38G3g+cGL+XYoO9X
aK/S11nI/6afb9H5jnF4CrJp0bkS+Xid4JvBM4MXBN8EngE8H3g+rufNdn7v
jcin004AXwueHDwr+BrwpJ3YFbeC5wAvBr4KPGEnNsYrtNvqWRfmp8+32sGV
16h9w/fX+H5HPWNsAXTebgdrM91Vz1pzC33ORp+L2B94LvAS4PVc2/mNi/Mb
5+G5v+Q+iDE8F/gFfwt4R+0k2sK+z3zuQluRti7HnoTeXuADaPvTJnde5XPv
Zo4bQtu1HHMQbRBttqK7V9E/hM/9aHvQDi7H2of7td1o7uF2Kf1sV/R2pq1C
O770NQU6O5TrsM8jyrm3p+1ZsH3cT2fvNmIfPsK92riKPfkg7f1G8MPIN6qi
8yh4E/AH4JP5rQs6BzVzrsFlL3ka8gWQjwU+hrYvbfZynfuVaz284JWb6ecU
2j7goeX3TlbLcfuUY/cp/Xiv7uXcbzdiPx9Wzut0tX/5vQOL7LByv/Yr5xtU
+j649O89OLTcE3UOKddzYtkXN4rOEeVeDyty7+3X3Ieh3Ie5+L5QLc/W8XBQ
uc6dSz8n0I6kbcv7UjEOp6zlGoaWMXRU6XdgeW7DSv+neF9ow0tfR5fne3S5
p96TU8r32cs5Dyr3x99+YLkng4p85/Jbh5Tn/zvXfwLXv2q5hhHl9x7CdY7H
dS5Wy3g+leeyKPhU/n9cuTbxSNqx5f6OKNe/b7k2z3UFx63qew6+m47fbMSe
f5DzblAFL4nOB7xTh2pLg993fwceqM3Mu7w2eouB33WfiHwR8NvuB8H30s86
/P/Zsk95Rpuk7FOeco0u+9xbwPM3Yp/f5rwEHrub/c5z4PvoZ136eaHsWe7Q
16GdDP4IPBS8nftWrmct9JYBf4L8COR3cuwayB5rZK54WfsH/I/n43dPQpsP
+avIN9DWBb+hTaJtz7FDOHYydD4E71dFf0t0zuZcq/H9Ffcy7m8a2Vs9z7Fr
gZcDf6aNB76DY1dH9xHwNsjP4dg1+f6S/gTad2XuehH9dcDPob9tlT7vpL3e
yB5qCnTudr4Fn2W/jezLnkJ/S/S/AD8N3qrKmn4v42Qr7XbnIvfRnHf9ci8+
bmQP67P5qhF97++3tG9oz9DP1lXwQ+ANq7zLj4E3rbLn9fd82Ah+HPlmVfq8
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
YiE+68N6iYXIQ3i2Cj/Z2P1jVTjJzrFH9hLzMLb+ZBV+smvBsF7iK8az3q3C
lZXD8FIVfqO5yf9U2Wc5hx/VSxxFDsPzVTjMxgHfr8KhNQ5oTNCYp/G+n6pw
fc1N/quK/8e1QY6pNTEuayXObk0P4/jG4q3j4dppzF65NRb+qOIjOqUVbq3H
Wovg9yo+K9eLw3uJ2Rj7kIu7dyNxt4+q8AyNOf6vCqfXWgS/VOGcGx80dik3
2Jj1d1W4zfIN3qnCYb6qP7zrM5upJ+DcqF/R3OQ5O9nPut4N7yV2JX9Vn7G5
RfeW+VMfpjn4U3biZzCPex7wNPXUE3Ae1k9ojENOr/k+5l9P1sne3xiQ/N5B
jayLxoJ2Kuvm0b3ES+4v87z+T3kXb1bhYZqvPXsne3Dz66fuxCfgPsDcc/fS
F/Unx9Ax7Zpt7Eg/iRySV6twOOWWvF6FF2qcxViKeUbmlc/UiU/AuejQXnzl
cnqNiZnjY175tJ3s6809n74TP4O53rN24gdw7j2kl3ibXGVjeuYoGc/9vAqn
yzjpp1X4ovIy5GdYI0Wbytx/13btNHP8Xf+1Y4y9WWdG374xNbE2lXby48Vm
O76X+JY8EGNf9m1MxLiZcVb3Kdak0i42D7Tqxlev79d6Vto1+l7c+1gryT2y
dai0y7STjCdY4+XnTuq3GLd132T9K+1943HytK0Pc3nx++lL1o/hfsd8EOfV
k3vhJ8khka90TLHTTuolRui8fUov/Gz9HtYHc0/p3H5qL3FBYxbGH70e7TZj
F0OKvXpCL7E07b0Te4m3Of+P7IULdVUz76/+wKtb4bpY98a53tiS2GuSf2Od
HH0g1oBy7+K+3jpR7oFcg07rJQYp30kOzGWN8FjkyVxS5vkzeonHmD9rfZsn
yrpwei9xl0tb4e04BuT+yAGyTo68gi+r8Pa1v+XFOLfIMfi6Sl6DfhhriLnH
ct+hX9oaEfJbjJ1d38g+wppm+lFcC42ZWWNH35F10vQlyMOR/6P8qla4Pf52
bWU5Pf4WfUrWWNMXYozbuLd5hfJ5jM1Zf8l9kDWI9PG4n9Ifbl0s91/WQBtR
9jjWttJPc30rMTtrSTlG5QSIXaeN4dnnmK3k0OkPma2Vuhn6grRZzTuyrtoU
7FV/aybvT56P/kl/+1TI/2qm1tBC3PM3O8kjkBf0dyf3ekrj153w9tcG/9JJ
nMtaVeN1E/96pNixxiAeKvatcRa5Q+Pw/aZG6mKZ+20sT86SpDTf7bv7UwPL
+lfGyybuht9kDFSfubUOjI1O303czFjtnD7jRvhyvqeOK+Nuk3UTbzQOO3c3
MTr5dd1uxqvxenPStcOMXV5dhRtsLHKKbmKexjdn7CYmOUZ/9rByLayjNUY3
cbTxuG8fc73ny33pz2805mg9KN9/331rbf2vkxjrn93s3615NT7HftpMrT9r
Rv3WCd/jtv7ki13fTK7l953Ebc21/LaTeO64HPthM37ZycG/8HlFM3Wr/I3G
EK1V1esmbnhjf/LRLmumxtcE3cRMrSU1WjcxPuuATdRN/NTaX95D49rWN5um
Gz78x3xu10kdOWt/+YyMWVtLzftmTNxaZ1N1k2vwNJ8rdpJnZy01n508TGPr
+oHNZzcf2VxCawma+6DvdLg2Cdd6ZzOxoSHFDjmqFn7swt3E3s91nW7GL+26
dlN/7oP35Z7is9bXd3/x9/mc7m2mLopcUPe8rrPmBN3RDO9eXoT1EIx57Fts
LTnKh5Y1UT6xdResvyDf+7iCjQEZMxtZ5Oab6Pcz1n9wWVvl+BrPsg6F8SP3
TTeW5zK0rONyoI2L3fV/Y2PN2KPaog81sy91T3pHf+yVM4vf+MHiO36qmXfI
OUK+iu/sVI3wZ8yL1+aWI+HeR1t6Sq7lj2bme+Pg5sX/Z/cjb/Ql139qPv+x
fzm3ckf7kgs7gxwt2o2+s3y2aTc08y6/QpO8ZX7Nbc3k1dzVn/pB1g56thld
+cCPl/O71jxR5iHXHjkt7lO08R4r85a1Ee7sT00367k9Wa7Ld82ci1ua4WdZ
++L2/lzb881cr7khl/XnHfP9erqZ3+dcNA7X+kEZUxOAP29m7HiuF/WPNMMD
l+M9TTP1FS/thFtlTUj9TnIG5EHLh5ZrJ99Z3rMcRes7ndxJzUlrG17cCVfK
GlAndlJ/8oai7z0xpiJ/Wq6gNRL1s8nv+rwVjrS8ROtD6teSK2UtSv1dcqXk
V8sZkfdsvOnCXjgo1qg8sxPel7HIi3rhlHzWCl/9Py6lv6sXLog1l/S5mcvg
OD++jG25KnJWrDkzetn7Oz6tJaWf0JwLa1Ge3an9xw2zFtOBndSps3bTwZ3U
07OulH5sa4FKApTzLU/P2lb6tK0fKFl4eCc1G99rhbcjb1PejXOA3FHrSulH
8734oJVcJ+Mp1pI6qpN6g9akOqKTmnjmt5nnJh9V/rg8cu+n9bX0n1szUE6Q
3CDPZdxUHr+5tNa33L+TGnpftMLnN/fWGqr6YP+rs9cKR8j+v2yF5++x1kTd
u5N6gO+2whfy+j9uhUvvmPmkFf68z12eu3x3+5d3JEfGa7dWwBed8Iflsi7a
Te6GucBrdZNLdRx4tW5yo8ZkPL/VzDx3UH/WTTn2clzX6CaXSm7qSt3kH5k7
vE43eVKjc+xrzbzHL7i/po3Vl/nnedobzXBxrTPj+zUa/3ulGY7H2OD3mpnP
rCHwdSd8aWs59nXDOZkIna/LHGZdx3Y3/BPnipdc85zH0fm+zH3Wh2x0w3Wx
tuRfnfCZraOoLSGnxTqK2i3yoq27+EcnfNHJ6OenMp8OAL/UzJxhfSDrBKHy
X50Ax7n8efmiy3T/X06BnCzHqbkP8p581+WRLtlNTo21Q7UZzFmQYyb3x3Ek
N0zuj2NWzrPrl7kzcp7n7yY35O9ecj3kIMiXXrybXB7rNM7aTQ6F+SNyyhwX
8qvn7SYPwrjqJb1ws+T6rtBNXps8cLnr1lQxVntxL9wsObHLdZP3Ya6KHDfn
KvnV2kvmU1hDdeZu8jjMB7LOkfwQa8rN0c0cdVnB8rPM3ZA35/tkzqB+CTlz
dxfeiJzYk7uJFT5aiz35CO3XZuyKB8FfgedH/4tmaoyYvyZPZsVacs/d4xsr
lu9nnTR5HpcgH72TOo0Lc+wPzcQatNkepv3I9+WQV7Tpm+EEWrdNLoicTP29
cj98X57UfupLbqY1/eRzmIskJ8d8bnPGjR2bp6Zt8wB6nzVzDfeDRzWTf2Q8
XR7vi7Se/Jtm7JLHyvqlP06Or/Vdry7vlPaOuU7GGa0DKQ/ngircaPP+5LrI
azePT17QyuB56fuTZuqZeG/vo593fcfB92rHg+dC530+P0R/HvBH4Enr4UNa
p04+jXPCE7RW3/9bL32X5bhae0ffpfmGcqiWqsX+f8x3DJ3ZOOb1Zvjncu2s
TScfSHv4cVq9L3mUcpaWqYUPbA0ofXauwc+W9c7137XfdX8pjvm3mf2Ca7s2
jfaMa/UzzYy3RdH5uRnbxnXzubJ2+m4/2ox/w73Mo7Tfm8mR1M5frpb6APLE
zFtdkH6+aSamJj/ZupdypLTVH+L7d83wAPXty30yH1x+mvm1S3Dsn81wa+Xj
WSNUntMcyN9uJiZu/pTzs2uJ+cLy4szrnQWdl5vJ5VkG3OzLXmZ7dG6vUiNU
m+WFZnJbzXFzPncMq3MP53u1mTx64+wP1cLL0t/1VC01IvTLPVFLXRfr7MnD
uK8Zu8bY91et8J3M67NmjvUD5WBZd8gagHJQzPmVa2T+w/FlT/1ALXa0exdt
aXPonE9cv61rZNxKTpo2qbaedqk2rrasdoLz+MPN+GGtm2QdQrkg5tw5d2k/
mWvmHOg6fUtZT7TrtCW1ebUnHeevVMmftc6S9ST/40f3pwamXJ8HytpiDNrc
PTl42m/WXLIuojwYa+BYE1JOj3sF7Ur3C8ZjrMfh3kROmLXgrPNmLqHrpnaD
dYqsf2INauPF1/THhjyqrCnuCW4t66d5GdY6uLq878ZvrP3hsdeUMa4da/2o
GTvhI93QCqfUueLkMg97De6NXFfdH8nf81n6HK3/Y51GOUk3l/XNPAVzMLUN
tCesFzRLJ/OAtZ6sMaJ/wBxw59L/5ope1j7z5+R4G7sxHiE38tr+7KXce7nX
cv91ezP2xTHg/wPgOCEl
          "]], Polygon3DBox[CompressedData["
1:eJwtnHf8T+Ubxo/zOc/5fM85VNq7JCM0tdPSkAgREiqkQXsPbTJS0U8kDak0
ta1KQ1LJSqKdklG099LvervOH/fr+9zf5znn8/mc8Tz3fV3X/dTrfV7Hc+Mo
itI0ihL9va1Gf/Mo+rVWFP0ie0jtybJ3KlE0XwPPV/+3WRRNV9802dFqD1X/
wepvITtX/Wv1v6nqmyKbqr75skY6+TPq762/jWXPqr1ANlXjt1P/gTr3AbKD
dexA+Xurr7nsQvV/r/+9qHO9IBspP1X/72r/JqvqXEfKMo1tKOus9jayh9Se
Keuq8R/q+Bs19gbZLfIrOv5ntX+SFRp7tOwIjT0VU7uh7Gm158na6NjhGt9S
7cNlHeWPkN9a7WNk9+p8G8hfoXOtlP0ov738kfotI2Tfyz9O/m1q3yr7oBpF
1+scF+haXyhrp/at6j9K5zqSc8ofJv9QtQ+Rfavj28i/RccOlz0gv678b/RZ
a7hH8o+XP0p9/5OdLP9zzqG+obKv5B+h/oHqu1H2sc65m37fzfrsR2Snqv8L
fqPG3iw7Vn0bye7i3sg+0/cdpP5RGnuHbIn8a+Wfp/b5si90/GE6/3U697Wy
1fJbyR+i9mDZRxp/o8ZfpLEXy07WuXeWPVnxMzVO42tr/Jf67OWy+9V+T/aT
+ibKzlH/Gh0/WX3Py77U+QbLv1PnGiv7Uv2Ha/wN+qzrZWvkt5Z/s9rDZBV9
VkvZArXX8vt1/EAdf7uO/Z+sh8Z/Kn+Izj1YdpeOXSj7hO8mW6n+o+TfpGMH
yZbp+Js0frSOHSO7X/0bqX+1jv1a1kF9t8lvpWOPlk3X+DP1v300dl/Zlmqf
q/73da7Fsq/UP1T/u0t942Q1avdS/xvqmyU7VOefpf+107mPkz0sf1P176K+
xrK66jsz97s5T/aI+jeT31TtJrIB8n/TmIkcK3tO/jbq31d9+8iekb8175va
zWVPyt9S/p5q7yE7XP5sHd9Bx7aXXSP/D/mPqP2o7ED5r8hvrfYxsv3lz5Df
irlB9p/8k3S+l3SuF2Wr9HtvVv89+q33yoLap6h/pvpe4/3X+Jn6X1sd24Zr
qvHD5d+nseNl69TfTeNf0Njpssfkby5/V7WbyZ6Qv4X83dXeTTZZ/rby91d7
P1kH+Yt0vqt07itlA+X/I/9JtZ+SHS//PflXqz1ANkR+pOOf5drJbpK/Tv1P
q/2M7Hr5f8l/XO0nZA/K30Tjc31WJrtE/o98f/WNl9VW+zT1v62+t2R3lc9/
pPZ/6s/V31v+m/Jnyy4q57971HevbAO1T2c+Vt8c2fjy+UvVDrJO8t/XmGu5
V7J7yvmpor5YdqX8X9T/IHO77HL5P8ufoPYDsjvl5xq/Tu1/ZRPK+aZGx1Zl
tTS2u/yX1Z4hO0L9b+l/Hbl2sp3Uvlj9/6jvb9m+6n9R/ztKfUfKriqfx1lq
vy67rPz8V9V+RXaA2jfo+D307uwuO69cT8bybsquLp+/2Wq/Ibui/D0z1X6N
/+l5uUD+ybqkp8iacy10vjo6V23ZBeX6NU5j75btpvYAfp/6qrJh6q8l/3v1
fcf9VPt57lfFc2xTjb9SfpCfyPaUf438Qu1cdrOOj+X/qGN/kJ1dzl9juLay
Rmpfpv5aGhvJriufn7fV95ZsF7Uv536pL5Y9oPZzPA9qn8QcXj6vczX2Hdmg
8nmcr/Y82Y5qX6jxf2nsn8zB5fO7UH0LZJur/2zmWPUtko1Sfw3j1fenbFP1
95P/rvoWyl7W9TxH/ztRp+nGV1a7p/pfVd8rstE6PuN+69i/Zduztsn/Q32/
y7ZhrZD/i9o/yxrIv1T+f2qvk20r/3z5v6n9K3OS/Ovlb6jfuwFzqM4/R//r
rHOfIGstfx7fR+2usoNY2zV+L+6F7HV93/P0vx76rj1lr8k/V/5JaneXHafj
36Vfx3ZnjpG/gH61u8kOVXsQ86POtY/sT/V3kT9W3+1O2abyH9GYVTrXatlv
GtNN68ts/X1E9oOsi/zXK45Bamv8Axq/TmP/lb2n/zVR/xZq782aWM4PM/TZ
L8k2lP+Q/FpqR7Jd5T8vfzuuLeu9jj9Rx7+hvw+zPqv/UH2/Xvpup8palvP1
XhrbXLZWY07Q+Nd4lmSHlevJHurbk+dNfbVlo9X3nOw/Xa9x6l/Ed5U11fi5
On9zjdlW42vJv1v9i9X3vuxJ9S2VHa/+lytet7uqPatcv1cTM8l/RX/vJ8Yp
54u9da59ZLvLnyx/B55d1neNaa/xLxFb8ftkx8l/QX/vln0l6yB/hv7eJ1sm
ayf/Rf29p+J1u6386eX6/YnOf7C+3ynERrIx5fP6mT7rc9lf+r1j9flr9VvW
yP6Rf5f879T+VrZI52il8z1f8TX6t+xfqL53ZX/Kv1P+N2p/LXtU514iO0bH
TNb4Rvq8Z9W/hT5rS1kT+c/J31rtbWr53f5AdlLid3yJrLXaU/T3TtnmGv+o
xu+ssfVlFfn3yv9Vn/ULcbv8++R/qPZHrKel/zvPpmyp/P1zzx3diMfkHyS/
p9o9ZFvLf1zjc2Jh2bbyn5BfW+06sqT8vKU61wfEL/Ifk1+jvkz2ETGyvu+0
imPGzcrvm6qvKquRP17+xzr2E9nDxD6yRMc8pfF/ybqr/Zb+PiabxNom2yzx
/V0u20vt/yI/fw/qenfW+XaUX082UX5X+TupXV+2nT5vkvxmGtuUNU39mym3
ua/qY4aW8/u76lsk26r8/Y2Zm2V15U+UX1E75h6V16MJ74pseDm/v6f2Ytkj
Om837o/O3UA2RX5f3j/WHtlj8rvLb6h2I9lOOv7pzO8e7+CIMt9aqvYHstvL
/OZDrq3sRR3fT+P307H7y0ar799C75L+P1LX5jf9HaP+d9Q3RzZD/tnyD1D7
QNkm5XwVuJfELOrvJX9X9e0m21H9T8nfnbVQdmuZH72v9hKeT43vQ7/G7iHb
orz/DdXXQLaz/GcyzzXMOQ3L5513m3d8T/lT5NcjNuCZ0L24p7p+6Vt/Pyap
3VP9u6jdRLaXxk/N/KzzzD+l/lPkN1VfM9k+6p+e+bP5DoeU8SLfnd9QLZ+3
PzX2D1mrcv3YT33788zKv1/+3+r7i5ymXP8+Ud+nsmPL9eVA1hbZmNzvNO9y
B42/U+3HcudGw+Tfk3sOZO5jjWpefv/D1T6Me1z+/kP5rlzjcr47WO0WPFPl
fMB34zvep3M9nTt3JSZoVs7/fJf136mMt3m2ecb3K+Mrnl2e4Xt17FOszzr+
NvkHlPE4zy7PcIPyfm1GLFDLsc2Hsh6JY5zty/dnA9Yi2bPqmyfbPvH69pPu
x//U/6Z+++zIc/12idci5nzmsR0Tv8vMZ79o/B3ENxr7luxv8lr1d9fcc7ms
p9r1ZZP0/znlXFBP9njFcwJz+caJ537m9M9le7D+kfvJFur8V+r8Z6ndL/Ja
vIPs0YrXZNaKzWXjK14zcj1//RK/q4RGhfyzE7+bhOE18k9PPLeAh7ytQU3U
0VbftQ0xOmuoOu5Q+1lifI0/M/Hco2b0jsY30/h26jsu9tq0aeK1jDWqn/q/
0fcdrWt7h+x0+Svl3672SNkTOnaObJPE69nf6j9R/jhyBWIq+SfIH0PsFfu+
7SR7ouL710ntrRKv9TwDJ2n8xzr/TcSKsvd0vQYQA+q7nsMapzH7afwI9U2q
5XVrg8RrD8/8HI2/ROP7aOxpsiPVHqLPP0h9B5axxdayByuOMVqqf7D6D1B7
f9nYMp9YpnN/IXtT57tIY07VuXrJauuinQsmxL2Q1SnjpWVgC5Hjii0Sxw68
Y/N1/OXqP0N9Z8o2LufrFWqvlP2qMQdpfKJrU0/2UJmPrdVnf1vLa+uGsrEV
r7F91L8887tyq+xr4j71d1H7olqOXbaUTag4hpmrz79U4/vqs06XbVTGa8vV
/krWWf5SYlgde52sfZlv9lT7ZFmuc/WRLawYA1sqayb/eB17LvGqxtfX9z2S
3ErWscxHT9Gxp8q6lOfvo/Zpslnyd9b4ozX2KNkJZf7XS329ZX+U8clcnXue
7BX176TxLcntZf3L5/Fyjb1CNkN+PfUfBvYg61VjfOhc9Z0nO6XG+NLZap/D
eqn7d7m+/54696asN/IHJMY6tor8khEv/qTmj7K2ZbzN3MccWL9cDzdRe1NZ
vXI9qqv2xrJ2ZbzO3Mkculj+Pvp+XfXdusi6l8/3meo7S9azxnhOP7X7y06s
Mf7Xl3etlmO5OrIxFcd0G+v7Xpk4FicmX1fGvz+o/T3fWWMOUP8cHbuK+1eu
H5+q7zPZWfJXk9Oo7zJZHZ3v/MRrWR3mJ/Xvqe/biXsp20D9FyZeyzbk8iTG
RMFCwUc3VP/FidfmusSfOr65ju/MvSWHV98psrkVY2ip2r1k8yvGLOdr/O7E
42AdsjPL7zdK3+1/tRx3gXGCbRJ/rat4DmbuZQ55U+Mb6/hjdWzr2PHNwXox
bwBH4x7r+12TOBbZRnZGOX9drHNfIttI/ZcmjhU2kY3KHX9dq/+1kP+Gxjck
Pta5W8WO5w7S+a9T/yHqf0H9O6j/YPW1iB0/HaL+G8F5yZnK9f8IfVZL3oHy
/b1A7QtrOR5sofHXa/xhrDdlfD9f7QWR44nD1H+T+lsz/8m/Tf0PqP0g77S+
68LEawtrTA/5sxMf+yxzjvxFieca1rSe8t9MnAs8L+srf4H8z9WeyXyk85+g
z5uVeHx39b+R+F18Wnay/LcS51pTIj9fXTT+k8Qxyhnqfzfx3MKay/N6BXNS
ZEzxtMSx7XDdu1EV52eddfzSxO8c9+tqcrfIMWEv+TPIryLnDOR7Z+t/SxI/
87y/VzGnR445T5H/duJcb5rsVPlz5C9Re3p5vncS5wYvyi6X/2Xi3ICcaoD8
lfI3kv+z/Bvlf5s4lyXHvVr+qsTvOjnNtfK/ThybEMPdIH9tmXuSA1wjf3Xi
uYIc5wr5yxPnLuRsV8lfkTh24fdfKf+rxLkMv+80+fMTv7uvyfrIn5c4N3lF
1lv+3MS51Ixyfemq67kscU5AfHSi/J8Tx1/Mf5epvVnkmP8y+V8kzn3ICQfK
/y5xbsvxvN8X8Xsjx9Ssf+fIrx05Bmb+OI81OHLMO7rqwOLEitfcUfLXBT1T
rNuyO+T/J79LxWvuSPl/y29fMSYyRn4tHX9SxRzNnfJj+T0q5hj+J/9fje9U
MebRMPW7fkTkNbqx/IHyj44cA3yu8U/p9z+WGANvrf6H1B6q9kTZMfIflD9E
7YdkreQ/IP+myO/YsfInyh+u9qOsB/IfIf5Qe5JsLLmB/teTOEv2hfz28h9P
jPl/Kv9Jff6jiTmJ69W3hphH1/Yf+XepP0nN5cDp3F01t3VaxZj8E/IfKRxz
cL0ny3+08BrG/SMe7J84FiEm2Tn13HRoZEyJ+e2SxGsdax7z+QU835Fzqvrl
XHdwZMyJePMs3ofIOSDx4hk8H5FzRuLNvvJ1C9bnsOPUEfS/3hVzQrfL/0ed
x1fMiY2Q/5f84yrGSBuknusOj4x5HqYPmqgv/33w/Rxfdb41iHwAbEH9D6v/
l+D7f5v6/lS7jdpDZNfpfN8kxiqYf35WfyeNfz3x/LOH+u9KzF11lq2Q3z6Y
+wCTXCm/QzA3BSb5lfx2wWsnayj57hU63wnBHOOn6m8VnOuCgYGXX6T+A4L9
z9XfOjg3AyNeJv/YYOwGzPcz+cfI/1jtl4kx5bcJjjXBmI+W/3Ri7uBG2VHy
n0rMPVwvO1L+k/LvZu6JnH920+f/mziHI988Sf66xGsOfMol8g8OPv9yHX+c
2l8R28q+lN82mMsCoz5C/qTE3M41kfmTS3X8IcH9n6j/6ODcH44zZj6W3yA2
5v6Uxl+j8RcEczK11N9f7fqxMf9/yFfkbxUbg/2LZ13+ZvL/qGV+bYCOP4kH
DEye503tLWJjvv/yPMrfJjbmv458Rv52scfzoPYLjqWJqeFLLtP5Dg++3/Ah
l8tvGXy/P9bxRwVjB3DEH8k/MhgrgRP+UP4RwdgLnB58xMU6vkXw/fyP90Xt
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
riusiUELc0PVetGr9b+Tg/PJX/V8n6J27dgaJ/DK1/Rsvx6Zc0E/ML0wpgc+
CP5I7g93tyIyfkauNDMyxol+YnJhTJP5Af3ElMKYKfMBeCnYJ9z0qsj4+tTC
mCnzAXjrzMRcIhwK+B3YJVghmCF42nuJtRloDsAXFyfWZqBZgO99oTBmh8YA
PPD9xNh97RJf/DCxFgKOATzyg8TaCTgG8EGwT7gJOE/0FdMKY5xoHuAvwEfB
aJnPwB8/Sswtw6GCZ36eWCuAhgW88jP5aHfQ7ID/gR3CvcOBw5+/Uhgj5PfA
n79RGNPkfOgXZhbGLPk+6A9eK4xx8nvQK7xaGGPl98O3zy6MmaIxaSz/zcIY
DpgYeOrHiblu+sF3wJbByuiHn36nMEbJ94OfnlMYo+X3gK99mli7hGYFPdNL
hTFunhf467cKY3D0w1e/XRiz5ffDt79YGGOFM0HfNKMwxs79Rm/xcmGMm+fr
IX1eLZ51HXsGeL78OFgLCsfzYBqtB8vQmsLpPCo/BGsP4agell8J1srCAcHv
LdD5NwvmCB5RfxKsZYXDekD+f4m1qnBqj8lPmXvVPl82ITX2g3YRTg196Dyd
rwjm5J5Qf02wFg0O5En5ebC2DE4N/nW+xm8U/P0nqT8L1prBGc2R3zCYC0Zj
en9q7Alug/M/Lr8arH3j+6MfmVUYM+d5Ro//rvzGwZpG9JDvyd81WOP5uo7f
IVjbjD9L/o7B2nA0wTPlbx/MDaMBfVN+/WAuFE3rG/LrBWvD0fyix5ur8/+Z
WK8wW/07Eatw7WSvyd+OWIbfAqYnf6tgLS0azrfk7xzMdaO5Rc/4vs63V7CP
HnIxMXfw51NPsJCYMfj4t3V8g2AuCw3uK/K3CeZa0ciiJ12k8c2Cf8/L6t86
WAvL9XlV/rbBtQBoctG/vF6Yo6hb4lP7BNcuoPFhfmatg2u8KDbed2iwVhPN
P/Pp8cFazzqx8c7DgrWZaMJ/k98xuNZgw9j6668KY3BbxtYnryiM4W0t/3eN
7xRce1E3Nr4K1oa2E80/+CLYIVgjmCN4J1gkWlg09OCpYKdgoWCi4KMHBmtr
0biAN+4frDVEYwReC3aHNhSOHPxuv+BaCzRJ6MOXF8YUN4+Nv4LVod2F0wef
PShYe4umDv3rksIYH9fvj9RYL7Uam8Tm91YVxvh2iI03gk2C9YH5oV//vPAa
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
          "]], Polygon3DBox[CompressedData["
1:eJwt2HmcjtUCB/D3HXtkSdYsSbJMYwZjxoxBcrVQwmSp67quriXb2K9ylboq
spRKi3RLt1JJMdmTjxa3K0KFLIVEE9nGWMOt7/m8zx/Px/N8n985532ec55z
zqjXP6/7iKRYLPaTo4SjeZlYrGnZWGxUqVhsDyhbLBa7i7ViM9k51pG1Zc3Y
FHacpbPVzu/n9UrGYv8sHotlqu88K7iCs2/ZEZYmk6LsSPd2K1tG2UPOD8h1
l1sjt0ouRy5N7l/uHZNrLrfYeT9eS260XIpcAftJ2Vz2MfuI5bP+crXZWJbK
LrPDckPZdnacHWeHWC/2CfuU3alcpnZnuHdWux20W+j8Z7necp/KrZfLlkuV
e9S9o3Jpched/yI3RG6b3FG5w+wgu5utZR/HEs/7pPLd2CI2j93quqX6prlX
pL426lvq/O+8jtx4uWZyn7ORrAV7ivVl/2WjWTp7mvVjX7F/hL5jz7FB7Ds2
mbVhL7FRbDt7iOWwF1ke+5pNZNnseTaUbWEPsCw2h93PtrFJbJffmsJGsP+x
seFZ5Gaz/mwXe5S1ZXPZGJbi+kbPm+feLs9bsliiP57mPeXy5d6U6xCeVe4J
9wrlsuTas+bscXaSZbKO4fnZVHaKtWZrnA/l16nvIfVlqa+T6wy56e6dkbtJ
7ifnU3lXuffk5sqdZs+xe9gytpDN1Y8LHSuV6cwqFU+MjWfkfmCprt+WO8ue
Z/cqu5wtYkfZLNaDLWH/CfWV9o2p7wTr7LcciMdidWUa+X2D5L9m532gK5wP
5Nu1kaxsurIblU1W9uowHsL4k/uCNWRXsRHsRraBNWaVWR5rytazBqwSG86a
sDXsWnZOGznaqMcWsxqslNx9clWCuV7tOC7XI3wz/l3m+iNHLIxHx0b2bnhP
jp3OO7EV/l2lvjqsnPoGq6+O+g6ym1nT8E2wgayqZx3KerAlbBn7Si6FVWGj
wnzAKsvdz+Lqb+/IZ7vlslktuQly7dj3LIfVDmOYtWd7WVtWhz0YvnP2C7uF
pbEZbAj7mf2JpbLpbDD7wPUqxxHPlKvddf4dLXfc7/lKXzaWe0Vf7me19WWK
si+wycpeL9OYDWHb2GVWkV3PctnHbBO7HPqD3c4+ZKvDRB3mV9aJLWVrWBlW
n93FVrH17AbWhA1l29nvbLn6qrOybBxrxUqFb4N1YSvZZ6wRS2bD2A4W92xH
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
          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0CtIg1EcxuG/+zYvWEwrgiAWy5JFsKxYvM6pc17mYBaDFwwWEYbYjBaL
yWK0WJYsRoMWk8VoWTHNy/T5wo/nLQfOOaONw/JBT0RUdJZEpPuUuxqxb/oi
pljVg33MS73Zd3xSx/5gr8P5/ogxTrDImkr2Ca+0b9/zRRd2m4OZiFt7nI+c
ZkPvdpPX6totvmp4IOKTQ+44aRe4p3PNqKkjzaqTi5jjvL7sBS7q2y5xST92
mcv6tVfY5Sor+rPXWE3SR0ascyP9K3uTW8rYNSbcZl3P2slG/AOwfitc
       "]], Line3DBox[{911, 2, 879, 897}], Line3DBox[{4, 3, 1952, 911}], 
      Line3DBox[{4, 1125, 5, 6, 1127, 7, 8, 1129, 9, 10, 1131, 11, 1133, 12, 
       13, 1135, 14, 15, 1137, 16, 17, 1139, 18, 19, 1141, 20, 1143, 21, 22, 
       947, 1065}], Line3DBox[{1145, 23, 1066}], Line3DBox[{25, 24, 1145}], 
      Line3DBox[{25, 1147, 26, 27, 1149, 28, 880, 894, 29, 898, 874, 58, 1981,
        87, 116, 2010, 145, 174, 2039, 203, 232, 2068, 261, 290, 2097, 319, 
       2126, 348, 377, 2155, 406, 435, 2184, 464, 493, 2213, 522, 551, 2242, 
       580, 2271, 609, 638, 2300, 667, 696, 2329, 725, 754, 2358, 783, 812, 
       2387, 841, 882, 896, 870, 900, 878, 869, 1542, 868, 867, 1541, 866, 
       865, 1540, 864, 977}]}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1125, 1544, 1126, 1558, 2875, 1152, 1572, 1166, 1586, 1180, 
       1600, 1194, 2991, 1614, 1208, 1628, 1222, 2998, 1642, 1236, 1656, 1250,
        3008, 1670, 1264, 1684, 2906, 1278, 1698, 1292, 1712, 2918, 1306, 
       1726, 1320, 3025, 1740, 1334, 1754, 1348, 3031, 1768, 1362, 1782, 1376,
        3040, 1796, 1390, 1810, 2945, 1404, 1824, 1418, 1838, 2958, 1432, 
       1852, 1446, 3055, 1866, 1460, 1880, 1474, 3061, 1894, 1488, 1908, 1502,
        3070, 1922, 1516, 1936, 1530}], 
      Line3DBox[{1127, 1545, 1128, 1559, 2876, 1153, 1573, 1167, 1587, 2886, 
       1181, 1601, 1195, 1615, 1209, 1629, 1223, 2999, 1643, 1237, 1657, 1251,
        3009, 1671, 1265, 1685, 2907, 1279, 1699, 1293, 1713, 2919, 1307, 
       1727, 1321, 1741, 2929, 1335, 1755, 1349, 3032, 1769, 1363, 1783, 1377,
        3041, 1797, 1391, 1811, 2946, 1405, 1825, 1419, 1839, 2959, 1433, 
       1853, 1447, 1867, 2969, 1461, 1881, 1475, 3062, 1895, 1489, 1909, 1503,
        3071, 1923, 1517, 1937, 1531}], 
      Line3DBox[{1129, 1546, 1130, 1560, 2877, 1154, 1574, 1168, 1588, 2887, 
       1182, 1602, 1196, 1616, 2895, 1210, 1630, 1224, 1644, 1238, 1658, 1252,
        3010, 1672, 1266, 1686, 2908, 1280, 1700, 1294, 1714, 2920, 1308, 
       1728, 1322, 1742, 2930, 1336, 1756, 1350, 1770, 2937, 1364, 1784, 1378,
        3042, 1798, 1392, 1812, 2947, 1406, 1826, 1420, 1840, 2960, 1434, 
       1854, 1448, 1868, 2970, 1462, 1882, 1476, 1896, 2977, 1490, 1910, 1504,
        3072, 1924, 1518, 1938, 1532}], 
      Line3DBox[{1131, 1547, 1132, 1561, 2878, 1155, 1575, 1169, 1589, 2888, 
       1183, 1603, 1197, 1617, 2896, 1211, 1631, 1225, 1645, 2901, 1239, 1659,
        1253, 1673, 2904, 1267, 1687, 2909, 1281, 1701, 1295, 1715, 2921, 
       1309, 1729, 1323, 1743, 2931, 1337, 1757, 1351, 1771, 2938, 1365, 1785,
        1379, 1799, 2942, 1393, 1813, 2948, 1407, 1827, 1421, 1841, 2961, 
       1435, 1855, 1449, 1869, 2971, 1463, 1883, 1477, 1897, 2978, 1491, 1911,
        1505, 1925, 2982, 1519, 1939, 1533}], 
      Line3DBox[{1133, 1548, 1134, 2984, 1562, 1156, 1576, 1170, 2987, 1590, 
       1184, 1604, 1198, 2992, 1618, 1212, 1632, 1226, 3000, 1646, 1240, 1660,
        1254, 3011, 1674, 1268, 1688, 2910, 1282, 1702, 1296, 3022, 1716, 
       1310, 1730, 1324, 3026, 1744, 1338, 1758, 1352, 3033, 1772, 1366, 1786,
        1380, 3043, 1800, 1394, 1814, 2949, 1408, 1828, 1422, 3052, 1842, 
       1436, 1856, 1450, 3056, 1870, 1464, 1884, 1478, 3063, 1898, 1492, 1912,
        1506, 3073, 1926, 1520, 1940, 1534}], 
      Line3DBox[{1135, 1549, 1136, 1563, 2879, 1157, 1577, 1171, 2988, 1591, 
       1185, 1605, 1199, 2993, 1619, 1213, 1633, 1227, 3001, 1647, 1241, 1661,
        1255, 3012, 1675, 1269, 1689, 2911, 1283, 1703, 1297, 1717, 2922, 
       1311, 1731, 1325, 3027, 1745, 1339, 1759, 1353, 3034, 1773, 1367, 1787,
        1381, 3044, 1801, 1395, 1815, 2950, 1409, 1829, 1423, 1843, 2962, 
       1437, 1857, 1451, 3057, 1871, 1465, 1885, 1479, 3064, 1899, 1493, 1913,
        1507, 3074, 1927, 1521, 1941, 1535}], 
      Line3DBox[{1137, 1550, 1138, 1564, 2880, 1158, 1578, 1172, 1592, 2889, 
       1186, 1606, 1200, 2994, 1620, 1214, 1634, 1228, 3002, 1648, 1242, 1662,
        1256, 3013, 1676, 1270, 1690, 2912, 1284, 1704, 1298, 1718, 2923, 
       1312, 1732, 1326, 1746, 2932, 1340, 1760, 1354, 3035, 1774, 1368, 1788,
        1382, 3045, 1802, 1396, 1816, 2951, 1410, 1830, 1424, 1844, 2963, 
       1438, 1858, 1452, 1872, 2972, 1466, 1886, 1480, 3065, 1900, 1494, 1914,
        1508, 3075, 1928, 1522, 1942, 1536}], 
      Line3DBox[{1139, 1551, 1140, 1565, 2881, 1159, 1579, 1173, 1593, 2890, 
       1187, 1607, 1201, 1621, 2897, 1215, 1635, 1229, 3003, 1649, 1243, 1663,
        1257, 3014, 1677, 1271, 1691, 2913, 1285, 1705, 1299, 1719, 2924, 
       1313, 1733, 1327, 1747, 2933, 1341, 1761, 1355, 1775, 2939, 1369, 1789,
        1383, 3046, 1803, 1397, 1817, 2952, 1411, 1831, 1425, 1845, 2964, 
       1439, 1859, 1453, 1873, 2973, 1467, 1887, 1481, 1901, 2979, 1495, 1915,
        1509, 3076, 1929, 1523, 1943, 1537}], 
      Line3DBox[{1141, 1552, 1142, 1566, 2882, 1160, 1580, 1174, 1594, 2891, 
       1188, 1608, 1202, 1622, 2898, 1216, 1636, 1230, 1650, 2902, 1244, 1664,
        1258, 3015, 1678, 1272, 1692, 2914, 1286, 1706, 1300, 1720, 2925, 
       1314, 1734, 1328, 1748, 2934, 1342, 1762, 1356, 1776, 2940, 1370, 1790,
        1384, 1804, 2943, 1398, 1818, 2953, 1412, 1832, 1426, 1846, 2965, 
       1440, 1860, 1454, 1874, 2974, 1468, 1888, 1482, 1902, 2980, 1496, 1916,
        1510, 1930, 2983, 1524, 1944, 1538}], 
      Line3DBox[{1143, 1553, 1144, 2985, 1567, 1161, 1581, 1175, 2989, 1595, 
       1189, 1609, 1203, 2995, 1623, 1217, 1637, 1231, 3004, 1651, 1245, 1665,
        1259, 3016, 1679, 1273, 3020, 1693, 1287, 1707, 1301, 3023, 1721, 
       1315, 1735, 1329, 3028, 1749, 1343, 1763, 1357, 3036, 1777, 1371, 1791,
        1385, 3047, 1805, 1399, 1819, 2954, 1413, 1833, 1427, 3053, 1847, 
       1441, 1861, 1455, 3058, 1875, 1469, 1889, 1483, 3066, 1903, 1497, 1917,
        1511, 3077, 1931, 1525, 1945, 1539}], 
      Line3DBox[{1145, 1554, 1146, 1568, 2883, 1162, 1582, 1176, 1596, 2892, 
       1190, 1610, 1204, 2996, 1624, 1218, 1638, 1232, 3005, 1652, 1246, 1666,
        1260, 3017, 1680, 1274, 1694, 2915, 1288, 1708, 1302, 1722, 2926, 
       1316, 1736, 1330, 3029, 1750, 1344, 1764, 1358, 3037, 1778, 1372, 1792,
        1386, 3048, 1806, 1400, 1820, 2955, 1414, 1834, 1428, 1848, 2966, 
       1442, 1862, 1456, 3059, 1876, 1470, 1890, 1484, 3067, 1904, 1498, 1918,
        1512, 3078, 1932, 1526, 1946, 1540}], 
      Line3DBox[{1147, 1555, 1148, 1569, 2884, 1163, 1583, 1177, 1597, 2893, 
       1191, 1611, 1205, 1625, 2899, 1219, 1639, 1233, 3006, 1653, 1247, 1667,
        1261, 3018, 1681, 1275, 1695, 2916, 1289, 1709, 1303, 1723, 2927, 
       1317, 1737, 1331, 1751, 2935, 1345, 1765, 1359, 3038, 1779, 1373, 1793,
        1387, 3049, 1807, 1401, 1821, 2956, 1415, 1835, 1429, 1849, 2967, 
       1443, 1863, 1457, 1877, 2975, 1471, 1891, 1485, 3068, 1905, 1499, 1919,
        1513, 3079, 1933, 1527, 1947, 1541}], 
      Line3DBox[{1149, 1556, 1150, 1570, 2885, 1164, 1584, 1178, 1598, 2894, 
       1192, 1612, 1206, 1626, 2900, 1220, 1640, 1234, 1654, 2903, 1248, 1668,
        1262, 3019, 1682, 1276, 1696, 2917, 1290, 1710, 1304, 1724, 2928, 
       1318, 1738, 1332, 1752, 2936, 1346, 1766, 1360, 1780, 2941, 1374, 1794,
        1388, 3050, 1808, 1402, 1822, 2957, 1416, 1836, 1430, 1850, 2968, 
       1444, 1864, 1458, 1878, 2976, 1472, 1892, 1486, 1906, 2981, 1500, 1920,
        1514, 3080, 1934, 1528, 1948, 1542}], Line3DBox[CompressedData["
1:eJwVzi1Ig2EYhtFHNrewtGAwDVkwGQymBYNpYUHLGAZBNBicwWAwTINhYSwY
DOLPwoIGDSImEYNJhsJgYBhiMghaZjAMPAsv13nu8PFNrW4tVcciouT9jUc0
0xGn3hfva8sbZiL67m1+0XUd2B65zDda1G9bmwt8pDOj79jqnONd3XNneZMT
+u5e4d9UxKJ+as+2wG88p8/6apvme57Ua+3YMtziYTKi4j7kHz7QB/cH73BX
N/TW9sTLfKclvbJd8Dwf66xe2hqc55pO6Jn/XeM0n/C59w9Ixi7M
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1954, 2705, 2388, 2709, 2708, 1557, 1955, 2389, 1956, 2875, 
       2390, 1957, 2391, 1958, 2876, 2392, 1959, 2393, 1960, 2877, 2394, 1961,
        2395, 1962, 2878, 2396, 1963, 2778, 2984, 1964, 2397, 1965, 2879, 
       2398, 1966, 2399, 1967, 2880, 2400, 1968, 2401, 1969, 2881, 2402, 1970,
        2403, 1971, 2882, 2404, 1972, 2779, 2985, 1973, 2405, 1974, 2711, 
       2729, 2774}], 
      Line3DBox[{1981, 2412, 1980, 2411, 2885, 1979, 2410, 1978, 2409, 2884, 
       1977, 2408, 1976, 2407, 2883, 1975, 2406, 2748}], 
      Line3DBox[{1983, 2413, 1982, 2780, 2986, 1984, 2414, 1985, 1586, 1986, 
       2415, 1987, 2886, 2416, 1988, 2417, 1989, 2887, 2418, 1990, 2419, 1991,
        2888, 2420, 1992, 2781, 2987, 1993, 2421, 1994, 2782, 2988, 1995, 
       2422, 1996, 2889, 2423, 1997, 2424, 1998, 2890, 2425, 1999, 2426, 2000,
        2891, 2427, 2001, 2783, 2989, 2002, 2428, 2003, 2712, 2730, 2744, 
       2767}], Line3DBox[{2010, 2435, 2009, 2434, 2894, 2008, 2433, 2007, 
       2432, 2893, 2006, 2431, 2005, 2430, 2892, 2004, 2429, 2749}], 
      Line3DBox[{2012, 2436, 2011, 2784, 2990, 2013, 2437, 2014, 2785, 2991, 
       2015, 2438, 2016, 1615, 2017, 2439, 2018, 2895, 2440, 2019, 2441, 2020,
        2896, 2442, 2021, 2786, 2992, 2022, 2443, 2023, 2787, 2993, 2024, 
       2444, 2025, 2788, 2994, 2026, 2445, 2027, 2897, 2446, 2028, 2447, 2029,
        2898, 2448, 2030, 2789, 2995, 2031, 2449, 2032, 2713, 2731, 2714, 
       2768}], Line3DBox[{2039, 2455, 2038, 2454, 2900, 2037, 2453, 2036, 
       2452, 2899, 2035, 2451, 2034, 2996, 2790, 2033, 2450, 2750}], 
      Line3DBox[{2041, 2456, 2040, 2791, 2997, 2042, 2457, 2043, 2792, 2998, 
       2044, 2458, 2045, 2793, 2999, 2046, 2459, 2047, 1644, 2048, 2460, 2049,
        2901, 2461, 2050, 2794, 3000, 2051, 2462, 2052, 2795, 3001, 2053, 
       2463, 2054, 2796, 3002, 2055, 2464, 2056, 2797, 3003, 2057, 2465, 2058,
        2902, 2466, 2059, 2798, 3004, 2060, 2467, 2061, 2715, 2732, 2762}], 
      Line3DBox[{2068, 2472, 2067, 2471, 2903, 2066, 2470, 2065, 3006, 2800, 
       2064, 2469, 2063, 3005, 2799, 2062, 2468, 2751}], 
      Line3DBox[{2070, 2473, 2069, 2801, 3007, 2071, 2474, 2072, 2802, 3008, 
       2073, 2475, 2074, 2803, 3009, 2075, 2476, 2076, 2804, 3010, 2077, 2477,
        2078, 2904, 2478, 2079, 2805, 3011, 2080, 2479, 2081, 2806, 3012, 
       2082, 2480, 2083, 2807, 3013, 2084, 2481, 2085, 2808, 3014, 2086, 2482,
        2087, 2809, 3015, 2088, 2810, 3016, 2089, 2483, 2090, 2716, 2733, 
       2763}], Line3DBox[{2097, 2486, 2096, 3019, 2813, 2095, 2485, 2094, 
       3018, 2812, 2093, 2484, 2092, 3017, 2811, 2091, 2764}], 
      Line3DBox[{2099, 2487, 2098, 2905, 2488, 2100, 2489, 2101, 2906, 2490, 
       2102, 2491, 2103, 2907, 2492, 2104, 2493, 2105, 2908, 2494, 2106, 2495,
        2107, 2909, 2496, 2108, 2910, 2497, 2109, 2498, 2110, 2911, 2499, 
       2111, 2500, 2112, 2912, 2501, 2113, 2502, 2114, 2913, 2503, 2115, 2504,
        2116, 2914, 2505, 2117, 2814, 3020, 2118, 2506, 2119, 2717, 2734, 
       2775}], Line3DBox[{2126, 2513, 2125, 2512, 2917, 2124, 2511, 2123, 
       2510, 2916, 2122, 2509, 2121, 2508, 2915, 2120, 2507, 2752}], 
      Line3DBox[{2128, 2514, 2127, 2815, 3021, 2129, 2515, 2130, 2918, 2516, 
       2131, 2517, 2132, 2919, 2518, 2133, 2519, 2134, 2920, 2520, 2135, 2521,
        2136, 2921, 2522, 2137, 2816, 3022, 2138, 2523, 2139, 2922, 2524, 
       2140, 2525, 2141, 2923, 2526, 2142, 2527, 2143, 2924, 2528, 2144, 2529,
        2145, 2925, 2530, 2146, 2817, 3023, 2147, 2531, 2148, 2718, 2735, 
       2745, 2769}], 
      Line3DBox[{2155, 2538, 2154, 2537, 2928, 2153, 2536, 2152, 2535, 2927, 
       2151, 2534, 2150, 2533, 2926, 2149, 2532, 2753}], 
      Line3DBox[{2157, 2539, 2156, 2818, 3024, 2158, 2540, 2159, 2819, 3025, 
       2160, 2541, 2161, 2929, 2542, 2162, 2543, 2163, 2930, 2544, 2164, 2545,
        2165, 2931, 2546, 2166, 2820, 3026, 2167, 2547, 2168, 2821, 3027, 
       2169, 2548, 2170, 2932, 2549, 2171, 2550, 2172, 2933, 2551, 2173, 2552,
        2174, 2934, 2553, 2175, 2822, 3028, 2176, 2554, 2177, 2719, 2736, 
       2746, 2770}], 
      Line3DBox[{2184, 2560, 2183, 2559, 2936, 2182, 2558, 2181, 2557, 2935, 
       2180, 2556, 2179, 3029, 2823, 2178, 2555, 2754}], 
      Line3DBox[{2186, 2561, 2185, 2824, 3030, 2187, 2562, 2188, 2825, 3031, 
       2189, 2563, 2190, 2826, 3032, 2191, 2564, 2192, 2937, 2565, 2193, 2566,
        2194, 2938, 2567, 2195, 2827, 3033, 2196, 2568, 2197, 2828, 3034, 
       2198, 2569, 2199, 2829, 3035, 2200, 2570, 2201, 2939, 2571, 2202, 2572,
        2203, 2940, 2573, 2204, 2830, 3036, 2205, 2574, 2206, 2720, 2737, 
       2721, 2771}], 
      Line3DBox[{2213, 2579, 2212, 2578, 2941, 2211, 2577, 2210, 3038, 2832, 
       2209, 2576, 2208, 3037, 2831, 2207, 2575, 2755}], 
      Line3DBox[{2215, 2580, 2214, 2833, 3039, 2216, 2581, 2217, 2834, 3040, 
       2218, 2582, 2219, 2835, 3041, 2220, 2583, 2221, 2836, 3042, 2222, 2584,
        2223, 2942, 2585, 2224, 2837, 3043, 2225, 2586, 2226, 2838, 3044, 
       2227, 2587, 2228, 2839, 3045, 2229, 2588, 2230, 2840, 3046, 2231, 2589,
        2232, 2943, 2590, 2233, 2841, 3047, 2234, 2591, 2235, 2722, 2738, 
       2765}], Line3DBox[{2242, 2595, 2241, 3050, 2844, 2240, 2594, 2239, 
       3049, 2843, 2238, 2593, 2237, 3048, 2842, 2236, 2592, 2756}], 
      Line3DBox[{2244, 2596, 2243, 2944, 2597, 2245, 2598, 2246, 2945, 2599, 
       2247, 2600, 2248, 2946, 2601, 2249, 2602, 2250, 2947, 2603, 2251, 2604,
        2252, 2948, 2605, 2253, 2949, 2606, 2254, 2607, 2255, 2950, 2608, 
       2256, 2609, 2257, 2951, 2610, 2258, 2611, 2259, 2952, 2612, 2260, 2613,
        2261, 2953, 2614, 2262, 2954, 2615, 2263, 2616, 2264, 2723, 2739, 
       2776}], Line3DBox[{2271, 2623, 2270, 2622, 2957, 2269, 2621, 2268, 
       2620, 2956, 2267, 2619, 2266, 2618, 2955, 2265, 2617, 2757}], 
      Line3DBox[{2273, 2624, 2272, 2845, 3051, 2274, 2625, 2275, 2958, 2626, 
       2276, 2627, 2277, 2959, 2628, 2278, 2629, 2279, 2960, 2630, 2280, 2631,
        2281, 2961, 2632, 2282, 2846, 3052, 2283, 2633, 2284, 2962, 2634, 
       2285, 2635, 2286, 2963, 2636, 2287, 2637, 2288, 2964, 2638, 2289, 2639,
        2290, 2965, 2640, 2291, 2847, 3053, 2292, 2641, 2293, 2724, 2740, 
       2777}], Line3DBox[{2300, 2648, 2299, 2647, 2968, 2298, 2646, 2297, 
       2645, 2967, 2296, 2644, 2295, 2643, 2966, 2294, 2642, 2758}], 
      Line3DBox[{2302, 2649, 2301, 2848, 3054, 2303, 2650, 2304, 2849, 3055, 
       2305, 2651, 2306, 2969, 2652, 2307, 2653, 2308, 2970, 2654, 2309, 2655,
        2310, 2971, 2656, 2311, 2850, 3056, 2312, 2657, 2313, 2851, 3057, 
       2314, 2658, 2315, 2972, 2659, 2316, 2660, 2317, 2973, 2661, 2318, 2662,
        2319, 2974, 2663, 2320, 2852, 3058, 2321, 2664, 2322, 2725, 2741, 
       2747, 2772}], 
      Line3DBox[{2329, 2670, 2328, 2669, 2976, 2327, 2668, 2326, 2667, 2975, 
       2325, 2666, 2324, 3059, 2853, 2323, 2665, 2759}], 
      Line3DBox[{2331, 2671, 2330, 2854, 3060, 2332, 2672, 2333, 2855, 3061, 
       2334, 2673, 2335, 2856, 3062, 2336, 2674, 2337, 2977, 2675, 2338, 2676,
        2339, 2978, 2677, 2340, 2857, 3063, 2341, 2678, 2342, 2858, 3064, 
       2343, 2679, 2344, 2859, 3065, 2345, 2680, 2346, 2979, 2681, 2347, 2682,
        2348, 2980, 2683, 2349, 2860, 3066, 2350, 2684, 2351, 2726, 2742, 
       2727, 2773}], 
      Line3DBox[{2358, 2689, 2357, 2688, 2981, 2356, 2687, 2355, 3068, 2862, 
       2354, 2686, 2353, 3067, 2861, 2352, 2685, 2760}], 
      Line3DBox[{2360, 2706, 2707, 2359, 2710, 3069, 2874, 2361, 2690, 2362, 
       2863, 3070, 2363, 2691, 2364, 2864, 3071, 2365, 2692, 2366, 2865, 3072,
        2367, 2693, 2368, 2982, 2694, 2369, 2866, 3073, 2370, 2695, 2371, 
       2867, 3074, 2372, 2696, 2373, 2868, 3075, 2374, 2697, 2375, 2869, 3076,
        2376, 2698, 2377, 2983, 2699, 2378, 2870, 3077, 2379, 2700, 2380, 
       2728, 2743, 2766}], 
      Line3DBox[{2387, 2704, 2386, 3080, 2873, 2385, 2703, 2384, 3079, 2872, 
       2383, 2702, 2382, 3078, 2871, 2381, 2701, 2761}]}, {}}},
   VertexNormals->CompressedData["
1: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
Ir1F3tiriI3sa7c9719fO814K3eBIK8iJrKv3Suyrx33Sp/kPVuvIiqyr90v
sq/dd316+qkFz6IZsq/dL7Kv3W/BzCjFes+itZf/+tppbf7X1+5mBWfDBWnP
oqdkX7tKsq/doofn8UVxjyI2sq+dF9nXrmIoX/f5Nveip2Rfu92s//ra6doz
iC3auhYFkX3thsm+dvBV44mSzAdFD8i+diLr/vW1O0MXngNt7hbpkX3t5sm+
drytVrT0qo5FNmRfOwrZ186eYUObzEW7ov/62lkny19crqeAL2NVWVlphUCS
LUmnXEhAlubgLczbt/onIP5fH5uoYftRccdeIJyX5F7olgwSC1yi69imQVzx
tiNH7LqBUxzdqfiSRPBwvdq/viJOSkboOT1B6q3v0wrhEfL54e4imD/dJNqD
+H/rwW97PSfQ872owqML3JJhPPn8kBtW7Efie8Gflw/HHD/YF70ZLcF8G/n7
evy9ZOffem9ZPYdc/HwRcvyNwoRbY1IPZKPI8e7k+M3ZPfN7CM/VyfEjETuO
ove/eeKpaVxJIrxHvv9qBd/zqE7evU1Sek9eCtj31EWvTahTRpjtY6iQ1iy4
8EXT3ca6GZx8X4ifUzn0ZfukXw9QslNQiUwMAW6Ca6rlhtMgezgkDo2f31dy
mhgPJcnxTFzG+O/Uzr4F/PerN+4r5lNqeVrodXOf/R3dlZcCd5Gv+5KVbgd6
/snsmvaIxBAY7LaKn//saksies7moHor1CeQZnMdfk4NwxgfqpcGF4QfnM4p
B5JS3vg535NM8edS/fDwFvpcQ+T8Szw9ehCNf9qwczsxHmZmvcTjl2dkuOki
e8C1Srsdk9T3ZaXeROPX/W8+lWH/Ghcxn3EbH+LxXPturpn5d4MfRlvHF6qD
odhDDzyf/31fLty9TL+J7yuVHH+L8cAqGi/bnWL4qzoYHCXH93Hn43mgn9yA
56GZfJ8Gs//ej/Tt3MkdHPZFEuT7+fXrn88qbRnYZ2ftg7q32xNlm/z/cbWt
DZg7fKnAcfh22Cs8P2MLmp5ofuS3JF1wateXbWDRxn4a85p8Q37eJp+j6X8C
c/5zZzoRl+g+hPPniXw1PG/j1/5uRfMmQz7HtEsVz/MWbdkXaJ4/Ub5inubC
FoZ8eLVwxBX5E58giZ+/kB+H+czw9H3EaT924vd5MZTlHeon0jSkRnV4TyMw
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
FHZBsxXiOKHM/gfw9wrmAutmWXUbYK6/pT1I8PDQmP5WghftL5yfS3GBy7Or
LGMIntK3eDUKf//hRZ/v/qz34fvpf0sSBG9jbtizsIx/7u6GM8LBoCVzZZ1F
uxAETq3xClkaBbU94R8ixiOALfnVZrtWIUj05Ct/MT8Kn58uzOyKegPXe3O9
fSlCsPW5wM/EyVG48WPBw2UkGQQMjAvW1QjBax0pdofBUdjlwVwXtZgO28fU
vgwUCsF51wcLgg2jULvfR3CTSA6cH7sTuv6TECRcffN3OG0UysoVC2Tj8mFg
Q4bi24dC4PR1W/Ixl1GQvcZpVK9eAkmHK+RNTguB4TnPauAZBQbxv41B+6vg
s3jlK2uaIAQpfmnc5j8CnNSwh2WCdTCUzf0szUwQPn76mcuXRTynaZQzOb+a
wNi8X/tjogA4xzae2sBOg4jyYL5bbF3AU2vuOXObH77/eH25T3YQnlbnDH39
1AMvZfbs+Cu6E9TN0cBe/n5YzhKMkthJhUfyAwG9knwQabCOWflvL+yrWLFZ
UBkA9qc/DGIkuGH2TLxJaEA3iLjYpUWxD4GyrePGy2e3wrq8nt52nU6Ql/BX
u/KABj7ir3n7ItlB3rv5o9GDVkjgYLMJix+G21qxbs88KYi3ovFGGqFL7A9f
BtEl3RX2rK9xxTzk6ypbzHUODRq7OanLeP/dRvJzj0VIbsTEVDkgWa7AeceH
PM4kTwZ5nPq15W77u2YVnnuy38X8fjCTNeY3c0OtqZK8wLxf3BJzaf41FzBP
4asZVVg5CqZOXKsxZ1+V0pZK8DaVPK+9XWrg4ZasGUzw1Spbaz4TPM9394ld
PYbQ+UlH9THOd6mx3ksgeHHEb9tWSRso2H6yyoXge8o0ZUIIPv2jJiXmtQv8
bh2ePUnw0629W/QIfq3avGpl2Rcoitx8FR4UtIt+iJpP6G3PznStMp5g4OVQ
XJvtTkEtowxltwm9ZTbWElPtiIDThTfpTq4U5KbXapRN6K2aa9LpnKdv4EDM
wLnxWxR09rKeiupDOjhLcysnNieDyu5NetbXKWi9ypkdc4TePuV6aD5PT4fS
kPHF2UsUJBrLxqpnTQdz9DNmhT0H2PUkdA8pUlBl03G+JTU6JNoFd9eH5sPp
e8lyjzgpCOheY1s4CJ5GDzU9VgJrBPcNrKlsQtLSyht+/BiGO9OqUh6cVfBJ
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
kZ+Fez1nKbHv1YNYtsQW2FQhH3IxtRMpfdLO3P51DByN8635dgzDGbnpEK1Y
Cqq//RhF6YzCQO7lx2KqdLD3uJuXs+4tUmXoeuLaGpbK+95dtY4Bs/cXC324
P4pSB5gbmdmjcNiiReZYSjtsXRaVtiqWiRxDz16P9cT1/nNlCe2TNaTrqok7
zXHfG7e5hLYI4xXUcSUJvwhoeSBh/cBqHA3TqPy2kd1QVHfiUNgIBdxOs80S
PM5my/WZeYmy6O29tUs7t5WTQlVXzxG4nnrxeYqFNNq9zE+nQE8QtpOjlxlj
nH1b+eeKfatR0rphIxXVMNjhX2qjPD+JzD+svdYgtBZtr1HM85RJhzUWIkUR
nRPounDUK89BPehbnbLo8HoKKPbzZ3dvYaB73ar7uxafBxP35jLqeRqsVbvw
C9eryLTaVFYY16uaI8sErqcUk/xna1/vx7j8gR/0TIzf5mHM+izjgUsmBY8J
/nTKQDUoANtFFLdGT6vjXihzuNHxJ5qJKtsL1bkw7mfOoxv+8QYYvbzDZxTJ
RDa/zwSPYbtYFD+/wqI1FY79MDbcHcREulpnrgm4UpGA6HiX8vlH4Pjy0e4r
ibg/9z6y7HN6N5KZuTHiZ9EGkq73zFxvjqFX7LbuXbKd6Ht2kU/e2DA8nCan
nHk1gu48dEBxP9tQhweJVkWhw/mILp9vuP/s/jCmfwgfs0u47FKXkEmKwp1T
5fj3cF1ijz8+un7V5ubwYoeINVcm6/FvLe4TeVfwMZ9P026wZjc48yqoCeP+
NmpCLWI9xh9vLNNTkbYAh71m2+rwbz7qebsO4n1S9l2dPJHX4Qj3Ld7Ru3Rk
7hXM64WPf9e/+WninAx1vHqfRJLo6OoXKV/vRDqakzNcZqqVDz6oZTnZn44U
V76Jb/HFffcGFaktUA45mzs9MmdG0YjLHqWcyVHUnGQSdEamFepqlWEx9wc0
KpDlwPmThnJP7WevshqGtjN+2dPKQ8g4cIvNtMwQGplc32xoheN657a2Jz96
0LmC/MXzrT0o3P672w8SA/5I9tp9LZeDnKpO1nNIjoial3eZtST1KHeOkoNb
oXmgRU4O4y19IjJf90bCNt/1WRYUDTSwNiBOs2gC7Uu+tueyTDtwrDyhWorz
kGT+009deP2t1xyStLOoJCXoLuot9qOCJvvmvqXE/hmaf4oMIoTAWOW1+iuM
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
kDizKCj4Cx3WL/Bs1P98b+v/ADGszq0=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox[
      FrameBox["\"\[Rho]\"", StripOnInput -> False], Bold, 
      RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
      FrameBox["\"\[Rho]\"", StripOnInput -> False], Bold, 
      RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
      FrameBox["\"I1\"", StripOnInput -> False], Bold, 
      RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm]},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{489.37506702148255`, 651.4285714285714},
  Method->{},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox["\"Plot of Sc I1\"", StripOnInput -> False], 
     RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm],
  PlotRange->{{-1.9882758473630142`, 
   1.9999999310344359`}, {-1.9970667709721583`, 1.9970667709721586`}, {0., 
   706.4812031565523}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.0267910808225444`, -0.4113984678666412, 1.455777130501123},
  ViewVertical->{-0.145411714812623, -0.04636364121146157, 
   3.1981551568097597`}]], "Output",
 CellChangeTimes->{
  3.7213940248391795`*^9, {3.721394070979624*^9, 3.721394089226192*^9}, 
   3.721394607163224*^9, {3.72139467936548*^9, 3.7213947090484176`*^9}, 
   3.721394758301942*^9, 3.721394820193868*^9, 3.721394887528957*^9, 
   3.721397219497686*^9, {3.72139725707904*^9, 3.7213972622992296`*^9}, 
   3.7213973297116632`*^9, {3.721401235059331*^9, 3.7214012503647947`*^9}, 
   3.7313431600859575`*^9, 3.731343414325201*^9, {3.7313435272425823`*^9, 
   3.731343539603839*^9}, 3.7314133983233824`*^9, 3.7325383090261364`*^9, 
   3.7325397006582856`*^9, 3.7325456363384724`*^9, 3.73255144343288*^9, 
   3.7325514926299562`*^9, 3.732551549154427*^9, 3.7325526999055724`*^9, 
   3.7325547491695957`*^9, 3.732554867504428*^9, {3.732554900191696*^9, 
   3.7325549489495716`*^9}, 3.7325554994166126`*^9, 3.7325557213418026`*^9, {
   3.732555762568925*^9, 3.732555796661334*^9}, {3.7326245553246207`*^9, 
   3.7326245607267294`*^9}, 3.732624608269682*^9, 3.7326246573846664`*^9, {
   3.7326256180059147`*^9, 3.732625635448264*^9}, 3.7326256905413694`*^9, 
   3.7326257291851454`*^9, 3.732625783269229*^9, 3.732637573335396*^9, 
   3.7326377455419564`*^9, 
   3.7326377855537834`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQm4XlV1N/7+3/Hem5t5BhLCEGanWgcUIagJhMyEQMIchstMgOAEKEGr
oEaL1qEMRbAU2iqIXrRKSxOqgsB1QBR7VUSLIAg4XC1qbXu+/Vt7rX3W2Wed
8543pN//+54veZ5zct995r3X+q1xr71s/cVnnn7e+ovPOnX9vMMuWn/BmWed
unHeog0XuabG/1erNZu1WmvtvBr+Tmo12Vn/+rCzj+04tOPQjkM7Du04tOPQ
jkM7Du04tOPQjkM7Du04tOPQjkM7Du04tOPQjkM7Du04tOPQjkM7Du04tOPQ
jkM7Du04tOPQjkM7Dv0/dmg8dvuFtm/9X3m8jba54a8dZ/7vPbNDh5rfSO6+
259Sqz2R/OQnU3u9AS6SG+Bm1W9AZF3HX7XGvyTXXitn1Cb3dotaY0ty2WX4
eU9y5pm1Hl+g1vpqcuut8gWjybe+hXep8XvhzmijMwd7fa+Hk/vukzvX2ukd
w5cO9HjHvmeSp5+WO8oX4/0eS0ZH8d514yH9lR9CZzboFi3/pPQfxlZ6xRMN
376vt9vXGluTzZtDr7R8G74Dv+9Pli3roVf8HTNEjPdu+ub7k899TprRQT12
RK2pexvPaOYfh7+r33fA30B6AF+LZzTy74tB7fW+Hf2+uDduCP7E/zU/ro1f
J7/6VRi7TuUnjPPj5HkhHbsXQA2D/o54H3Ag8S7TF/oHA0ZnVKeG/1ugd8eZ
/8+d+f+3svUCjqf//k9Vh3cc2nEoe+ht+G8gGRoaio7/mTrutE73j05ym5OF
bk/UX89e+Fl9TfPXzz///P0f+chHsD0zNjb2SLjiPjqh/fCjjz669a677sIJ
aL7n5ptv/sb3vvc9utfj/l6X+HvhernXY0899dR3w73u9S+I+4QXbNLet/G/
2tey7zvD3/5cf/Xo448/jidjq3Wwb2e/mw58J9ziq+lb4SfeCreo+2b8Kd/0
xHPPPXd/uO7LobcPzzw/8/bUvd5maNz/0EMP0QMfeOABp8IWvGxf9GLhMjrF
62IN6lm8rDtWi17JGuDsG+JT8S3Yah3s+9K3CW+4tehzcm8op9D9+A3xN9pw
LPeGOXJa7t/vcuM1tpS+c6ajeJjoF2vYMqIR2XzFpsRl/jU2ZbsRR2rfyj6N
/mqHv9IPvNegtaWZ2wqhbbnjjjsq3/Y+g4SW+NteEU4aSUk2Uf8q3P5rRscf
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
3VaEtyMG3n5F4y0nMbihHPscqh9uPOFgJMOCGjDsnz9KA26d51Cgti6cvlB9
t1x5eP0FuB5uXpHG1EDEy8MydU1epk6Qd9Pxr6tFsCsJZUHxpWVWHezKcnbk
XfiYX11zgG3HzAQ1B8AeeCcYiGhBjZWFmwNer9hZwGvpemVBNgt4tVq70UDS
nfLAW1bktVkCxnpqWiHwZvwGptKrw21cqKfbzJTY5rBSgXXimYTgNA5jzprM
XYu03mkKg1XBBL5JRsOtkauBKnkBh+u0b4clYH1FpYUyI63OC8YKGjcIjZHC
O0YXQ9udRnMqUi1klXI9HMmovDpFZfI9HKWcDgqSv4gYDWof3HVMbS/OX1jr
t39GAj+rVPdoVMa0KiT+I97uoGEEUAHIOJUQOfn2acnwx49MNl3geuORMxiR
z2REdmj8w7M9BP0EftHzGZEv9HAF2CJEZjT+Lax7pBw8fyn0i9/DDeuA+I+X
e+0TiBhA+N0mEI+NvceB8Zvd9pbklluGnLb7RugIb8PuEqJugO+HsSFok/wF
0TN+f4i3q+uE1y+P8Pp9CqiDgpxsutwZ9e9wg/JH93p/cK/5O7f9u3vl3ziQ
/rX7ml+6r3rOfd0z7it/7r72KffVT7qvh9/i31xP/MT1yGMOpB91PfSDs32v
oQch375zWhagIQuR8ktZD2677wTTMzzmBnzjiQcDmqUELXmG1yCQoQFaCjDg
nM8cmWy5yuf4pilmQR3uTRtuSMZDis7YmqwaY3kpSvt9x6IsPHtHsEbnBunE
ndTz67BZ4nZchaQ2jjmP52eQvTmxBBkKPbMRigd0VjOEtVe5rLRCt+yyCQpr
Rcm9mNt0/oMBzTjs0Nx1N/YE0KEMTsu4hUCzNfdNd4/1iaV6so7Pbb26yjSO
uD5vlyRgmR4nt4wqMHiVOZUIeGJBxcYmmvtCIcZOUJXrXFwhrFZL1WuOaGbq
KlAhmptXhrp5pCavPYhqkJiAfBsBMmdAjGe3gwAylCQG5C84MP4H+A0dCn/p
GK8r34VgOunId6+r7eZQ+ViFyphuBQMYk12BAQ4LHlzPiOxw4lvACkcrD5+e
jH7h+GTo+AXJ2NfhAXYo/P2zPL780OHMj85lNN7glcWfXcRo/CZvwP8KBv3b
SNEc+/lb4Aq892zXSSNfOycZuf/cZOTB8xzurQRJHYbd4U1SfVvA2mTBggPd
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
XRBMacvw7PBaPDuyHo3HItF4YiMaT0Wj8XQsGs9uQeP5rWi8sI04H4CL25eg
8eoONF7bicYbyWi8mYLGW6lovJOOZ1J3d9OSZ+zhC2C6mozzqWtxLm0tn8e5
tHV8OXZFL4SPx2Bz2WLooL42/0COD1buPGnjXMSuCsKQQX3w6DKd+Z1EVN6O
J9PjUHFzC0w3YmG6Fk2mR5Hp65RLLz2/EiVnlymXXkyXXnRiAZk+F4V06Y8O
z0LBwRko2O+PzQvcFddz08aT6WOQs8tPcf1hkhce7vAk00cgS7l0dzJ9KDJ1
l36fXL8XOwgePL43qPkFd6XBmaFoTrDjflR/XF/thBE8YjbR9ohNn8gq4L6a
SL6zSfUGVvkaJ5yf44BUf3v4UiD8WN9/93s1HdS997dyAZR+cgEUGSe9Ps/B
UjfmyUp4MvO4izLkP+iP4WGsqMN/tWBS+CPf2aptV4semEt04CMrOqBWpu4i
fLX7z+vktDlttBNFUBf//AxPowbJW2jNQHg4/YC0gD6ytnrUoF/xvziEN+Qu
d8U09z4IGdmXPyVrmbtc1iDcDZNHumLy5Mk4derUr4T5Or+F1wL/L2T7lSjA
l9KD+Upu+Eq++lL2fS236lKh2Xrp0+hX4PxTpaLdVX86Qbp5SlBnU2NaLXt7
JuJDH/6V/tp2uLqLSIeayM63hEExDB3+iH42LXLBt5KMzMrSXJaa7SCW31be
oF3V9Zbt1HtVLjUh330kS97yTd63m5261I9dy7vfXt79fo7dGH5nD+6BC/4O
OD/NAeXznLTWvbmrs8ByUU258Jrq7JiXBSia5awmswf066G0Qdz9g5Y+vXL3
U/r2wJQ+EkpuixSY9YAKNplfXZfNtcnONn8mX+I6FWNSnx6qbkyV9lCLQtzy
11XCikJkzBCVaK0QmUaF+Awj6PDF6efQ5YtC5FId8uYNQR7VId+iEG54tMhd
zjJfPNzmX1BEhSjWFaKEClG6YhQVwgtlq3xQRnUoX+MHE13+pfkjcXz2cMx0
d0DP7/4dfX/ohiG9e8Lb+SeWPZKoEKcXjcbp8DG4vmoS6hJm4/GOOahPmof6
5AVoSAlDQ1o4GnYvwZM9y/F030o8PbAaTw9F4OnhdXh6NBJPj2/AsxPReHYq
Fs/ObMKzs1vx7Hyc8vsX4pfg2ZVEPLuahGfXk/Hsxi48u5XCSpNmzZ10OZDv
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
1x/HN/pSuH/Ere1+yE4ejaydvshK8kZW4ig8SBiJzO0eyIwfhvtxbri3dQju
bXFFxiYXZMQOwt2YgRjO0Jo81xG3NjBjRUm2urlezji/sNIJvkye7j3/FusG
/SU9zDcY2utbJE+1R9kqJx67zngW5YznrAzm2WmDu0ujHidm9sLrDYydUhuZ
SN/I5u1G1YvZ6GzuxwgCVEfm6TonMqy7Cuok76e6m7JQWYCtU9m829ifUWe2
C9o/adWaMWNe6Ch+jI82DwUa2vuy548beO2M6B3OoG+/jvofS/TO/LWcOaWh
u4tQ3Ez0wsrKyk/aE13XBkkL5eWf6J18wbx50s7Hsv1M7/ZMnz5dQVbDLbdf
GgBrzjS/FsCqlpItJvj5qJ6TGjz4tR6clgRNMk/8xLZFAfr9tR+0nHSTNlN6
8EhGUO4zsz1t5jCM8XDFqXnDNbYr8ndF1lKVgQJcMcatP3KXudK0Ka0Qy2Cn
7IIMiohV+MhiIwbiQmg/VXI7zTf3aqZcVowU024u03KZ8Bs4uLv8hyOcpGGj
mjYftx4LVvN45PXikSD9GamcBY4tK9jYtbRjuuLNGme8Wd2qHSPrlayQtWxq
w51US2YaqzrMCY1LWoZ/GxY5oz7MGXUL9fb+fGdc8XdUF0mS2fjTnXuoE60O
jHFQ64cljuql2voyM1OmYJrHd2+ypKfi06s7Ioba83dfmchneHmC/AmXJjjj
ol78mio/UXqklyfxd7HSvB3Ru9u/I83HEddkTOC6muJzY2p/3JjWHzenCTJu
+cub93ZAf9wO1Jr+d2S1hLszBth8gYygAciYORD3Zml1P3ggPPjso716I2v2
YGSFuiBrjguy57ri4bwhuB3iQl1yhv/AH/ijB//UzeYbBJBw+6cNxKkgVzxa
MgKFS0eicJknipaPQvEKb5Ss9EHJal+UrqGARIyhiIxFLg2va68eODbHE6aN
UygiUykg/qjaFIiqLTNQHTcT1dtEQEJQkxCKmh3zULtzPuqSF6IuZRHq0pbg
8e5leLx3Ber3rUL9gTWoPxiBhsPrKCCRaDi2AQ0notFwKpYislkTkK2L0HAh
Hg0XKSCXEykiFJCrO3URSUY9RaT+Zgoe35JKRd1tafzX3Um3Re3ddJufUHOX
0nE3TVX1XbN87FISUnk7SUnIsSRKyI14lN+IQ9m1LZSQWMpHNEouiYSsR/H5
tSg6uxqFZ5Yj8+BCHKByBo4eiJGuvVm9sHmRJ+6m+COXEpKzZyr2rPakhPyA
7F1jkSUSkuSDrB1elA9PZCaMoHwMx/1t7pSPocjYMgQZm11wN3Yw7lBC9i92
gsMP32Dfoj5KQm5G8n2xjrXWGeum2KPXt/+I1X1/CZee/4idlI5SHjANMouC
8tEYqcnHsaBe6MdwLO38Oh5zlA9b0Y8W7bAV6fhIV4wzwb1Uq1UY/3Rdv8/0
CdcWaTBjlV9rU3s+bqUYQmJ9hFjgrg8Jt04GFJ5fdjQa/GkngtG+wfInCcYH
LInZgWCYWyXWIoDsM4/Xfta6IXM7OztbjwUWtZCHm6frd5XtJ4YpQnKDfPex
bM1qcerUKYzx9camae6aWnylG/hEgmLEQAcZmCYPSOuu+gjJHcJNwh0/U8MM
ma59gGhzllabeUDWZuob5/3/Ug90luWD1b/RcqpWF9XTV2GMt+WE97FVUwpa
BoNFLLroW9lnlouna/t9bJ48xHcudUMVv/60Y8GQ6Z+qoT+9l61lGWKxRzxm
qBpSMny1RiYeK9nQpUO6+K+kVmjLV1I6bEU3bH7XSjmehOuThsL0dRYW6Od0
sfJmOWG7l3Y9U7ngkqyrMPj7b9XJW0o1prUoxg0Z52Wl6woQPayXSIaIxEei
FnyOoh2XJjorybAVyeBTmeDYAxFu9rjKh17lj6FoUDP6WxTjhj8p4a819G+1
UowBuDNjgIiGRTIydMnYSGHzoHhlhgzGA5EL1hEKXIwPJXfwj9/Z/EHUAnv5
a+7OGYK8sGHIWzQcBYs9WCOUYjxa6olCqkUR1aJY1GKVL0rW+GmKQbUoY+QY
5fSjphYbJqOCalER449KFTmmo2prEKoYOarjqRbbqRaJc1GTNB+1VIvaXVSL
1MWoS1+KOkaOOkaOx4wcjxk5HjNy1DNy1DNy1DNy1DNy1J/aRLVwxlmqRf35
bahn5Khn5Ki/vAP1VIx6KsZjKsbjG1K7UEfFqLsllYpaRo9a0YuaO2k2P3JL
jWBV3UnRy6wVO1FxS9eLHYupFfHUCurF1c3UilhqxUZqRRSKL6xD0fkIFJ5d
hcLTy/Ho5BIUHF+EgqMLkLE7mFrhhZEuP7Ps4e/TV8UNs15kJY9h3PDDA8aN
TMaNTIkb8SOoFcNxL44JUNeLu4wbd0QvYgYheV4fFTmUVkTx3bC+P65RL86u
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
/tM2oDd3gcW9macAvsfvWyf611ZsONnxhUE3zAuZ6uiwUUsUtxlW/sJI97bX
dv8/pnu77pFGeDNhjetKRxpIbN6nTRv9SE5nNkL+XGJiopyk1ua0AmNusMb1
v+ikQWQcOf66E5NvbPhYTL4xJGmziKzqxSedDfZ3baXBeqCzsQwOGCKb6il9
2ZnxN4QwLXB+9H7g813cBvif6MCX4QNZ1lpKDSSvlQPgnTonwWD8W2x/Fwv2
deuvOf/ftUL/C1aG3igS/KeMtUf5fCfrzp/4L5vjjAdBTuqcNv9//a+I+el/
4qhvHxwn5vf7OKHfH75V+D8p2NfQbyvst7X4fptfKPgfGeOkwC8CIO5f4oPE
iP50+BuH98alydTjy1Pkhb2ic/+qv85+tVapOH6+UtMHKsefNLqPcvwC/juz
BhP+LsrxZ8x2VY7/Hh3/fR3+mfN0+C8YhizCPzvMgwIwQjn+nMWeugB4Ef4i
AL7IF/iv0uC/dbIrCtdOQOH6iSiMnIwiOv7iDdNQrDv+ktgZKNk8E6VbCf84
wj9+DsoS5qFsxwKU0/GX0/GX0/GbUpaqayCYdsuCpKtgIvxNdPwmOv5jUbMV
/E1Ho2Gi4zediIWJAmCiAJgoACYKgEkJQJxFAMopAOUXEwj9Swl85UsvEfqX
CHxV22y5ibP5JxRf2opD23T2X4gl96PJfbL/zHrkn16LfHr8vBMryf3l5L54
/HDkHFmo+kDZB0KRtS+YHj8ID3YHIjNtGj2+sH8ipo5yIPu/R0aiLz2+N+6Q
/Tc2uePMGiccXvwDNk34G0SM+C0i3b/A4oFf4cdv/wkz+vwFHL77B8zp+xVW
u/4SMUM/Q8KQjzHi+/+BuTQ2OvcF+7ZCfYOxN8D++xbYd7XA/pNOYG9eRbiV
c9fDuXF2ULtWUAdzibq2urfZMXa1ftayZYhSJrm0p/yXbX6Rlcmh758z2q7T
ExgoFtrMemtm3rwmhXz3u/fD3LjvLww/1tyn6WwM2JpJN07hscDceMmBNt1+
o0j8f6y9B3BUWZrnqxAgb0EIVxS2KCHvkEfee+SQ8B7hjQRIwnvvhZFFFnmH
8IKiarqne6a7ust3FUXhqYmdjXgbMxO7ETPvbez/fefcezNPZt5MRPVWxEEg
paRS6ubv/j5zvmNuTNdNVWss1Z85rvCjTRNdbDOjd4/SJboyiZoRXbk8WXsQ
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
m/sJbuR6oJM0s38+rSIPDCzwwsAiH9xa7Iv7S33xcLk/Hq4IwMNVbKNeMIbW
hmKoOAyP1kfg0cZIPNoUjcdbYvB4axweb1coGSJTMsWAko/0KHl7bx6aiZIP
iJBDB2kplNyfTUqZRR/PpCXpZkdZKuYRgU+tiUNLaQI6diVgoCIe/WWxFM9L
Mf3gTorpS0MwUCJTcqtEyVrSz5r13uiRKdlVPJUoOYNTsoMo2c4ouXws2oiS
N5cy3dSl5BmiZPV8W17n2kk3+6pcKxzOdmCU1G1nlG/ivMnWVe/mLzKU3jdC
yKwKZ10rsLTUDknWclITk4kvUVN6aiQGF3qUFA2V1Ge4x6WoEFSvsCY1T1hq
+HNzIx9yhOjoaGWrg0YJ1fxSrFeJYDRTn9UjInKG/D72bXSDeAu104HZ35VY
3XAug8HP+14umu78Em4yPINgPYxwXW0HmjSHzU6HmWLJVF83ZVbaalE5QkSl
NvmvNBNc4c2NV9gMHxmX5oyWdJthrPxs41xE+XmyHi6s9nTFkdmjcJI5pPso
c5zysCDlPDzbCnvYVjIferH4OiKaHnrc35G7ZA1hsZajUYNH1AdaaQBpls0I
icZgaTUEW3ObrA620zCyNUJgZCQxMkpmZIy9xMg4tpzQnUCcZIxMkhlJetFH
jOxPHYeBtPEYSJ+AWxkTMZg1CblhXjiVMB2D86bgTu403M2fgUZiZHfBbNwr
+hT3F8zG/UUeuL/YEw+WeOPhMh9ipB8erpQY+XB1EDEyBEPrwjDEGLlhLjEy
Co82K4yMlxgZJzIyVcPIR5yRGRIjKSy/T5zs35NLJlmIe2SUt/fmoKc8m3iY
he6yTGJgOrrKpHwnY+TgHinvWbk+zhyduxLNZuLOnngelQ+WK4gM42lPDSJJ
JDu2+ODKhgC0b3RH94ZPNIg8wxAZRYikiLxdjshvUkTeukRCZAtF5M0L7VFX
ZI/j+c64mm/DdyCUJznjOF3ZJaljsSQpSMGiZvvBWPmezq55tWuXXd9Weq8L
g8NfRwqvaFESZat5PxtN72HQ2ZAgl5n1w3oTs3fUxtXrA1V/2FlRURGLuhV8
vU8XP/1tVGRfgn0nFn/bq/isRhRHaBpcWSeZEbczPhxBva1KLRznWWtb4fet
3K90OWjQ7+pkuvg4QrjKxPsvL28eSeHmyHHopGKOrGyvOdngcLJkjtYMhbZy
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
xjLy\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Rho]", ",", "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.73263779261893*^9, 3.73263784141894*^9}, {
  3.732637960719654*^9, 3.7326379766722493`*^9}}],

Cell[TextData[StyleBox["Plot of I3.",
 FontFamily->"Baskerville Old Face"]], "Text",
 CellChangeTimes->{{3.711120179765524*^9, 3.711120195725868*^9}, {
  3.731343141503573*^9, 3.7313431489107256`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", 
  RowBox[{
   RowBox[{"{", "I3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Orange", ",", 
      RowBox[{"Opacity", "[", "0.7", "]"}], ",", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", "10"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Framed", "[", "\"\<Plot of Sc I3\>\"", "]"}], ",", "Red", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "\"\<\[Rho]\>\"", "]"}], ",", "Bold", ",", 
        "Red"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "\"\<\[Rho]\>\"", "]"}], ",", "Bold", ",", 
        "Red"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "\"\<I3\>\"", "]"}], ",", "Bold", ",", "Red"}],
        "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7111202184293613`*^9, 3.7111202226734524`*^9}, {
   3.7111209916871133`*^9, 3.711120993624153*^9}, 3.7313248036888003`*^9, {
   3.731343150965768*^9, 3.7313432651631284`*^9}, {3.731343531448671*^9, 
   3.7313435326416955`*^9}, {3.731413373567907*^9, 3.7314133782313733`*^9}, {
   3.732554865806258*^9, 3.7325548772223997`*^9}, {3.7325558081754856`*^9, 
   3.732555813911059*^9}, {3.732625757117705*^9, 3.732625758527733*^9}, {
   3.7326377182123885`*^9, 3.7326377221784706`*^9}, {3.732637761662289*^9, 
   3.7326377804746785`*^9}, {3.7326380588124623`*^9, 3.7326380782364044`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxknHc8le//x22JUGhJS6X6FA1p4FwnikoqlEqDVFqKlF1JaZFoqTS1JyUj
5FwnKxnJ3rL3Xsf2+3xc13mfL7+/ejyux/W43b3O877v9/UerxnmVoYHBfj4
+MZI8PEJ/vsvu/jplpoYZ8ZHz0pJFY1Jmvfcpu37HJG2LrvPIOCeczjK1v8e
Xyu9g7F6YMa6K5U7VhsGzk/1cU5AZpl5AzXShxlTfh5deL2yi6mw1Ljic0E6
qvvxYWOAhA1DO4rtNebsD6b0mAnmPs55aPak2gc10g4Mw3tSz25U3mdeaDvW
pOlZjEyt51Ypyp1jrPRIfrdsihPT2Szp0+eCMpS0f+nkAIkLDLc184Ilz+5j
2iYvsFRcUIWOeqUxkyQvMeZNOPkyP1KPabXKc76Pcy0SjTh5qEb6KuPAZPNc
r8oVzKNvGqpHJTagV5XSN0RkPBhFO1NNo73nMpeMfpOu6dmMtMZ9DlKUu8Hg
F3rxWW3KZGYAM3sJR7UVNT95c/yZhzdDkdMpPsNpDHOBveitzwVtCKty+AIk
bjGEbxTqSp3lZ777tLzliFsHupGgcyfS8zbjUO7kL5ovOtCc8kNbFBdw0G4z
H6UkybuMzTNqjhVE1qEXk+8HFKR3oX86K8LzvHwYlbv5/K8Zl6LpBvGSPs49
qMdj2aYa6fsMP3NxO+/KHPT4StfxzYp96NeMSyWcmw8YdhbuY/CmVCTPmps8
KrEf3QvNOC0i85Cx9sOSmmjveHS/fceCKJtBZKE/a5TcnUeMTp/pO92ifiD3
uzGxmp58TNWyUw8V5Z4w6mLGqC6fEo7iP++2nbyPnynoGK28xOcp46Xui92F
zl+RaFL7LI6qAPPIFbF9zzyeMZjjsm/NcPqE1lZdz0gfJcjcYvjlvdJGP4bs
m9XY/fZr5CYw2+1zgSBzhcLOdn+J54ySoOU3pc76oWiFyKWen4WY06r5GGrJ
zxkRt+/fqTZ7iPhXbis74ibMFPn69kqk5wvG+uZiIcaLu4i5teGWzg4RZuPZ
LalrNr1ktP8snJXMvInOWV3SUlwgysxc1zU5SfIVo2Duq5SCSA8U7q7QOjgo
ygyXeXbAKOUV4/XGKGVXx8tIOkDOMniqM+PQGVGVjOLtDC7P89df/jO+MAyl
pO5hvIn1QVyeEx57c+QKf6Hti7a7vI59jbg8nxe30v5zMB2VR+AADdkviMvz
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
wbUTN/3WmcnjOUY4RFXWMhgLKGsutdzG41nS6FN/eVAY9t5sNBj0gMfzzmcv
44L7I/HUk0cS+wt57+e0zmRdbcUf+OMtl3s6M3k8Ozxe//GDbjReFXR3v5cF
j2eFNbHSspaxuLw2c4LlNh7P0bVM2zPeP/GH3uKz3hze+/nwze+55UG/sI1E
fVnQAx7PkitWMPRzE/FKBc76XHUez1+Lvj4P7k/GfMoCn/sLee/nj1H3BKXG
/sE/GWPGzzzP43nwbuYybcVU7LV54hmdmTyeDY/IHLZfloaNzRRLj8bw3s+v
NAx8P+imY4WTyuu8LHg8c6S8kv7uzMDlriv9v47i8by+LGlAxjITb1s/c7Tl
Nh7Pj0JGL153Lgt/S1XSPDeHx3PTtXX7z3hn4ykmC629Obz3s9aey3c/P8/B
50uXvHgez3s/31kU87M8KBeXHV2RFfSAx3OVoEDPxJ95WLdNU+znUR7Pq7LR
Av3cfPzeWVsjV53Hs+f7s3td6wqwpNB6qzoJHs/FZyO8g/sL8cnrm573F/Le
z8oG3VE1Un9xmuzWTKkAHs+hy0L1vW4cYF3X/mQgmOQIPB/zOJUR6/sCS75+
YCLn+w147pceVIn1/YrPe6y8LusbDzzr7I6xVTociftn3F7mdSoNeP6ZHlMY
4/svV+fEZsv65gDPxxzf8Nm5xmP7PBfZB+wiHs/T3BWVDifjnfK9/F6nSnk8
m6spWiqlYof1IY6plyuA53+C3wTF+Kbje/YnW2R8q4HnAdFJOgqSWTjk1YIj
xp/qgOc/Ju7Ztq45ODO9qvg+uxF4fv6p9/Dv9jzcc97gY0MNL3625TveM+dw
IRabqFJ941Qr8KxrVOThkv8XTwqQmLWonxc/j0l/I2mpVILn6tSapl7uAJ7t
zphtn7ivFC8v/PnQRpoXb/ydPelZjG8Z1j39KlvGtwt4XpeSWm2dUY6NxS/K
BCv2AM9fHNwXK0hWYovnZpuNP/UCz5Nnajv90q3CtisZHhy1fuD5YmJvlK1r
NXb7I//zPnsA4o3600HiMyNqcMLXM/wKs3nxxrapx7f+bq/FBi7HnjbU8OJn
1s/Zj52U63HuBhNNlj8/8Kx0sqhizuEGvG/8+vwbpwSA55uT7ymn+zXi6pLl
jqYrePFGT/Rme5f8Jmz9ac6ERf28+PmLmlDxXfdm3OUgF8wXJQQ8W3iYCVkq
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
+jHu8HnjWyPtwBrpx/h3o1y1otw51kg/xkDXH//5MbJG+jF27nZYnSR5iTXS
j3HlCpXDNdJXWSP9GM/KVP7nx8ga6cfIbnwUrCh3gzXSj1GgYt6JZx7erJF+
jC8NL/EHSNxijfRj1GEX/+fHyBrpx1i1UGNukuRd1kg/xmsP70XkefmwRvox
/iPW9p8fI2ukH2Oy3aZSzs0HrJF+jFbl72xFZB6yRvoxShsKi8ndecQa6cf4
BZs9UpR7whrpx2i08LvKEp+nrJF+jE7JHv/5MbJG+jHqua38oLTRjzXSj3GK
etV/foyskX6MDS13/vNjZI30Y2S91boa6fmCNdKP0cu0+T8/RtZIP0az8U/k
kyRfsUb6MSon6x00SnnF4vKsaDDZJN/oPSpsKNMfXW2HOhNunz1b+W31NufF
YzQfOjP+zDytW/I/fdHpUWu2f7QRZYrtzrr+2iIDvdk0QXNr61Xk5fk3pDdf
lCnvLP5e53/6UWfT65uT62Pu9Y3p9TeT68N3IZNe/9Guoetj7vWnnDXwHesj
yvzZcpotZfWKxV0vufns2APn9yiO4bK7Xnodg3t97v51ykn43/2Mkfulvmvs
+Xc/i7v/Jr3/j05D9w/Pu6bGtHMfTvqiPWy5RZ+ajZFgkVv1kcqJWroXvxgH
T3yHrvmVf3as8QbdJhxIqJwUJcrsqJrEUHsUg3RWHxu74eMVtJnu30n2gw6t
T09emFj4DhnLHvv+NvYyrDPo343BQ38Xc//uRHp9S3J9zL1+Pb0Om1wH7id0
77cl+jN9kfmjNtN1iifh/kMSB3T/86fYEBtqUT9mBfy+EXT/GLIf/m7dxeVx
oxJFmfwz1G4tfvqKwf27HRGa5Y+cfZHQkyi3JukVLO7+YwdqVP7zEQidcur6
hIQY0JO7/8V04f/2M0bu11IY2g/8hNL7fBczdJ+8fDK9H2fT4v/uh8W9n1H1
f3+VsqJRY+GUVSLKN9F4/uY14mdnrN5y3uJZrlE4ssi9mzzqf/r5F5fPcAx5
8BVFC2aOrQ66huo9NgeInHVdLUavc4tcB3OvY0ivU5czdB2IW1TpddaS62Du
dZTLdZU0M78iq2jD0nOqJ+H6Tk+7dl1Oi0J8s4oMVPe+g/vU43v15evEMGS+
au5dh/+Zo0l5cz55l+JXtDi17Jzq6rtwHdOcI1u/FESjOecefQmQMGdwr/O6
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
TjP4/P5Se5ggrsuPcjnc6TrN4PPMxkx/JVyXw5NSkuk6zeDzmZ53bia4LueG
mDXSdZrBZ7XHOVkdiw9TtaaJe24MPrffGebbLj/vm2o9cf8N3cPibZ9pX3yO
WkbeeWPw2d408WgMrz7VlrzzxuCz77ExP/odOC/yzhuDzzGye1vFl9+glpJ3
3hh8Nli4fzX9Ptxf8s4bg889szVYHt8daht55w3d+x6wvUK/GzdA3nlj8Jm7
WdSdm9+GOk3eeWPw+UXF93j6PTlH8s4bg8+LjGKvB7vaUecpEnfeGHw+XTNn
Dv3OnDt5543B54CzJ7y/uT2i8n8i7rwx+Fxf+G4j/f6cH3nnjcHnjUcGv1Y9
d6KuESTuvDH4fD1dWYN+ly6EvPPG4HOcvHf9qKcLddMT4s4bg8/jCU236ffq
PpF33hh8BttleZZ7P6NKDxN33hh8dgx/HEC/Y1dN3nlj8Dlnbbmk1Kvn1DWx
xJ03Bp+fqPNfot+3u0TeeWPwWeJpauTGo57UEPLOG4PPvzINhj7xvqC2kHfe
GHy24ODdvyv/BXXzGuLOG4PPy7B4Z/o9PFPyzhuDz0n3LxSpaHhTP5F33hh8
1krhFKTfyesn77wx+DwxHGV4suAldYcrceeNwecXa50v1amEwqD9Bnms+mw1
IboW983UsW0p81n12SXZNgnXZ6jKvX72MYs+q9bt24/7ZvhuF+9RVn3m5Lyv
j/tmKNLx2JdVn5sEqtbjvhkGvp5tusyizxkScu0aV37BZ+GUlaz6XCyidgb3
zVDNYZzKqs9pmyd2474Zzr+wy4hVn+OkI1bhvhlmy95awKrPIQrnJnF9hs6L
Psey6rPXobl/v9T8gSG3Rz6y6rPj8USqxpUa+Kh+2WwIiz5/jZY6hvtmqK8h
fYJVn79IzVfEfTNUSj3+nlWfI5Pqd+K+Ga7dZD7Gy6LPIfIpYrhvhmwv3dVY
9Tnguwc/7pth3ZzoN6z67HXQmBP3zRDeyO2/w6LPrrlgGNdnGPSnXYVVnx2O
CbTg+gwfHObxZdVnm7KeckP/DvhJy+sOqz7f0sr8+aWmE67xFAti1WfT2tfJ
bOLd0P1nbBarPhsY3onQuNIDZ6axgRAWfdZuP+of+LEXXpcpFGTV5y27XxzA
fTP8e/XiAVZ9/jA+rYD7Zqj+tucGqz6LUUx24b4ZUioe+LLqc+DDMkncN8PN
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
   "], {{
     {RGBColor[1, 0.5, 0], Opacity[0.7], EdgeForm[None], Specularity[
       GrayLevel[1], 10], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8TdX3/8+dzjn3fUiTlAxJg1RKKjJUGhAaNGpUMhZJkyRJIlGGSqg0
m0mGRs2zVJIGEUKDNBcpot/r+Xnt3+P7x3qf113vfc499wx77/Var7XrdO5z
5lX5KIriNIoK2k7XnydlQ2W7Z1G0XvZnHEVzi1F0jrbT1ea7iih6Rv5z9fl7
4WeFzxM+oxRFm7T9NxdFV2n/02VnyH6Wf2wSRacJ/yQ8Rri9cC/ZqQX7f5H/
nsTtn9Z3na3jTNV3favjL9Dxz9Lnz/X5OdnzbNXmQvmeFf5U9kxk/I3az1f7
M/W/59XmotjtXxC+WPhF4RWyhbKXZBvU/jm176j/Ladd5DZX6zw6yM6U/apz
uzcx/k34PuGzhMtqV092oOwKHb8iNu6v/10gu1DWT9ZRdr5Mu0UHyPaX9VD7
cmzcTTgVrit8lXAl4frCvYQz4YOEm+scK1WKort1kBbClYVHCTcTzoTvEr5W
33G27BzZ7zrPcYnx9bJzZefJrpC1K/j6T5NNld0p+0Pt7098nk11zAodc6Q+
fyv/nXyn/MfIX5Z/hD4/o3M7X+f2tM5NrujgyOc8W/4O8j8qPEv4DOGHhX/R
dX5Z+1+tzx/K31fbb+X/Q/7X5b9enz+R/wZtf5H/V/lfkf8aff5N+FXha4V/
F35N+Drhr9TuZdkr3Evte6l8rwo/LHyC8K3CnwvfJPy38BfCA4S3Cu+sZ/R3
vl+2q/Cf2m6SLVObfrH9e8r/T+T2P+t7X9L39tH/dpd/s3x/8eyp/Y2x991D
/i2Rv+sz+fvHbjNPdq/sPtk0+dvHxlOF2wnfIzxZNkx2h+wx+U+Wf2jk6zhY
dhvXU3a3bFTkd2O47E7Zk2rfRu3vEn5cuFVsP+/qCNlI2RPyt46NHxE+MfYx
n5DdHoXvkv8k+YcIL5CNk90f+R6PjXyeT8lGy8bI1umazNU1OVX7zNS+p2v7
kPzr5Z8n/2m8b/JfEvtdmyx8SuzznyLcNvZxnhW+IPZ1ulq4svAhwtcI7yR8
OPdLdpisQTjPo2OfN9eqcexrd4PwzsKNhK8TriJ8BNdAL+ppOp8msc+hWezf
cJf8p8t/DNda+FTho2Jfz6axr/UQ+dvLf6Q+76rPDSOfz0l6H/aXHSD7XO/I
TXonahb8ntSS1ZZ9If+AxHiF8C3C+wkvF75ZeB/hVrIDZfVkX8o/UP59hVcK
D0p8/BNkdQve9yyui6yv7Dx+s+x62QM658N1jv143sLzMDNyv819nxGeBZ6J
aZH7WJ6TaeF+cl9nh+eL54x954f7NTu81zwzj9E2PCePh2eHZwg8Vteqg65V
C/1vTniGn5T/fNmNkc/tHO6N7FrZRLU5LPb5PyjcUHgAz7uO007HaaTPg4Tb
Ch8R+3nnuZ8S3hXeGY4/Wm3OUJvmanO8rlGdgq/hV7qGtya+tm1kB8nqy05W
+6l6Rg8R/lttHlKbLsJjZCNl3WQTZcPCOHib7PKC2zTR96Tq8IZrn4+173Xa
7ix/A1mVgvFH8l8jf4XwEuFrhXcS3iL8oHBn4VtllxWM/5L/AfkvLXgM3ldW
RyZ3tF/kcWEn2aGR34s/9Y/xiceXzcIThS8RvkXWqeDjbJJ/gvwXhfH8Cdk+
2vdmbS8uuD2/v3LB5/aTrsdC/bareN/0eRfZrrIjZLsxF5A1k9Uo+DlvpLYF
XYfb9B3H6HN12d6yz/S9/eXbS7i1rvOxaneo8FHaltT+dv3vSOGi8BDhtWo/
FJ/aHC1/LP8wfW6sz3sWfJyG8jPIXC3/4cL/0Q8LL9O+/bTdQ20+Fb5RuJrw
J8I3JD5njlu14DaNtV+i49yh/72nNr20/U+Tn8Pk38Fv1+dF8vfWNsdvly+n
9n31ean81ye+JoNDv/yIbJGe295hLHpduKvw+8IvaSyYJHtYVlf7vkvfKPyi
7MGc8V7yv8xzLZzqu76QLdXn/eR/L/a+iXyfyz7W5wbyf6LtM/IfLLxE+Cnh
sv6/XPYp77M+3ykbIZsiuyPn4++t9q8yRgjXEH6Nflj4OdkE2URZdflfib1v
hY73pewzfd5D/hcZT+WvJryQsUN4T+GX6IeFZ8hG5nz8w+RfFvvY9YU/Ep4l
/IbsCdmTOfcB9AXn0ufLOsjOZPzTNTxY7U9nbBM+NLZ/ZOgraH9X6Os6hv6P
frBj6GPoay6QrdLzPCtznzJC7Rtoe3boO+lDwXvrPP7VdrvsFeFHZI/K9tc5
L4qNX5M9JntcdoD878fGBwl/GPt3l7j2ssX6/KW+a2DsY9bU/3Zo+58s5lrK
PtD/6mjft2Nf8+FqfwhzZ957+d8RfiDne3y/bLzsG9nbsndkR6nNl2rzlvA6
2Zs540byfxH7dxwtvCJ2+8bCK4XfE94gWyR7X3a8/N/Iv0L4O9m7ObdpKf+3
PM/CTYS/it1+q2xlzv5j5V/HfFy4hfBa4c+YQ8k+zRkfKf/y2Nfvb9mXOX/X
X7IvZMtlx6nN+th4o2yx7ANZU/lXM08ULuqaLZO9oM9t5f+FOaD87YR/jf2d
c2X3yO6V1ZL/DfnHCmfabwXvjz63kn9j7GtQU/h15h45vz+jc8Y8o3fn/F7M
l90nGyerrfZvxj7+TjreKtkP+lxZ269kG4RPUJvvtF2tNrvJt072B3MGbdfK
fhfeRduvZb8J76ztGtnPwlW0XS37KXbstCrn47TWMX+MfW12yNbIvpZVUtuV
su/1v33U5q3Yz0lvPUOnRX53RhU9Zl4i3Fl2InMW2S3y7yt/U8YC4TrCTYRv
Et5H+Ogwd6oZe67DHKxG7LkXMUu12GMS8c6eseMZ4pS9YsdCxDJ7xB7DmMvt
HTs2+Erv40ydcy36AvWhM2X3yHqGuEnh5/+ORYwE7h7io5j3Wri2wJGRv4O4
S4eLeodYieHhYA8RUWXZvTrucNkdsitDDEX7lfozQ42rh3nqQK6HbJLatIyN
18heoy+XvSF/N/k/EH5Z+LLY/vWyt2Rv02/I3zk2flX4cuF3I8c270TGG2WL
Ix/nNbXpwvsovJbvkL0pWyh/p9ixzE+yD2UfyX6TLZV9IvtB5/+8zr9n7Jhq
UOQY503t2z12+7eEewh/zPeq/Qtqf0XsmGpJZP97atMrdhz8o9q8qDZX6nOf
MPeuHOYgzEWKYQ7CXIR70TXEqvgnyPrz7ESefx4buz+eUPRcjL6WOR7zQfr7
h4SPF7458nzvuDjsG3neh/9rnc+czPPvtcJPZ56vL1f7m7XdpjZDhQ8SPkW4
p6ytrJ1smPz15T9VeLDw/ryXwrcJHxD7+b9U1jKyv4vsZFkr2RC1OTA2vlLW
PvJxusvaRP6u29Wmntq0Fh5d9PyU422QLYo87o8tOobg2OOKji14LwcK7y5c
I/L7tpesOtdP/l3l3zPyu1ctMub93Dty+74hDtqF6yS8W+x9L5K1kB0beW7I
HLGKrJ/a7MK4HfkdJm7ZLfI7TBzFce4rOh7it67RdX4qcxy1Wnh25vjqVrXZ
T9vjI/cjx0XGg+SvG/t7rw1xFsfn/awa+XuvD7HY7sJjio6f6Iea60H6WniZ
+qvp4RmYGJ4jnqfxskd1DufrJT9OD+Ak4bOFmwo/LHyucHPmutq+kfiZeUz+
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
aMfQUvZJrV9AJ9MtteYCLU3n1DoF6oupO/5fvYPw2sR1ENRprklcN0FtVJ3U
ukHqm6ql1hZS01Q1tS6OeiXWCUQ7Su1VpdTaPGqyaqfW/lEzlabWQ1KThf5s
XeT6piqpdXrUQ9VMrRukHmrv1DlH1pfrWHaegrnr/mWPh8wb65Y9zsOrnF72
+nvwM7RnjSPqraqnzutRo/pu4poI5rfUd8PZXy68PXV9KHVbu6XW4FEvuV9q
jSW1Zo1S61uo3TssdU6TmrKGqXNe1MOuTLyeFTWtqxPXrVNfWT91rpP61i8T
r21FfesXietKqO3aJbUukTrBQ1PnSalBayJ8aM61hAek1oJSp9YstQ6Z+sFj
UuuQqf0kFmKuRa1ci9S6LOrdjkqt56RG74TUuizqyI5LrddCs0GdKXoH1leh
5g4Oj7r4DmWvGQjfSA0jvCw8JzWM8KDU6+1InXOk5ojxmjwl3CY1d3CN8LfU
6KEHhReldg8+mJq1zak1KvCih6TWo8KXUpcK3wwPSU0r3PDYcA3h7eCZ66bW
zY4O1xOeD76X2jp0qPC31NahT2V9qjZl5wxYe6p92TkV+GTq8sgBs0YQawJQ
E8W6B4sS17ywpiW15KyDxlqXvyVeP421p5qXPW9mTapjy56Dsk7U8WXP7Viv
krr+JyLXsjUqe97GGlP0t8zh4Wmpz0XXy3qV3ydeV41186ibppaJNRmop+4e
eU0M5mzUGbFeJfXvrNeG7p35GPlpNPbM09ATsC4fddasp8AaGtRBU3+FZp45
BnoCamcOKXvOilafeRGapHvDs42+dUCYE7KmEhpXzpP1FfuH+R7rLvUO85m2
kWuv4NNaR9Yq0z+/E1lnS5+Pzr1fmNuw9lPfMHeiLopaM+aorIPEOmC84+Ty
WN/yorLznazfxfNJ/o/1MC8pO5fJmmznlJ0j7BnmridHrmli7sR6T6yZeWnZ
+cXuYV56YuS6M8b6lpF11Nzr9yKvM0kN5sbI69Exh6SebEjoWwZHXjOQZ2ZI
5HXqmMtRZ8aaltSEogVnDRbWgkDHzzqW1HhuiLwmIePUiMhrXe6UWvM8OYyt
6JGpZWAeixaBmog3UmsGWKutlFrzz5owrE2Bvp+1XFjPgTqBqWH8RUvO2pvU
xq6PvI4lNafUD1BTyXyAWIn6qfplxxusz9a27NznDWpftewaH9YiY+xDT3Ij
71HZ9T7X8LvKrpkaU+F3hPX3WPOhc9l54Ou4nmXXdvUTrlY253Y1v73s2p8+
wpXKrve5Ujgue02DnsLFstdDYG0l5orovVhbifkh+rCu/Pay1wog70MtPzz0
KPmPKXsNxu7C+bLXcGDNEJ4r1spjnRCeJdbiYy0LnhPW+oMbZ4ymloH1N7gm
rFXLuhb0J6xVy/okPHusm8r6JOeVvS4fNfX0CazfyJokxLPwxu9VOP49AE2N
tuWya2dYB4D+hDUeWU+MuuwpgVdvm1qvSy6A+QD1C6yRckHZ6/jlK3mdPebF
rB9Cv8f6rqw5Rt039RWsJXJC2WshsubJSWWvhdhbOC17HQzW+2XujX7uJvn3
LruGi7XpBqXWWbIuHPNn9Jqsr8X8Hx0na9Ax50HzydpWxAjoyVjb6sHUukFq
wOHx4IGpGT8ptRb3Nq5H2bV+rL/BMwC3wlpbzM/RJlI/eGDZcTXrXzFXR2fJ
GlzMz9FfUuvH3AkOjdq9WmXzaKz7wXWGx6Eub7ey+Sjq+Hi24apYt+S0stf4
HVLh72JdRGqOiI/Qvb1bYf58X/TC2jYuey3EkRXmyckRjKhwn8+6hcMYQ8te
h3Bohftb1g8cznha9pqEN1f4PKm5Y32wJ1NrDqnbeiG1Rm4g42nZtXK3V/g9
ZZ1J6q2Iy9Dh3Sr/fmXXGFLPReyGXpA6L2IxdIRwZnXK5iGoBSOmQG93C7+p
7DpEdLMDUms84aCalK1fYE1gnjc0JW9UmG/fu+i4++/UurvFYX5Cnu/DMG8h
h4eGuWXq3BwaRX4j9XFoC1k3Y+cQD8LbwyGjmeSZoW6LfmOXsjk0+pkqZXNr
XLeaZfOi8AB/ptY1EXOtT63Zow8pla3hoQ8plK3hIa5fklrrhU5veWqN7adh
vkROEY037x05MjTScCnkzz4Pzy15O3iJv1JrcdGHs04FuTE4jbWp9XjoDFen
1mHdFOILuFk0maxTsXfgPX5KrfWCJ/k1tb4LnuSH1NpC1otgnk9NGWtBEEdQ
kwVP8nNq7RnrJ/RMXdOEDpDxgrp41oUgLqB+Ct346alzt6zDcGXqOqmlYX5I
bpV49vvUGkg0e8R91CrRb+9RNl9N/79n2VzxkjD/JHeL9pX1SdB7wjN8m1oz
iQbyi9S18/Azb6bW16EzZCxjXS80foyDaAPgkX5PrU9jDNq9bD4ZruMj+ZsF
3mZxag0kdQfMD8mDMwY1K5vb5H05qGyuDA0bc1fWjbkgPDPwvug/V6TWkKJh
Y47KmjkdwznA6TK+/JdaX8c4kitbF3duuF/wu7zjB5fNxZ0Qniv0bO3DM4ke
kD7h0LI5Q/oBYnO4x0vCe0ROgP6nXtn8IfrAf1PnE04L17NveN+JieC06T+J
leDP24ZnD60iGrmvU68tcEa4p+jgzgzPFZq1UeEdh/uFE1uWWqcHZ/VZam0e
vN/bqXV3jNeVy+ax4buWptbyXRHetTlhHM/K5sZ7hPcO3r1buG7kMeC7FqXW
tTIGJWVr53oFTL6X8bGibO4dHvLd1PpYcuj04StD31i77NwHfTI5TrjW1yuc
Q6xWNCfG/UVDCOdJPpGcYN/Qn8AHtwnvafvQH9JPLg59Jn0veZekwuMgtaL0
+UeWzdnS5x9RNjd7beiv4JVZawVu4X+1n+E+osOkXqNDav1Kk9AXoSE9Nlxz
NPLNw71A44/elXgcncra8P5SO/NahfOt5aLXjaHfRsfL+jDkXskRs4ZMv9R1
ZKwDc33q+kp+yy2ptcqsIQNXQM0ja8Jcl7pOs2m4v2hOqT1hfR50M+vD+VMf
hM6TcYr1QFjHBp6E+rX/B7nZS3E=
          "]], Polygon3DBox[CompressedData["
1:eJwtnHn8FtMXx2ee55mZZ2ZayJY1IUVkqdCCNkrKksq+/KgsIXv2NtEmlTVr
iVJUKpK1RbaI7LsklMoSQtbf591n/jiv7z3fc2d5Zu7ce87nfM6tf2a/bheW
giBYFQVBRX+bpUEwMguC7ctBsJ3k7zgI+si2tzrVlrRPguAB6Y+o/bKksfoP
Vf866ru55B/1P1v2fWTbXFKpBsFJeRB8qJP/qfPXkf0qtbdV+0DJ59I7qv+a
MAjekOyj8w3T+bbWubaStNL17pT9Tp3rSUk76fdLn6z2YskxOv8KHXOYjj1c
srfaN+r4LXXsFpI9pN8gfTO1a0v+1fXO0fH76tg6kg463wTpU9V+RXKA+o9S
/x3VdwfJBvU/XfadeEiSQ2UfJ/vusjWQ3Kvrby89ly2THCz7WOm7ybarZDcd
P1C/t60OP11ymvp/rz4X614vkXwiewed/2u1X5Y8pvuZpud1oY7ZU/3bq+/t
Ot+e/BZJNx2/Uv/rqL6dJN2lfyP9CLU7Sw5Se7T611PfnSS3yL6F9C9lWy5p
K/ut0hvJ1lCypfQNut403cMLuv+tpf8m/VHpC6Q/peNXST9TegPp10tPdPxb
OtebknnSB8l+sewdZD9K+nKdo71sHSS99Dse4DfpWrMlJdlPVP8P9P8/9Pvu
l76DzldTx9bgGavveTpXM+6F5y39HukPqP28pCT9fOkHqb2d5BDpd0u/T+1n
JaH0vtIPULtuyeP3BOmbqd1EslDXG6zrX67/dZU+Ufr1ufswvv9T/3PV3l/t
LUsezydGHiuMmUnqPyD3/xjfn8l+uNqr9VuXSD6Vfpj0b9V+VbKZ9Mv1W7fS
T2sa+Pwny76Vjm3KeNH9jpd+j9pPF/d/qvRt1T6Qb0j9++v4bXRsc0kt6RdL
r6P2vpL99axH6Pltq2dblzEu+6Wyb4lNUlP2X3W/k3XOp3S+BtIHq/8Pan8v
2UL9r1H/7dW3haSLft/n6tNW995OsqXs18m+o2ytAn8/J+lcW+jY/SRtdL/3
Sp9Q8vhpK/0+6Q+WPH7G6XxbZv52/tP5dtW5B0pfJ32tpLX636X+40u+v8fU
f6Du97TI77eBrjdI12+vU/xPkuv4X2R/OPJ8UEP2C2SvEfh7YT44V/ZU9l6h
x+M50qvSz5Seq39f9de/gj0kD0qvIdv59JVMlJ5LP0/tLpKM8aD+umzQsHg+
Z+vgRH3OkP0Evg8Z+4Y+R1vpZ8lekr2H9Cf1+x6VfkXF77+j7L2lV2Q/WfaR
0mvreXzG2JHcJL2m9I/U/lByhPQ+6h+p/6mcT/q30v8nfVfGo+6vptoXynaM
pL3svWQv63/Hh54vzpOeSe8j/Rbdz0a1z9FYmSw5RfYLZN9B/xst+2m6zwaS
FmWvAbfKvpXup8TYlLyk6+3DWFLf8ZKz1LeR5AT1vULyP/Xvp/PVU59bi/v/
VM/nELUPDf37P5beWu2DJbdL31rnr+jcZcm10vvr+BaR14PTde7dKp6LW0rO
VHsPyeVqHy8Zo9/zJ+9L7S5lz68X6vgd9b8xOn649Fo6/ydqfyyZw3wp+xmy
19f1evA8dT/nhn7nr+j37SfbM2rfy5wsfV/p89S+WzJL/b/OvSbU0/EPyV5L
7Yt41pLJ0jeTfmno919Tej/dby29+70kf0rvJXtDHZtKGunaQ3R/tXTvNSUb
ZT9L9t1lq0r+iD337qZ2XPLz/VHHXKZzX873JPsAnf9QnftUyXjZt818bCIZ
Iv1K3W9rneNd9W8j/UzpofTurJl6fg+qPV19X5f8Hnts7VLyOzlM9onSH1X7
Ncnusg/W9Q7Ttc6SnKTzfaf7uSD0GLxZ+ua6/hdqfx56fK2VvV/oZ9RK7TGy
76LfWl/yl87XW+ffo+Q19D/1/1n3N07/Gyn9t9jvaueSx+BU6VtIvyb09zBN
+pbSr2Xshl4fmDu2V98Wkhmy15V+Q+jxf4POn+v676v9Xuj7P1/X2159RhXf
c1/p20kfIX26jt9G7cGh55OOOv8k6TN17qWSO9V/m8zvJpKcJX29fuMV6tuf
9VzHb63+A0PPP71l/0X2K9W+SvKI7HUit5kPOun8D0mfpXO9JRms/mnmd/eO
5GH1rx3Zd+D9nS37Bp3v6tDPZKD0qvq/rfYyyaPqv5X6Xx96vpoiffPIY4f5
IeHdqf/skq95pexfsb7I9mvg9fgU9d9GtuaSB3X+epnXPtbUt2U/Ws9rko4Z
qe7TZd9d9h1KfgdvyX6U7A/KPlz2vXX+O9W+SO1ukuXSW0W+1x/w/6SPl/0y
2XoGfr6f515TV7Gm6nxdpT+gPoNZE3T/D+l6fTSWeksWyd5Z9ntlv1b2xdKP
lH6f9OvxwdR/kvr3Ut+zJGfoektk+1y2+ZIm0u+Sfona3QN/XzdLP0XtQyQv
63xddL779b+BrMGy3632FWqfIPlN9uNlf1H/ezOw/zda7dPUbiM5RfrL0j9Q
e57kRN3PBN3PabqXUyWNZb9d9gtkO1rSSPo46b1ZO1jjpN8mva/aXfk90l+T
/pnaL0g+0PWPYb3X/8awxsl+q9pnq32EZKqe566ZfSPeaUPZx8reS7bDJSuk
H6xn/QHvX7KX9Dtkv5C1VTJFx++S2TfDh3lG1+uk642s+H2drf5vq70u8O9n
/b5F+hlqt5M8p/5HqP+oip8X88kYtc9UuwNzmPRXpH+k9jOSP9T/BPVfrP8t
k36y7C+p/Z7ac3n/0l+XvlzthfxGPc87dX9H6Vl2lfSRfZnsa2R7Q9Jb+lvS
V6u9RPKt9HaRfeN/mFN0/IM6/kzWsrLXp89y++jfhF4PP5XeXvpK6btIP1X6
LzrnAaHn6+6R5178ZebzHpHneub8rdX/FPX/Ep+FOUX2N9X+VvfyauD58PjI
vvCeko66nzsyr21HSl7S8ety+6j4j9+of9vIc+1fodeXnpFjkUaSF5l/c8c8
+GsHSj9N+j8V+zdfq3+byL7HRslK6YdGXit/lwyQ/p361le7zPwifY30XdSu
SAZJX8sarXbM/Cr9B2KX0L9viPTv8RHwpfAXpC+V/o1+6yuSwdLXSd9dtipz
pPQ3pK+U7SXJR3r/x+p+p+h/46RfL/tqteupb8h8qN9TP7Ovjk96sp7XROln
6FmdLvlK/Q+J7EttkHwhvWXk2GUdc7D0lfjLav+m818r/VviU56n9Kulfy19
69DxyjXSv5FeN3Q8e530VfjPjB/pXzEf6n9PVzx+v5Z+nO7/GenPEf/J9qra
nwTWJ+j+d8wce9SS9JceZo4dXgn9vX6l44+K/H74/lZI7xr5/RCv9Vf/5Tr2
C8k1skeZfafXJa9J/yF3TEQ8cbn0IHOs+ZJkRx1/rfRvGUuSntLvl36ynt1J
ZY8HrvVbaJ+UePEK2T8n9pF8KXtn2deHXqPqyX6d7KtlW1Xy8+8SeS5hTiHe
W677OSLyfM/3d4zaf4f2Gerr+Ot1/Bod+53kKvUvZ46tXuM34f/kjgFZ3+uy
lsq+gnthDcYXl/54yWv0c/gnuX0Mvqea0k+W/mnF43mU9Ktzf0P44KOlX5N7
TuB+hkq/KveciM+wQPqa3JgI8eQz0lfn9ukaFd/j0Wr/Gfp8jLdO0teqvTQ0
3oFvS5v/bcfarftdybOS3K3zXZd7zsCHu0v6tbnnFHwM5ucj1f4l9P2wfvIs
vw8dk3fT+e7N7Bv3lHSXfp/0E8v20flevsz9TvgePo49l32l9uJiPmCs/RHa
Zz5E/f9HsBTZv8Uf6xbZV8d/Pkf6O3qWPwSeny9T//9Sn+tFSRfZ58o+W7bb
AvuXx0X2lYhfjlTfu3R/x+jejmaOk/1J9X888PcO/nJs5NgDf/tHfU89dT/z
K54/wF++yP2M+Z4/kb2b9Ecqvh7jE98XX+9nxpvs3WV/tuL18lEdv1vmWJOY
u7/6r5BtM/rL3ln6E9JnBF5Pu+p+x6t/N93rsZLvdb4eOt8LFc9X7dV/utoT
AvsnbaU/Kv3ewP5HG+nTpN8d2D+prfNdQryna38oOVz2x2WfEthf2hxfn/hF
to8lLXW/p+t6/1Ycr7aWfob0/yqO/+rrfq7T7z1dfa8rOV7up+PfU/vdkvGA
i6R/oPb7kkz6hdLfwZdjvdH1Z+lcUwP7c52kz5Y+Te1RkkOlT5V+F3Mjczh4
Vm7MBv/wGJ3vHp2vB2NP0k79H1P/+wP7Sx2kz5A+Ue0hxfNfmfubYf06TPaZ
sk+SbSjrufQ50h9TezT+nPQmxP7qe6ekA7G8ZI7atzNHyN5U9hfUniDZW+d/
KTWWAaZB7EMMxFp9Z+xYnZj9QOl3xV4v92c86rccLTlI+pLUa+WRkhbS30j9
7Lsy50k/mPWm5Gf+j57/vNw+yvu63+ayv5YamwOjayr91dTYHRhefenzU99P
c8me0henjpWJmRtJfzF1rEzMvLv0RdJbqd1S0kr6m6nf/dHMv9JfkN6Ma4Ve
61nzm+C76PftpvZC2VtIPyj02GEM7c/zk/0/3f/TuX3UDwN/+8wBnO8OYn+1
X06N7YHx7Sf9ldTYKxjsR9Lb6Xn01rPoJekn/W98KtkmSt6W3gp/V7ZT8SG5
n9w+4/e63mfSD5f9XOYWycXS/8XH17GTQq//n6hvSe2d8dcKPJVY/5bQay1r
LuPtGPU9uYg/wTZuDj03MEfgrx9CLMTzz+0Tfqf/XSD9z9Rj5wFJnyK+Auu4
S3Ku9N9TYwP3sH5Kfz7189uP+Ud6B93/2br3PpIzi3iQsXkb64H0TrL3le08
SV/pf7DmynafpFcRHzK27+D9FPE+WMo43nHVeDex6Fmh519847d17z8GnhuY
I/blevjyai9LPXcfG9rf+gI8S+2GoWMZYhr872ayXaX2+5Gx/4MkV0v/IDKW
3Lrs2IsYjHihufrP029ZJFkl26SS/cHPdf5E524gmYuvgci+V8m+Lz4w68UV
6nuNzvUh8b3sh0iulP5eZCzzAMm10j+KjBUcKlkrfYnO95faL+ocB+paf6u9
GN9LcoD0f6SvCGy/XP3fjpwL2E/SRPYN+nuubEdKmoJDSx+m9mRJf/V/l3hX
/2su2V/2jaybst0kWSf7a7r+n2X3r+q3PJc7BvkysL+Mb4FvjI9cg/GR26f9
OnCsQMyA/zictbxqvJXY/HRJO+nvp47Ne4aOp4gl3wr8fRwq+zupY//jJLX5
3nPHEKtkP67qfMA5HIuPIP1Q4hmwI0nXqvF5sIj/MSaqzieAjfQO7RvhI+Gf
Xxzb39k3M1beRdJB+ofqf6L6niCZIduLkmfLfv6Py95Qemv1bQVmJf3Z3DH2
F9hlWyx5nvyEji+DvUmfUTIGFUo/W/pjJWNOnarGD8F6TpGE0p/JHSN+TMxa
NZ4IdnKS5Akd+xLX0Pl/Ch2vfKa+kdq7ho4liCnAFw6OHSsTMxPvtyZ2IR+U
2rd4uXjf96de2xljq8G7U8eaCyRrwLtTj7VFgfFY1mK+NTAv8GXWauZmMDLw
JLBpnvWQ0HghWDHvGkzvb51vamrfY31gvCcssGQwRfBGfDHePTmk9eB3qWPZ
1wLjl7tGnkueZb6R/fbUsfKTgdenaamxnV8Czz/v5saIBoTGO3eJPLc9LfkF
vCt17Py65HnZt5V9uGxTJBvAq1LH+ksD421gzYy9oaHxJrBoxsoVxfz5Tm7M
7rrQ+BdYOO8WDAu8DKyeuW1QaP+0eeRYhXgbvPwTHb+//vd8aHz349yYLb93
O8Zb6vVu79DxznuyN4x8vwtjY8Nj1Z4p2YbxpP611K4pmR8bC2SteDR0PPa+
jm+k/00Njc9/lBsT5vksiI2ds/ZMDz3eH08dC/4dGC+vHxk7BkMGr4wjf+v8
fvA5cgl8izz/F2JjjyNDX4/x/ljq2PP3wPjeh7r+3uozm+9H+ozUsejGwPm5
D2TfS/bHQ/tLO0deu+aGxk/JJYCVgpkSny/Hh1J7j9Dr/6OpY+ENkuXS70iN
VT0VOP46QN/XCfo2jy/Zl8anxt89FiwDX0r2k2Q7kXiyanx9GM8udDxN7o97
3SY0tgPGQ3xwEs+e+TT1+rVPaH/83YrH6ubSt5B9QW5MZ63+d3zV+RewWsYk
8Tm5ZmJ3YvgTq8anwXZ5psTrH8v+r+w7hMZTmuLP616PLTlXTc4aPO2C2P5t
M9m7y3ZcyfF0c+k91e4Bvim9hfRTwB5KxkLBRMHvWsTGEz6qeCxsFxoLBRMF
vzso9vz9ZGrshDlqif63e2RfZ2HoXCk5U/CC8/m21J6dGvsI+CbIn6XGEp6V
vIqPF9l34fv4XfbJqWMz1hD8ibdz5yiYb3h+y3LnvMhhsZ7NUv//Aj+jb8iv
po6Vng/sXzeI7MvNl6wgP58a63g6cP4MbAnfmPOBvy2qeG7gfeHvzUuNDTHm
wJvfq3isbVGsl3NSx+b4eGCpYKrEgycW/trc1FgRPgaxFzEY8VL32LEhMSLx
Sw/pG9V+RP3fCewjgU/8oT4zI+czGE9Ppcam8InAg96v+FvbKvTzZK55LrSP
1lK2ULJj6Gd0qc7/VmRuwd6SJHbOm1z3JElVeh/wssD8ilT6OeBlajOVkz8+
KDJW813o/O4lsu/DeA+cTz4wMvYB/v2wxtpZqbHog4knwXoTn28b9f2D+DCz
L0YOlnzwZTrffjxfyZ7qe6POd7Fst0gaS79J+qVqj5XcK/2PyFj6EMkg6WuZ
S9SeKWkk/QbpF5ScnyE/eh74Hb6QZHfZB0f2bYeVnJ+Fy0CuFRiB/Ov54IHB
Jhgq2EP9h6p/P/W9ueR82UWyN5atpuQ3nfRUdZxYco6ZfPiVsjeTbWvWMPAc
2e8vmQNAvvp62VvyfUv2Iv7KjWHijz2ivlvFzpnxDMl/X6v2QXyfgePFJbkx
TvwF8lG9dcy0kjkih8r2UOL3uXURD72eGwPF3yU+eyU3Jsj8Qv6f3C+5eHLy
8F+uBitWuy5rhPqfpfNPKZnTMkvn7qDjb6wY358uvb30oRXj9/BFDoiMDYJH
T5O9nexDKsbv/wSv0fke1rkekjwie9vcOTvwdeLLV3NjqMRP/BZ+ExyVNoHH
EmOKnHs7np/0YeSLdK5bweR0/HE6/xUl/+84sNCKY7UbJd/L/pOOH05OizmR
61SMzf0r2U3nGxg5NhzMfAu2jM9eMoZJfuyi3GsWMdARstWqOPeFPzeI+Bu+
SMU5rk76W1vyY2j9xdi5Z2It1kfyZ6+rfw31eSJ0vuzi3GsyMV093c81kedu
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
ScRHqffjg9vdSdKw6v1KqIUDQ2ZvAeo7ib2+4fpV15sSm4EhU8tJvf3kwDWd
edX1rl8F5gTBD2EPKuo7jkqcOyaHDBeCe2BvF/ZHID/FnipbVl3fuTYwh2mz
quttVwXmIMG/ZU8c6m8661yHc23d/2269yN4f4nr5+8MzGGYwlojvXPZfajH
fFB96sk2TvrUzPWZtB8te68L6l3Zu4E9L+pUXb/6XWAOFvv5wVuEywTmRmzF
/g/kp4ix4Mewxxf1Okcnzo2TI4frwZzapOr9bahVhNO2b9X7s2yqRQy9f87D
FX+LxJ/Nqt5/Bu4/HDv2N4J3CLYCXgV/h5oJ6nu6Ja49pv6cWJ0aZPhG1Oiw
P8d5sn+ZuD6cWASOSeOq96+hthAOHlgzmDPcE/x59qJhPx1q86nRr1t1/T17
l/wkOaDq/XKoFdgrNP+YPYyodzoiMT+YmkxqMQ9IjLWDucMt4R6oh2b/NfZc
Ip5Iqq7HJzaHswVfmhoE6ltHMzdUvX83e0fBKWavG/ZLId/JnjfspcJ+P/Ar
qElnP0V4qJ0DxzfUvlMfTSwxIfBeOuzHAx+CPWGoTwnJ65Y9f8LfpmaI+pQR
ifcSYY+JxTq2ecV7m7BmslY2q3g/OeqreXbsIUWtPPXcYCvUzMP3pkaLepSR
sv2ZuN4ZbOeJwHvhUB/Os2BPHMYufE5qbRjD7C95Q8V8FuLHPareb4jaHDid
jHe+h8ZlY3bUzzLGGdvs6U1tNvs/MHao0f418X4RjDU4jfBJqdmgfmVUYn42
NR7UK94s/f/dOEfY
          "]], Polygon3DBox[CompressedData["
1:eJwt2Hm8T2UeB/Af99r33UUSSUp2slOyhOxbUkklyZqoaMbLWJIsmaSkhuZV
kxYjS7hhWqYaLZKtZEuLJLJce0rz/r5+54/zev2e9/l8n/Oc7XnOvVcMHtVz
ZO5UKnXIlsc2Pn8qlbdQKvV53lSqMfg4Vyp1OztaIJVayYqyMawT28sWsXOZ
qVQbVpStZmPYZvaT/oays2wtK6X2Mbk38qVSD7AsNlyuptydcsfYKlZMbqzc
v+VGsIpstFwtuRlyBY1vJ2stt0uugMyV7Gb5VWybE5ouV4DtkGvFvpLLYMtk
h7NN+tujv1rateTuU7tVrmRGKnWb3C98hVwRNkrtTFZI7ivWhu1mPdj3covZ
Rf11YB+yy+SK6O9hue6509cqxV6Qy8vukLuV/az2LVaYjWB9WC655SyLzWA3
sa/kFrIzjtEsV/pa5ZZbzSrLzWPd2AG5f7Df5NqxG9kO9hw7zZqwa7SvVTvE
+L5UW9z5NpfbzOfLnZCrJ9eR7WbPs7OsFbuBbWfPslPsetaL/ciWsN/Zzawp
+4w9zY6zOuwWtp+9yC6wtqye9nXGMsxYdhhLOWMpzKqzTmw12+H6VVP7Hn9C
7UG1WWoXsKJyh1kvuUy5sSwP+4w1Yh/KjWAX1L7DyrLJbDA7wd5mJdh41kq7
ntrRjrubXWkszVgdNpLtYlUy0s9zBluntip7Xm1LtkX2GXbS+BqwbJYll1/t
g3LtjK+BTG32ANvJsvS3Xq4CK8DGsg5yrdlW2QX6y9FfI/2VY9lsPNvGjnuk
3mUV1RZU+5DazmpXs3IsDxvF2rCVrCzLZCNZKzaEndbfGv2VZBMc42VWQu4E
GxDvgtwwlsmyWTX2gtxSVorlsIGsrFwLfdVloxzjG1bVuVVmNVkvtpH9JDdf
bRH2s9qeLDebxwqzQ6xHTEJsDSvP8qodzW5kH7BKrDAbz7qyMewPx9mgtjyb
ZnzLWRm5jJg/WAu5GjLXsHvZFlbU+EbJXeTr1ZZjU9S+yIrL/cr6sUJqy8jU
YN3UZrN97HW50uyU3O2sPFvEirGjrC8rwP7FSrKT7DZWmpXS31Wsq/7WsT2s
Erua9WQb2I8sj9rlfITaT9zzfS7NxLgfBVOpL9g1csuM+S8sn9ovWTO2mT0a
c4TcZlaTvcEmsfxyW1lztoW10X99NsZx97CrMtLXuZ7aQuw+VtdYLrFqco3Z
EraUlWQn5R7S337jyx9zu/ZymetibmWn9Fdd7jx/MpnDmsbcrl0w5sWYL9gl
uQIxP/Mm2n9q/2l38XhX2Vi1+3he+S/0PyPeV+2zcsNS6bXnuNyDcnt5plxp
lsPGsW9ZQVYl1iM2I3m3GuZKzy/n2Mxknox57S3tq3mLeL9ZbluhWKP4aLnd
2rns6x/zP3vCmA7Gu2U8b8Z1177fuOrKnWNtY36N8fEv4rmK90N/Z9jjybxR
X38rtNvx5jEnsTy2GvEc8BZ+Z2Sm99WMeY3NSubnlqxWPM9sDjufrMm12e9s
bjLv3hjroLEMjetsLPONZa57WV/uEpuXrGXt5XLJDWHXyz0tN1uuAnuUdWdv
xhzLrlX7G5udfAu0VtuQ/cn+nqwLHeOaxpwUc752jvOvnUrPsXPlRtj3ScwH
vL3aXbx13MfM9D2I5+8euUZy8+RmOm6x+NZgndmrLDt5t8axW9hrbCMrwcay
LmwpW8+y9HeKTUvWqNqOUSnmRDY9WQfrxroaa2Dk1H6ntpHx7ZZry8olc3ZH
/d0Tz5ps23gPbI+oPcn6y9WRe1LuL3LHWV9Wm81kE9kpNoDVZbPYpJjH/d7L
KhvLDP11j/me7WP12CI2ga3Uvlv9w7HeswK2rdrNeMlkvm+tv69ZG1aGjUnW
o13sBlY2WaPaszNsYByDzY71ku1krVjpZC5uy7awJqxEMse2zJ3+rtvDKhjf
1PgeMr7t8Q6xUsl6dIPceXYHa8DmsqlsP+vAyidrWRf2HesU/SXzfbfku64w
2+4Yddi6ZK2txfLJ3c1qyM2OeZx9LdeAvSu3jFVnp1l39key5lVhx1lndpr9
zgazhvp7Kr7D9PdPVpkdk+vEcuTyuN/DWFO5Z+I7TG5qfJ+ybXK12Rq5hbGW
sV9Ye3aYHWA3syy145K17AfWhVVMvh17JGtKBXZEbQd2RO1B1pVVknuE9ZI7
xLqzy9ijrA+bG2sP26W2IXtf7WHWM54ruQmsn9wrft/rXMrKDXHfqrlv+eI7
Wa6ZfQvknparG2steyr5xrxJf/+1f1KsIWwOu1NtH+0m1ooZ9uWovdU704Nd
zx5nJ2N8Gem5symbyU6zgWwAa8aeZGfiW5kd83sx7+0YbznGUsc4wV5ifdgK
9jo7yBay7uxNtjj+rmGLWA+2jL3Evox3L8bI5rPh7BM2jTVi89i97A7tFsYy
275zxjI4I73W5nUNtshdy5a7Bufsf0X2Vva22hVqL8ScxAawNWwVO6L2Cv1d
Z9+zahe4ph/5PVmugdxcubvkBmo3l5tl31m5QRnpeagxm85OxD1nH8czyYom
z0FP/W1il7NiyXPQO77/4p1XX8kxHox5zTFei/WJlWfDYo1hr8Z6z8qxoaw6
28gmsqrsr7H2sPXRN7uCPRbrOcuOZ5ZVYRNiDU2l57Cx7DL2UKxvrGOcq/H9
zb6j8Z47j06sIZvCfo13ISM9D1Vl9dkLbLHz6BL3h01lx+JvK7m18f7wyx3j
kfhWdoxP452WK548433VDpJpyeaw8+wetf/ze0ocW+1Tau9WuyfWOtaKPc8e
Zt/EmhP1bCEbxz5j38bayF5i09iOWCNYc/YKm8O2sQPxHrGX2azkmfyR9WQb
2LvsIjvM7mfbY31k1R1zMutr38r4Xou/hdgk1oetiG89dsDvH1hXtevUrlPb
RG42G27fpvimzkj/vfVEHIN9xC6ozeda/cpGqf1G7R+il+z/hQ1jO9hpVkft
42yofR+qPZc7/c7sZ43llshNkdvHvo/1l61la1Lp79ijbCTbxS6yFDvCHmA7
4zsOvRN9xXNqrLezqnEu7ILsNMfrrV3RtlH77Thfv8vE35zx94L2f2K98Lsb
Kx3vv/Yq3snvErYi9m3Q7u0Y/R3jLnaV7etYh+JdN5bntMcm921WzE/sGTaS
9Yq/FdQPivfF1i8j/d0+kfWQXxb/L3GMRiybDYy5NMYsl2P/IdZPf++zT/X3
m/ENinupXcE2Xe3h+I5kveQ2svfjPdJeEn/v2t+ZFbetZXvyp8+9u3a5uE9q
f+b91X6g/XkyT/4UzxB7j21ie9W1izFrl81MX7NW3o0Oxt3ZWCfH3Gr7P0NJ
QUY=
          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0.2], 
      Line3DBox[{927, 1, 922, 902, 31, 1954, 61, 91, 1984, 121, 151, 2014, 
       181, 211, 2044, 241, 271, 2074, 301, 2104, 331, 361, 2134, 391, 421, 
       2164, 451, 481, 2194, 511, 541, 2224, 571, 2254, 601, 631, 2284, 661, 
       691, 2314, 721, 751, 2344, 781, 811, 2374, 841, 906, 929, 871, 925, 
       911, 872, 1529, 873, 874, 1530, 875, 876, 1531, 877, 878, 1532, 879, 
       880, 1533, 881, 1534, 882, 883, 1535, 884, 885, 1006}], 
      Line3DBox[{941, 2, 909, 927}], Line3DBox[{4, 3, 1952, 941}], 
      Line3DBox[{4, 1125, 5, 6, 1127, 7, 8, 1129, 9, 10, 1131, 11, 1133, 12, 
       13, 1135, 14, 15, 948}], Line3DBox[{17, 16, 1007}], 
      Line3DBox[CompressedData["
1:eJwVzjsoBAAcx/H/PdydkvI4z6MsBpkNl9EgowyyqBtkIuQeznkng3SDTJJk
NshsMBswG8wGmQ3yMXz6/qZ//5HS6uxKIiIW6WAtHdGpXWzY3bqpee2hYvdq
HzW7Xweo24NaoGEP6Vkq4pJh+1pPmLQfsxELWuXdvtAHfuw3/f6/n4to99g4
E/aMzumyHrNu3+oTTftDf7mzC8mIIs/2vH5qWc/JtUbc6wuj9pe2+WvKHtNp
SvaSNrniiBtOOSSTiTjQfVrsPd0lbe9og5S9rXWS9pYmtKZVwq5omVf+ALPO
Kfw=
       "]]}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1125, 1544, 1126, 1558, 2879, 1152, 1572, 1166, 1586, 2890, 
       1180, 1600, 1194, 2994, 1614, 1208, 1628, 1222, 3001, 1642, 1236, 1656,
        1250, 3011, 1670, 1264, 1684, 2911, 1278, 1698, 1292, 1712, 2923, 
       1306, 1726, 1320, 3029, 1740, 1334, 1754, 1348, 3036, 1768, 1362, 1782,
        1376, 3045, 1796, 1390, 1810, 2948, 1404, 1824, 1418, 1838, 2961, 
       1432, 1852, 1446, 3060, 1866, 1460, 1880, 1474, 3066, 1894, 1488, 1908,
        1502, 3075, 1922, 1516, 1936, 1530}], 
      Line3DBox[{1127, 1545, 1128, 1559, 2880, 1153, 1573, 1167, 1587, 2891, 
       1181, 1601, 1195, 1615, 1209, 1629, 1223, 3002, 1643, 1237, 1657, 1251,
        3012, 1671, 1265, 1685, 2912, 1279, 1699, 1293, 1713, 2924, 1307, 
       1727, 1321, 1741, 2933, 1335, 1755, 1349, 3037, 1769, 1363, 1783, 1377,
        3046, 1797, 1391, 1811, 2949, 1405, 1825, 1419, 1839, 2962, 1433, 
       1853, 1447, 1867, 2972, 1461, 1881, 1475, 3067, 1895, 1489, 1909, 1503,
        3076, 1923, 1517, 1937, 1531}], 
      Line3DBox[{1129, 1546, 1130, 1560, 2881, 1154, 1574, 1168, 1588, 2892, 
       1182, 1602, 1196, 1616, 2899, 1210, 1630, 1224, 1644, 2905, 1238, 1658,
        1252, 3013, 1672, 1266, 1686, 2913, 1280, 1700, 1294, 1714, 2925, 
       1308, 1728, 1322, 1742, 2934, 1336, 1756, 1350, 1770, 2940, 1364, 1784,
        1378, 3047, 1798, 1392, 1812, 2950, 1406, 1826, 1420, 1840, 2963, 
       1434, 1854, 1448, 1868, 2973, 1462, 1882, 1476, 1896, 2979, 1490, 1910,
        1504, 3077, 1924, 1518, 1938, 1532}], 
      Line3DBox[{1131, 1547, 1132, 1561, 2882, 1155, 1575, 1169, 1589, 2893, 
       1183, 1603, 1197, 1617, 2900, 1211, 1631, 1225, 1645, 2906, 1239, 1659,
        1253, 1673, 2909, 1267, 1687, 2914, 1281, 1701, 1295, 1715, 2926, 
       1309, 1729, 1323, 1743, 2935, 1337, 1757, 1351, 1771, 2941, 1365, 1785,
        1379, 1799, 2945, 1393, 1813, 2951, 1407, 1827, 1421, 1841, 2964, 
       1435, 1855, 1449, 1869, 2974, 1463, 1883, 1477, 1897, 2980, 1491, 1911,
        1505, 1925, 2984, 1519, 1939, 1533}], 
      Line3DBox[{1133, 1548, 1134, 2986, 1562, 1156, 1576, 1170, 2989, 1590, 
       1184, 1604, 1198, 2995, 1618, 1212, 1632, 1226, 3003, 1646, 1240, 1660,
        1254, 3014, 1674, 1268, 1688, 2915, 1282, 1702, 1296, 3025, 1716, 
       1310, 1730, 1324, 3030, 1744, 1338, 1758, 1352, 3038, 1772, 1366, 1786,
        1380, 3048, 1800, 1394, 1814, 2952, 1408, 1828, 1422, 3057, 1842, 
       1436, 1856, 1450, 3061, 1870, 1464, 1884, 1478, 3068, 1898, 1492, 1912,
        1506, 3078, 1926, 1520, 1940, 1534}], 
      Line3DBox[{1135, 1549, 1136, 1563, 2883, 1157, 1577, 1171, 2990, 1591, 
       1185, 1605, 1199, 2996, 1619, 1213, 1633, 1227, 3004, 1647, 1241, 1661,
        1255, 3015, 1675, 1269, 1689, 2916, 1283, 1703, 1297, 1717, 2927, 
       1311, 1731, 1325, 3031, 1745, 1339, 1759, 1353, 3039, 1773, 1367, 1787,
        1381, 3049, 1801, 1395, 1815, 2953, 1409, 1829, 1423, 1843, 2965, 
       1437, 1857, 1451, 3062, 1871, 1465, 1885, 1479, 3069, 1899, 1493, 1913,
        1507, 3079, 1927, 1521, 1941, 1535}], 
      Line3DBox[{1137, 1550, 1138, 1564, 2884, 1158, 1578, 1172, 1592, 2894, 
       1186, 1606, 1200, 1620, 2901, 1214, 1634, 1228, 3005, 1648, 1242, 1662,
        1256, 3016, 1676, 1270, 1690, 2917, 1284, 1704, 1298, 1718, 2928, 
       1312, 1732, 1326, 1746, 2936, 1340, 1760, 1354, 1774, 2942, 1368, 1788,
        1382, 3050, 1802, 1396, 1816, 2954, 1410, 1830, 1424, 1844, 2966, 
       1438, 1858, 1452, 1872, 2975, 1466, 1886, 1480, 1900, 2981, 1494, 1914,
        1508, 3080, 1928, 1522, 1942, 1536}], 
      Line3DBox[{1139, 1551, 1140, 1565, 2885, 1159, 1579, 1173, 1593, 2895, 
       1187, 1607, 1201, 1621, 2902, 1215, 1635, 1229, 1649, 2907, 1243, 1663,
        1257, 3017, 1677, 1271, 1691, 2918, 1285, 1705, 1299, 1719, 2929, 
       1313, 1733, 1327, 1747, 2937, 1341, 1761, 1355, 1775, 2943, 1369, 1789,
        1383, 1803, 2946, 1397, 1817, 2955, 1411, 1831, 1425, 1845, 2967, 
       1439, 1859, 1453, 1873, 2976, 1467, 1887, 1481, 1901, 2982, 1495, 1915,
        1509, 1929, 2985, 1523, 1943, 1537}], 
      Line3DBox[{1141, 1552, 1142, 2987, 1566, 1160, 1580, 1174, 2991, 1594, 
       1188, 1608, 1202, 2997, 1622, 1216, 1636, 1230, 3006, 1650, 1244, 1664,
        1258, 3018, 1678, 1272, 3023, 1692, 1286, 1706, 1300, 3026, 1720, 
       1314, 1734, 1328, 3032, 1748, 1342, 1762, 1356, 3040, 1776, 1370, 1790,
        1384, 3051, 1804, 1398, 1818, 2956, 1412, 1832, 1426, 3058, 1846, 
       1440, 1860, 1454, 3063, 1874, 1468, 1888, 1482, 3070, 1902, 1496, 1916,
        1510, 3081, 1930, 1524, 1944, 1538}], 
      Line3DBox[{1143, 1553, 1144, 1567, 2886, 1161, 1581, 1175, 2992, 1595, 
       1189, 1609, 1203, 2998, 1623, 1217, 1637, 1231, 3007, 1651, 1245, 1665,
        1259, 3019, 1679, 1273, 1693, 2919, 1287, 1707, 1301, 3027, 1721, 
       1315, 1735, 1329, 3033, 1749, 1343, 1763, 1357, 3041, 1777, 1371, 1791,
        1385, 3052, 1805, 1399, 1819, 2957, 1413, 1833, 1427, 1847, 2968, 
       1441, 1861, 1455, 3064, 1875, 1469, 1889, 1483, 3071, 1903, 1497, 1917,
        1511, 3082, 1931, 1525, 1945, 1539}], 
      Line3DBox[{1145, 1554, 1146, 1568, 2887, 1162, 1582, 1176, 1596, 2896, 
       1190, 1610, 1204, 2999, 1624, 1218, 1638, 1232, 3008, 1652, 1246, 1666,
        1260, 3020, 1680, 1274, 1694, 2920, 1288, 1708, 1302, 1722, 2930, 
       1316, 1736, 1330, 3034, 1750, 1344, 1764, 1358, 3042, 1778, 1372, 1792,
        1386, 3053, 1806, 1400, 1820, 2958, 1414, 1834, 1428, 1848, 2969, 
       1442, 1862, 1456, 1876, 1470, 1890, 1484, 3072, 1904, 1498, 1918, 1512,
        3083, 1932, 1526, 1946, 1540}], 
      Line3DBox[{1147, 1555, 1148, 1569, 2888, 1163, 1583, 1177, 1597, 2897, 
       1191, 1611, 1205, 1625, 2903, 1219, 1639, 1233, 3009, 1653, 1247, 1667,
        1261, 3021, 1681, 1275, 1695, 2921, 1289, 1709, 1303, 1723, 2931, 
       1317, 1737, 1331, 1751, 2938, 1345, 1765, 1359, 3043, 1779, 1373, 1793,
        1387, 3054, 1807, 1401, 1821, 2959, 1415, 1835, 1429, 1849, 2970, 
       1443, 1863, 1457, 1877, 2977, 1471, 1891, 1485, 3073, 1905, 1499, 1919,
        1513, 3084, 1933, 1527, 1947, 1541}], 
      Line3DBox[{1149, 1556, 1150, 1570, 2889, 1164, 1584, 1178, 1598, 2898, 
       1192, 1612, 1206, 1626, 2904, 1220, 1640, 1234, 1654, 2908, 1248, 1668,
        1262, 3022, 1682, 1276, 1696, 2922, 1290, 1710, 1304, 1724, 2932, 
       1318, 1738, 1332, 1752, 2939, 1346, 1766, 1360, 1780, 2944, 1374, 1794,
        1388, 3055, 1808, 1402, 1822, 2960, 1416, 1836, 1430, 1850, 2971, 
       1444, 1864, 1458, 1878, 2978, 1472, 1892, 1486, 1906, 2983, 1500, 1920,
        1514, 3085, 1934, 1528, 1948, 1542}], Line3DBox[CompressedData["
1:eJwNzi1IA2AUhtHr78JWDAaTiMFkMCwtLJgMC7MYBIXhgkENCwbDGGPBIIYF
g2y6YBCEIQYtCwomwwZaRAyCsGBwIIYFwRM+nnPf9M0V9lZ3RyIi5w0nIo4T
EU3viyva8kZTEe/uEne1qMNkxD2v8Y2u6I/tgjN8oos6sB3yLB9o1T3FOzym
n+5N/p2MyGtf32zL/MppfdIX2wJ3eEbb2rMlucV/4xEb7jp/c00f3B+8z8+6
rXe2R17nW83pte2Ss3yqS3plO+J5Luu0nvnvFie4wefeP1SGLgU=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1954, 2725, 2403, 2729, 2728, 1557, 1955, 2404, 1956, 2879, 
       2405, 1957, 2406, 1958, 2880, 2407, 1959, 2408, 1960, 2881, 2409, 1961,
        2410, 1962, 2882, 2411, 1963, 2779, 2986, 1964, 2412, 1965, 2883, 
       2413, 1966, 2414, 1967, 2731, 2749}], 
      Line3DBox[{1982, 2428, 1981, 2427, 2889, 1980, 2426, 1979, 2425, 2888, 
       1978, 2424, 1977, 2423, 2887, 1976, 2422, 1975, 2421, 2886, 1974, 2420,
        1973, 2987, 2780, 1972, 2419, 2885, 1971, 2418, 1970, 2417, 2884, 
       1969, 2416, 1968, 2415, 2767}], 
      Line3DBox[{1984, 2429, 1983, 2781, 2988, 1985, 2430, 1986, 2890, 2431, 
       1987, 2432, 1988, 2891, 2433, 1989, 2434, 1990, 2892, 2435, 1991, 2436,
        1992, 2893, 2437, 1993, 2782, 2989, 1994, 2438, 1995, 2783, 2990, 
       1996, 2439, 1997, 2732, 2750}], 
      Line3DBox[{2012, 2452, 2011, 2451, 2898, 2010, 2450, 2009, 2449, 2897, 
       2008, 2448, 2007, 2447, 2896, 2006, 2446, 2005, 2992, 2785, 2004, 2445,
        2003, 2991, 2784, 2002, 2444, 2895, 2001, 2443, 2000, 2442, 2894, 
       1999, 2441, 1998, 2440, 2768}], 
      Line3DBox[{2014, 2453, 2013, 2786, 2993, 2015, 2454, 2016, 2787, 2994, 
       2017, 2455, 2018, 1615, 2019, 2456, 2020, 2899, 2457, 2021, 2458, 2022,
        2900, 2459, 2023, 2788, 2995, 2024, 2460, 2025, 2789, 2996, 2026, 
       2461, 2027, 2762}], 
      Line3DBox[{2042, 2472, 2041, 2471, 2904, 2040, 2470, 2039, 2469, 2903, 
       2038, 2468, 2037, 2999, 2792, 2036, 2467, 2035, 2998, 2791, 2034, 2466,
        2033, 2997, 2790, 2032, 2465, 2902, 2031, 2464, 2030, 2463, 2901, 
       2029, 2462, 2028, 2761}], 
      Line3DBox[{2044, 2473, 2043, 2793, 3000, 2045, 2474, 2046, 2794, 3001, 
       2047, 2475, 2048, 2795, 3002, 2049, 2476, 2050, 2905, 2477, 2051, 2478,
        2052, 2906, 2479, 2053, 2796, 3003, 2054, 2480, 2055, 2797, 3004, 
       2056, 2481, 2057, 2733, 2769}], 
      Line3DBox[{2072, 2490, 2071, 2489, 2908, 2070, 2488, 2069, 3009, 2802, 
       2068, 2487, 2067, 3008, 2801, 2066, 2486, 2065, 3007, 2800, 2064, 2485,
        2063, 3006, 2799, 2062, 2484, 2907, 2061, 2483, 2060, 3005, 2798, 
       2059, 2482, 2058, 2734, 2755}], 
      Line3DBox[{2074, 2491, 2073, 2803, 3010, 2075, 2492, 2076, 2804, 3011, 
       2077, 2493, 2078, 2805, 3012, 2079, 2494, 2080, 2806, 3013, 2081, 2495,
        2082, 2909, 2496, 2083, 2807, 3014, 2084, 2497, 2085, 2808, 3015, 
       2086, 2498, 2087, 2735, 2770}], 
      Line3DBox[{2102, 2505, 2101, 3022, 2815, 2100, 2504, 2099, 3021, 2814, 
       2098, 2503, 2097, 3020, 2813, 2096, 2502, 2095, 3019, 2812, 2094, 2501,
        2093, 3018, 2811, 2092, 3017, 2810, 2091, 2500, 2090, 3016, 2809, 
       2089, 2499, 2088, 2736, 2756}], 
      Line3DBox[{2104, 2506, 2103, 2910, 2507, 2105, 2508, 2106, 2911, 2509, 
       2107, 2510, 2108, 2912, 2511, 2109, 2512, 2110, 2913, 2513, 2111, 2514,
        2112, 2914, 2515, 2113, 2915, 2516, 2114, 2517, 2115, 2916, 2518, 
       2116, 2519, 2117, 2737, 2751}], 
      Line3DBox[{2132, 2533, 2131, 2532, 2922, 2130, 2531, 2129, 2530, 2921, 
       2128, 2529, 2127, 2528, 2920, 2126, 2527, 2125, 2526, 2919, 2124, 2525,
        2123, 3023, 2816, 2122, 2524, 2918, 2121, 2523, 2120, 2522, 2917, 
       2119, 2521, 2118, 2520, 2771}], 
      Line3DBox[{2134, 2534, 2133, 2817, 3024, 2135, 2535, 2136, 2923, 2536, 
       2137, 2537, 2138, 2924, 2538, 2139, 2539, 2140, 2925, 2540, 2141, 2541,
        2142, 2926, 2542, 2143, 2818, 3025, 2144, 2543, 2145, 2927, 2544, 
       2146, 2545, 2147, 2738, 2752}], 
      Line3DBox[{2162, 2558, 2161, 2557, 2932, 2160, 2556, 2159, 2555, 2931, 
       2158, 2554, 2157, 2553, 2930, 2156, 2552, 2155, 3027, 2820, 2154, 2551,
        2153, 3026, 2819, 2152, 2550, 2929, 2151, 2549, 2150, 2548, 2928, 
       2149, 2547, 2148, 2546, 2772}], 
      Line3DBox[{2164, 2559, 2163, 2821, 3028, 2165, 2560, 2166, 2822, 3029, 
       2167, 2561, 2168, 2933, 2562, 2169, 2563, 2170, 2934, 2564, 2171, 2565,
        2172, 2935, 2566, 2173, 2823, 3030, 2174, 2567, 2175, 2824, 3031, 
       2176, 2568, 2177, 2764}], 
      Line3DBox[{2192, 2579, 2191, 2578, 2939, 2190, 2577, 2189, 2576, 2938, 
       2188, 2575, 2187, 3034, 2827, 2186, 2574, 2185, 3033, 2826, 2184, 2573,
        2183, 3032, 2825, 2182, 2572, 2937, 2181, 2571, 2180, 2570, 2936, 
       2179, 2569, 2178, 2763}], 
      Line3DBox[{2194, 2580, 2193, 2828, 3035, 2195, 2581, 2196, 2829, 3036, 
       2197, 2582, 2198, 2830, 3037, 2199, 2583, 2200, 2940, 2584, 2201, 2585,
        2202, 2941, 2586, 2203, 2831, 3038, 2204, 2587, 2205, 2832, 3039, 
       2206, 2588, 2207, 2739, 2773}], 
      Line3DBox[{2222, 2598, 2221, 2597, 2944, 2220, 2596, 2219, 3043, 2836, 
       2218, 2595, 2217, 3042, 2835, 2216, 2594, 2215, 3041, 2834, 2214, 2593,
        2213, 3040, 2833, 2212, 2592, 2943, 2211, 2591, 2210, 2590, 2942, 
       2209, 2589, 2208, 2740, 2757}], 
      Line3DBox[{2224, 2599, 2223, 2837, 3044, 2225, 2600, 2226, 2838, 3045, 
       2227, 2601, 2228, 2839, 3046, 2229, 2602, 2230, 2840, 3047, 2231, 2603,
        2232, 2945, 2604, 2233, 2841, 3048, 2234, 2605, 2235, 2842, 3049, 
       2236, 2606, 2237, 2741, 2774}], 
      Line3DBox[{2252, 2614, 2251, 3055, 2848, 2250, 2613, 2249, 3054, 2847, 
       2248, 2612, 2247, 3053, 2846, 2246, 2611, 2245, 3052, 2845, 2244, 2610,
        2243, 3051, 2844, 2242, 2609, 2946, 2241, 2608, 2240, 3050, 2843, 
       2239, 2607, 2238, 2742, 2758}], 
      Line3DBox[{2254, 2615, 2253, 2947, 2616, 2255, 2617, 2256, 2948, 2618, 
       2257, 2619, 2258, 2949, 2620, 2259, 2621, 2260, 2950, 2622, 2261, 2623,
        2262, 2951, 2624, 2263, 2952, 2625, 2264, 2626, 2265, 2953, 2627, 
       2266, 2628, 2267, 2743, 2753}], 
      Line3DBox[{2282, 2643, 2281, 2642, 2960, 2280, 2641, 2279, 2640, 2959, 
       2278, 2639, 2277, 2638, 2958, 2276, 2637, 2275, 2636, 2957, 2274, 2635,
        2273, 2634, 2956, 2272, 2633, 2955, 2271, 2632, 2270, 2631, 2954, 
       2269, 2630, 2268, 2629, 2775}], 
      Line3DBox[{2284, 2644, 2283, 2849, 3056, 2285, 2645, 2286, 2961, 2646, 
       2287, 2647, 2288, 2962, 2648, 2289, 2649, 2290, 2963, 2650, 2291, 2651,
        2292, 2964, 2652, 2293, 2850, 3057, 2294, 2653, 2295, 2965, 2654, 
       2296, 2655, 2297, 2744, 2754}], 
      Line3DBox[{2312, 2669, 2311, 2668, 2971, 2310, 2667, 2309, 2666, 2970, 
       2308, 2665, 2307, 2664, 2969, 2306, 2663, 2305, 2662, 2968, 2304, 2661,
        2303, 3058, 2851, 2302, 2660, 2967, 2301, 2659, 2300, 2658, 2966, 
       2299, 2657, 2298, 2656, 2776}], 
      Line3DBox[{2314, 2670, 2313, 2852, 3059, 2315, 2671, 2316, 2853, 3060, 
       2317, 2672, 2318, 2972, 2673, 2319, 2674, 2320, 2973, 2675, 2321, 2676,
        2322, 2974, 2677, 2323, 2854, 3061, 2324, 2678, 2325, 2855, 3062, 
       2326, 2679, 2327, 2766}], 
      Line3DBox[{2342, 2690, 2341, 2689, 2978, 2340, 2688, 2339, 2687, 2977, 
       2338, 2686, 2337, 1876, 2336, 2685, 2335, 3064, 2857, 2334, 2684, 2333,
        3063, 2856, 2332, 2683, 2976, 2331, 2682, 2330, 2681, 2975, 2329, 
       2680, 2328, 2765}], 
      Line3DBox[{2344, 2691, 2343, 2858, 3065, 2345, 2692, 2346, 2859, 3066, 
       2347, 2693, 2348, 2860, 3067, 2349, 2694, 2350, 2979, 2695, 2351, 2696,
        2352, 2980, 2697, 2353, 2861, 3068, 2354, 2698, 2355, 2862, 3069, 
       2356, 2699, 2357, 2745, 2777}], 
      Line3DBox[{2372, 2709, 2371, 2708, 2983, 2370, 2707, 2369, 3073, 2866, 
       2368, 2706, 2367, 3072, 2865, 2366, 2705, 2365, 3071, 2864, 2364, 2704,
        2363, 3070, 2863, 2362, 2703, 2982, 2361, 2702, 2360, 2701, 2981, 
       2359, 2700, 2358, 2746, 2759}], 
      Line3DBox[{2374, 2726, 2727, 2373, 2730, 3074, 2878, 2375, 2710, 2376, 
       2867, 3075, 2377, 2711, 2378, 2868, 3076, 2379, 2712, 2380, 2869, 3077,
        2381, 2713, 2382, 2984, 2714, 2383, 2870, 3078, 2384, 2715, 2385, 
       2871, 3079, 2386, 2716, 2387, 2747, 2778}], 
      Line3DBox[{2402, 2724, 2401, 3085, 2877, 2400, 2723, 2399, 3084, 2876, 
       2398, 2722, 2397, 3083, 2875, 2396, 2721, 2395, 3082, 2874, 2394, 2720,
        2393, 3081, 2873, 2392, 2719, 2985, 2391, 2718, 2390, 3080, 2872, 
       2389, 2717, 2388, 2748, 2760}]}, {}}},
   VertexNormals->CompressedData["
1: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
Zpb2qg+UkjzdyVFRbusMlA17/U9xvBWUkVzC43ur04NZKJ9nk/AuIA8Mk/w0
ybflYg4nSF5IPmcqFD8Hrr4fCfJzCyifCz+T3I38npOU7wnzSM5O/l1HKH8X
rCO5OfkeVCnvASaQ3Jt8b1GU9wa7SF61h/Ke6WXxe4bvSd5M/i73KL8LLCJ5
Hfk75lF+RzhKcg/yd39E+d1hO8mVSU+uUDyBQySnJr3So3gF+0kuQ3roTPEQ
rvomcGFiYJ3XLGi4yXKs4VwUDJQI2Fx0oQuskzvczjo4C5bUO+qaFGuBf23T
tX+lrYDzS46pZvk0KPY/w6mZ9gn4kFxn/ZtjAloTwDe9q7vfbgi4kdz6s2eP
ReMwaMmV2fT48ji4Q/KDUpo9unE94Piz/TpDNNNAmeRr/sx6pOk0g5h8ztqy
F7PAl+T8OdfFn1rHg8GKFsMylzngQvKmd8FLpvUfIL1vnAH98TmQT/Kxs9br
aaI7oFffL43lezMgjeRiVmmbtLgG4fSI62Cc8iSII/npryPfuU+MQbWYnxzi
m0dBOMmZ/DrqmEWmYO2aG2+GnfvBW5JbSLMVnv43AxU20nClO30EgSTXfi0m
q2Y4B71/nbK2N8kHISS/RnIqCoerz3cin/OdBj8HxpOch/xce8rnwtXnq5Df
U47yPaHjKif/riHK3wUdSE4jQ3kPAZT3AHVIfsST8t52U94btCb5vmzKex6g
vGfo8/9+l0jK7wJTSH6c/B1ZKb/jf+Nf/N/fHVqR3JD05A3FE/ia5NykV9kU
r6AryTeSHr6neAi9SZ7TEidIozQHzB5c+B9P5x1P9ffHcYVS0iBKS4VKhUQ2
R1aisrIyiijSsBWlsikje2WTvVeRY8vKJntv142MyPh9Puf6/v59P07Xp+d9
vc/7dcZ9f0yjrZyKx193FNHZtwH1yefpvSsE0OUuKS/l8FHUi0LLYZ9pB9gl
pnzHsJcAbr15sVQWkAPqntAKKD3tAJGEE2THaOYAq1yBjmQwBLM+hU+8nduA
3OtzUTRhs+BidXGTc18zkGM5yYuPf7cSKTjwdhY8y3tu8Dm6DRxTfGiMj88a
HdwlTDkNKjISHO1hH+hm/n0NHz95T3jQ7vMUoPu2mPiHexCEhjI/xce3aHz9
PM87Dp7OHwXZp0YBW58N+vwoKa13b13HgMfTWcfYu2PAMustep5OfuPFIp0h
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
4/EHg++e4fGKCTbEM+6KxE3cz4/q7sjG/Dx035dwFueZ1BL7FvfzPFc3fTA/
D7fCptRwnvw+rmy4n6/ZYayG+Xm4tO3nw15SGuB+XvGjvAHm56GQVThab4o7
1J/H/Ty1B08v5ufhbv4ZVN875jftcT//4FueDebn4aGNg0ifjMMd7LifX5hk
MML8PPQveY14dmTeycD9/K7rLp2Yn4fscaR9/vWRMErcz59kTlnC/Dx0zyPp
8+TRMDrczyuoXvyI+Xl45zVJn8GqnpK4nz9lY9CB+Xk4v13fdQ31Uf+rN13L
qJ/V3PZ6c2lYDvW52hdGRPFLPteRPqdFXNfxfla2ywMX8Ljq9nrT9IICLb7e
FNvj8hpbb0La7fXmvcDrDfh6s/Oq9ga23oTX7AfUcZ7U96WT8fWmt3DyA2y9
Cd9ajqPzmvatnmJ8vbmH2aECW29CiowdaL+O17HeFV9vvn+TY4itN+GDD+VI
nzou7ynx9ebW7x4Ctt6EYCse6ZMjbuwkvt5ssN9Fi6034X/rTSB85xy+3vx4
TH0QW29Cl3FZkl9KvcqDrzdnHuaJYetNSNlA2l9qMR1/iK83H5Q9HsLWm9Bw
aXv97vTWB19vqiRkPsDWm/C/9SZBsRP1X+KJL0b9lJ400COeIhFhqM+SXpwJ
ilMblCJ9Lh6JP4vHd+z9uIn3U1qdnkQ8jRa1GfH9EFuL3GpqLP5m6CHKd/9l
y6+1ORWwueR5rbovEdq4lqP1u6NISeiR9ApIXi1c/MWdCMvlJpCfJ8scN8f3
Q173rLwQFSdC9XdkqB7tssuOwfdD6rgXrss6TsKTVQqk9eZ0bo3I8Vz4qWE0
rubIIBy6IYN4fpfiP4LvhxRufeCnU2uBElVNiOdi/A8qfD/ExZRPdi6/Akqx
yiCe9/avnsb3Q+JDT0qJTubDyrMknvXfiMT2ZHuYO5KD74fAtf2k+k6X1iiG
74fQ6Xrg+yFwIT8f8fS01Ef9fCrrq1E/n5Xt/br+y28hHg8z90Zx7u39ugeD
PH54XDd06xweDz05h/zSJNldFxosLsN8rW0B/5zt/bqooxUPTPKTgbOMXr4I
Fnfe3q+T3hoQbUxPBsaS5VJm00Qo+aQYzZ89Q2vvgEky4Oc5up89igh7+6gR
z4On2PWFnOKAudB1bvhzEjJs79dZL3+b8xELAwsVZaqJMoPQf3u/TqpnfJck
ozfo7JGlrfJsgeud0+I4z+PfX+bkctqDpw6FV7qXK+DI9n4dQ4pZzvV1C7Ce
wiLfdaUA9hpfRjwjvpoqHN/EfPQFpj79xhRIYU7arzv2PLPPoVAHJCpzd0fk
RcHHj0n6ZEq4gPrPdDaR+s+wbe8nu37rQX1m4qKXUJ+Z48dfov35xTdDOXg8
fFgsHo8vrW4ifR67fSoP30828jjyRRuLs6iUIb/kQbWRgO8nvwj7PpzWhvms
JAfkl+oW2UXw/WQvlotKV+vnoNEVFdJ5h+JOFXw/uV10l7id0xxM0NVHPPMy
k/3w/eQ20aBF8HsCfu7gRvos4TD9gu8nR2jU7RZ8NgDpZyURz4InnYP4fvLy
Pq7Wu5PNMG57P5nz9u12fD/ZUmxAv1WwAs7z2yCe9XGC1D9mg4EbfazgsFo+
/G8/+W7B1R58P7ngzlrSVn0y3OOhSKpHq5n7Mv7Zgz9iFMKlR6Kg5pnt9RHb
TdT/JHFJi9QvRY103lHspIX6nDQGNqM+J2NlLSjfw7QOtODnHcf0TVfxfiYF
VC1In+f3d9PqYHHbgNCvWVi8MTMUzZ81B5Yv5Kxi40u5XtFi8cv7XFF9N6ao
7sPPO9SfHnsgKzILA7fPO/RfDK/j5x329UI/LddnoMCTKlTfn3dK3cXPO5y/
/xzm/oP5gVl3pM/PNNWt+HlHoRlD/XxTLxRotUD1aIXrwwEWo1KwOr457GLc
BHNfPEM85VKK2PDzDvUr8XGxH8tgPNEa8Tx2e6EWP++QuM7BZfc4F1ac40c8
O/5+U8LPOxRywO6WN4nwtDLJf7ZVXZnEzzvyZkSkvNQj4O9AEk/9RUfUT+MC
1SHUZ+OGIuk8zmrBBcVdPpaiPhvXfxxG+b41u/80HmehN0nD4y9anyCeuc4P
Dmtj8Wj5Ee8QLJ7FzIV48hcJJODnca/NXJUPYvGUiypInyIWhcv4eVzrwGqH
hhaWv35piOf3j2PL+HlcvPrDhqcsk/Ba1wjS59aMexx+Hscj4WZsSByGZFKk
/eTHAVRc+HlcwKNg9689v+CFnceRPhsb+97g53EcoZ/oNO/Ww0ADkp/v4W0f
x8/jXHsX1IzJSmA3nwHiudHbcR0/j/vCKXh6xCoLSruQ9uu6Mrby8PO4Y22a
H95txEGuPlK+K4Zz7JtbCQDnWTbHH+4NhWa3STyLd4+gfg79z51Qn4dz5LyI
Z0/tNIrrKR1D8URmPsSTOTWoA4+/Uj5rhMe1c86gfK+ud36Mnxc/P91f5o3F
v9Eyof0Qrc8mO8mw+LcCiq2zWJw1MRfx9Enmo9wwnQI5wTOvfqqNwF0UEYjn
WRuKYPy8uGSvlfGjSyOQb/u8mGZXIwE/L97vC29PHuqHk9vnxZk7Huni58Xq
G4e/zxe1wgDxM0ifyntjfPHz4iNjtmludlVw/e4NxDOuf+c4fl58YMT/422j
r/CT4UPE82IqgRY/L3a81dftoJQKF+NI/lNVkssRPy8+b//+/qJlFPzvvPgy
uWgzfl7MMcwZ6fbSH/53XtyjeRT1H+iK70P9BNi27zMEqZWhPgMM7IKoX0Ff
ShuaPzdWSuXweOdxy2m8n0Dk9n2G78m3WvD7DPn0CXQvsLgYXTfiScfNcA2/
zzA0/KK0o78bwu37DG4ODV34fQYO+kuSpp3dMHX7PsM+Bl1x/D6DtOAf/pbg
bsgjrITWR17hDlz4fQb6e/M5NH1t0DdRGfFk0NOsxu8zPHToi6x5WAf7D11A
PPt5bvrg9xnqazh2TfNCeGv7PkO4VOdB/D6Dl8wKS0BUJqxoJs2f7Oel9fD7
DMslWY/E1WPhLwvS/tKsjnoMfp+hSURCrE4wCP53n+Ge0FgHfp+BlSnVS73O
A/53n6HR+in6HRaDjwD6XbwDP9kSfk/p7j0pFGfh+o5+575v+z7SicCftnjc
Zma5G/89+5Pte0fWEtra+P2ix9+L25iw+Lvt+0VEAoMgfo+IUYam18GhDu4s
5UDzZ8nv8iv4faFD5pX75m3roJjSJbRfZ+x9LQS/FyTaIn7vl3AdbJkkquM8
LVT4DuP3f9ZOjVtNa1VCSrqjqB7FSGQcwe/5JC6vOsRRF0EtuXqU7w7m9+3w
+zynzVYceZfT4YKJBeIZrSbpht/boUw5WR5DEw1btu/tXDTgF8Hv5+xU/K4y
3+YH+WRI+X681EMZv4ezezmL62ajK7z9lOSXzv92DMLv2+yeD5n8/d4ODt0j
8bywSfp93L6m9VL899dHdV8jfU5t3/s67E9sMO11Lubbvvd1QYd0v+uhj2lQ
Q61z8Y7t+13ftu9xZSQLit/qcy7O3L7HpdNPuq+1umeLW7nIudhp+75W0va9
LJe44etCcc7Fn7fvZe2ZIN2/8qUNLp1yci5m2L5/lbl9z2q0qdiUreR9scX2
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
AzppcQ8=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox[
      FrameBox["\"\[Rho]\"", StripOnInput -> False], Bold, 
      RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
      FrameBox["\"\[Rho]\"", StripOnInput -> False], Bold, 
      RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
      FrameBox["\"I3\"", StripOnInput -> False], Bold, 
      RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm]},
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{297.0155911598489, 311.4285714285714},
  Method->{},
  PlotLabel->FormBox[
    StyleBox[
     FrameBox["\"Plot of Sc I3\"", StripOnInput -> False], 
     RGBColor[1, 0, 0], Bold, StripOnInput -> False], TraditionalForm],
  PlotRange->{{-2.9824137710445213`, 
   2.999999896551654}, {-2.9956001564582375`, 2.995600156458238}, {0., 
   1044.356517579602}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.9338906736778219`, -1.6244609854692662`, 2.2519310311264324`},
  ViewVertical->{-0.08516033735068283, 0.04712258409273453, 
   3.220704159919487}]], "Output",
 CellChangeTimes->{
  3.7313431635920305`*^9, {3.731343201905821*^9, 3.731343267550179*^9}, {
   3.73134351879541*^9, 3.7313435342767286`*^9}, 3.73141339920547*^9, 
   3.732538309932227*^9, 3.7325467411785736`*^9, 3.7325548893066072`*^9, 
   3.73255582452612*^9, 3.7326257297551565`*^9, 3.732625760655776*^9, 
   3.732637574461419*^9, 3.7326377665963917`*^9, 3.7326379825638385`*^9, {
   3.7326380605656376`*^9, 3.732638079860567*^9}}]
}, Open  ]],

Cell["\<\
Finally, we need the values of the Invariants at the horizon \[Rho]=2. It \
should be picked off by the delta function. It is the discontinuity in the \
plots.\
\>", "Text",
 CellChangeTimes->{{3.7326379958071623`*^9, 3.732638044058987*^9}, {
  3.732638122165797*^9, 3.732638129174498*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"M", ",", "a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"a", "=", 
    RowBox[{
     FractionBox["3", "2"], "M"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Re", "[", "I1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Re", "[", "I3", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Rho]", ",", "\[Theta]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.732637991848767*^9, {3.732639605127078*^9, 3.7326396112796936`*^9}, {
   3.7326396776023254`*^9, 3.7326396831058755`*^9}, {3.732639732084773*^9, 
   3.7326397323407984`*^9}, {3.7326398493294964`*^9, 
   3.7326398754911118`*^9}, {3.732639912124775*^9, 3.7326399177803407`*^9}}],

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{
   FractionBox["64", 
    RowBox[{"81", " ", 
     SuperscriptBox["M", "4"]}]], "-", 
   FractionBox[
    RowBox[{"320", " ", 
     SuperscriptBox[
      RowBox[{"DiracDelta", "[", "0", "]"}], "2"]}], 
    RowBox[{"2187", " ", 
     SuperscriptBox["M", "2"]}]], "-", 
   FractionBox[
    RowBox[{"64", " ", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Theta]", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{"DiracDelta", "[", "0", "]"}], "2"]}], 
    RowBox[{"2187", " ", 
     SuperscriptBox["M", "2"]}]]}], "]"}]], "Output",
 CellChangeTimes->{{3.732637989251507*^9, 3.732637992834865*^9}, {
   3.732639613472913*^9, 3.7326396175543213`*^9}, 3.7326396838539505`*^9, 
   3.7326397331108756`*^9, {3.732639860158579*^9, 3.7326398776533284`*^9}, 
   3.7326399182653894`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3584", " ", 
    RowBox[{"Im", "[", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"DiracDelta", "[", "0", "]"}], "3"], 
      SuperscriptBox["M", "3"]], "]"}]}], 
   RowBox[{"59049", " ", 
    SqrtBox["3"]}]], "-", 
  FractionBox[
   RowBox[{"512", " ", 
    RowBox[{"Im", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Theta]", "]"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"DiracDelta", "[", "0", "]"}], "3"]}], 
      SuperscriptBox["M", "3"]], "]"}]}], 
   RowBox[{"59049", " ", 
    SqrtBox["3"]}]], "+", 
  RowBox[{
   FractionBox["512", "729"], " ", 
   RowBox[{"Re", "[", 
    FractionBox["1", 
     SuperscriptBox["M", "6"]], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.732637989251507*^9, 3.732637992834865*^9}, {
   3.732639613472913*^9, 3.7326396175543213`*^9}, 3.7326396838539505`*^9, 
   3.7326397331108756`*^9, {3.732639860158579*^9, 3.7326398776533284`*^9}, 
   3.7326399182703896`*^9}]
}, Open  ]],

Cell["\<\
Thus if the Weyl Tensor is a measure of the shape of the spacetime due to the \
tidal forces, then the I1 plots give a look into that shape. If r=1 is \
equivalent to the fundamental length, then the spacetime is being extremely \
stretched but for values near the fundamental length. In addition if the \
Ricci Tensor gives the information about how the volume of spacetime changes \
under the tidal forces, then the I6 plots give a look into how the volume \
changes. Just like the shape of the spacetime, the volume elements will be \
stretched extremely but for values near the fundamanetal scale.\
\>", "Text",
 CellChangeTimes->{{3.7120655017283187`*^9, 3.712065707360509*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{846, 952},
WindowMargins->{{Automatic, 351}, {8, Automatic}},
Magnification:>2.1 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], FontFamily -> "Baskerville Old Face", FontSize -> 14, 
    FontWeight -> "Plain", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["Text"]], 
   Cell[
    StyleData["Text"]]}, Visible -> False, FrontEndVersion -> 
  "10.2 for Microsoft Windows (64-bit) (July 7, 2015)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 419, 7, 882, "Title"],
Cell[1002, 31, 1277, 20, 375, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2304, 55, 226, 3, 232, "Section"],
Cell[2533, 60, 784, 10, 265, "Text"],
Cell[CellGroupData[{
Cell[3342, 74, 693, 14, 102, "Input",
 InitializationCell->True],
Cell[4038, 90, 1034, 27, 181, "Output"]
}, Open  ]],
Cell[5087, 120, 2308, 67, 371, "Text"],
Cell[CellGroupData[{
Cell[7420, 191, 1539, 38, 406, "Input"],
Cell[8962, 231, 1540, 40, 238, "Output"],
Cell[10505, 273, 1520, 39, 259, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12074, 318, 109, 1, 146, "Section"],
Cell[12186, 321, 2217, 63, 373, "Text"],
Cell[CellGroupData[{
Cell[14428, 388, 1972, 51, 270, "Input",
 InitializationCell->True],
Cell[16403, 441, 11422, 318, 579, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27874, 765, 113, 1, 146, "Section"],
Cell[27990, 768, 3843, 108, 630, "Text"],
Cell[CellGroupData[{
Cell[31858, 880, 2385, 60, 495, "Input",
 InitializationCell->True],
Cell[34246, 942, 11366, 287, 587, "Output"]
}, Open  ]],
Cell[45627, 1232, 982, 25, 188, "Text"],
Cell[CellGroupData[{
Cell[46634, 1261, 1248, 33, 394, "Input",
 InitializationCell->True],
Cell[47885, 1296, 11798, 298, 597, "Output"]
}, Open  ]],
Cell[59698, 1597, 1799, 47, 448, "Text"],
Cell[CellGroupData[{
Cell[61522, 1648, 2317, 68, 622, "Input"],
Cell[63842, 1718, 1654, 44, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65533, 1767, 804, 21, 208, "Input"],
Cell[66340, 1790, 148, 2, 88, "Output"],
Cell[66491, 1794, 313, 9, 142, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66841, 1808, 1394, 41, 450, "Input"],
Cell[68238, 1851, 1897, 53, 368, "Output"],
Cell[70138, 1906, 1962, 55, 368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72137, 1966, 2281, 62, 453, "Input"],
Cell[74421, 2030, 16617, 432, 773, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91087, 2468, 109, 1, 146, "Section"],
Cell[91199, 2471, 1626, 45, 171, "Text"],
Cell[CellGroupData[{
Cell[92850, 2520, 1441, 36, 433, "Input",
 InitializationCell->True],
Cell[94294, 2558, 968, 24, 181, "Output"]
}, Open  ]],
Cell[95277, 2585, 755, 22, 144, "Text"],
Cell[CellGroupData[{
Cell[96057, 2611, 1137, 32, 355, "Input",
 InitializationCell->True],
Cell[97197, 2645, 894, 23, 181, "Output"]
}, Open  ]],
Cell[98106, 2671, 490, 15, 114, "Text"],
Cell[CellGroupData[{
Cell[98621, 2690, 933, 26, 298, "Input",
 InitializationCell->True],
Cell[99557, 2718, 896, 23, 181, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100502, 2747, 193, 2, 232, "Section"],
Cell[100698, 2751, 559, 16, 106, "Text"],
Cell[CellGroupData[{
Cell[101282, 2771, 641, 19, 179, "Input",
 InitializationCell->True],
Cell[101926, 2792, 210, 3, 88, "Output"]
}, Open  ]],
Cell[102151, 2798, 1133, 29, 181, "Text"],
Cell[CellGroupData[{
Cell[103309, 2831, 1203, 30, 267, "Input",
 InitializationCell->True],
Cell[104515, 2863, 840, 22, 181, "Output"]
}, Open  ]],
Cell[105370, 2888, 721, 20, 106, "Text"],
Cell[CellGroupData[{
Cell[106116, 2912, 1073, 28, 298, "Input",
 InitializationCell->True],
Cell[107192, 2942, 851, 22, 181, "Output"]
}, Open  ]],
Cell[108058, 2967, 528, 16, 104, "Text"],
Cell[CellGroupData[{
Cell[108611, 2987, 977, 26, 298, "Input",
 InitializationCell->True],
Cell[109591, 3015, 845, 22, 181, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110485, 3043, 110, 1, 146, "Section"],
Cell[110598, 3046, 2084, 60, 411, "Text"],
Cell[CellGroupData[{
Cell[112707, 3110, 2639, 75, 554, "Input",
 InitializationCell->True],
Cell[115349, 3187, 16540, 431, 773, "Output"]
}, Open  ]],
Cell[131904, 3621, 255, 4, 104, "Text"],
Cell[CellGroupData[{
Cell[132184, 3629, 388, 7, 62, "Input"],
Cell[132575, 3638, 504, 15, 128, "Output"]
}, Open  ]],
Cell[133094, 3656, 872, 23, 191, "Text"],
Cell[CellGroupData[{
Cell[133991, 3683, 1018, 30, 394, "Input",
 InitializationCell->True],
Cell[135012, 3715, 17835, 464, 811, "Output"]
}, Open  ]],
Cell[152862, 4182, 923, 29, 114, "Text"],
Cell[CellGroupData[{
Cell[153810, 4215, 1724, 48, 852, "Input"],
Cell[155537, 4265, 774, 21, 181, "Output"],
Cell[156314, 4288, 3908, 114, 298, "Output"],
Cell[160225, 4404, 3906, 114, 298, "Output"]
}, Open  ]],
Cell[164146, 4521, 640, 22, 70, "Text"],
Cell[CellGroupData[{
Cell[164811, 4547, 993, 29, 394, "Input",
 InitializationCell->True],
Cell[165807, 4578, 18446, 479, 959, "Output"]
}, Open  ]],
Cell[184268, 5060, 732, 22, 65, "Text"],
Cell[CellGroupData[{
Cell[185025, 5086, 1190, 35, 394, "Input",
 InitializationCell->True],
Cell[186218, 5123, 18447, 479, 959, "Output"]
}, Open  ]],
Cell[204680, 5605, 1260, 34, 195, "Text"],
Cell[205943, 5641, 401, 7, 62, "Input"],
Cell[206347, 5650, 12722, 319, 554, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[219094, 5973, 198, 4, 62, "Input"],
Cell[219295, 5979, 143, 2, 88, "Output"]
}, Open  ]],
Cell[219453, 5984, 817, 26, 74, "Text"],
Cell[CellGroupData[{
Cell[220295, 6014, 1446, 38, 465, "Input",
 InitializationCell->True],
Cell[221744, 6054, 18449, 479, 927, "Output"]
}, Open  ]],
Cell[240208, 6536, 888, 27, 74, "Text"],
Cell[CellGroupData[{
Cell[241121, 6567, 1261, 35, 465, "Input",
 InitializationCell->True],
Cell[242385, 6604, 18445, 479, 927, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260879, 7089, 111, 1, 146, "Section"],
Cell[260993, 7092, 1495, 39, 361, "Text"],
Cell[262491, 7133, 159, 3, 62, "Input"],
Cell[CellGroupData[{
Cell[262675, 7140, 1209, 29, 241, "Input"],
Cell[263887, 7171, 1740, 56, 305, "Output"]
}, Open  ]],
Cell[265642, 7230, 888, 28, 106, "Text"],
Cell[CellGroupData[{
Cell[266555, 7262, 1090, 28, 241, "Input"],
Cell[267648, 7292, 216, 3, 88, "Output"]
}, Open  ]],
Cell[267879, 7298, 1844, 60, 65, "Text"],
Cell[CellGroupData[{
Cell[269748, 7362, 1389, 36, 319, "Input"],
Cell[271140, 7400, 1924, 63, 394, "Output"]
}, Open  ]],
Cell[273079, 7466, 1509, 46, 106, "Text"],
Cell[CellGroupData[{
Cell[274613, 7516, 1363, 36, 319, "Input"],
Cell[275979, 7554, 196, 3, 88, "Output"]
}, Open  ]],
Cell[276190, 7560, 404, 10, 104, "Text"],
Cell[CellGroupData[{
Cell[276619, 7574, 117, 2, 62, "Input"],
Cell[276739, 7578, 167, 2, 88, "Output"]
}, Open  ]],
Cell[276921, 7583, 911, 25, 159, "Text"],
Cell[CellGroupData[{
Cell[277857, 7612, 718, 19, 179, "Input"],
Cell[278578, 7633, 190, 3, 88, "Output"]
}, Open  ]],
Cell[278783, 7639, 795, 24, 159, "Text"],
Cell[CellGroupData[{
Cell[279603, 7667, 925, 26, 241, "Input"],
Cell[280531, 7695, 190, 3, 88, "Output"]
}, Open  ]],
Cell[280736, 7701, 664, 21, 65, "Text"],
Cell[CellGroupData[{
Cell[281425, 7726, 1186, 33, 241, "Input"],
Cell[282614, 7761, 191, 3, 88, "Output"]
}, Open  ]],
Cell[282820, 7767, 752, 22, 106, "Text"],
Cell[CellGroupData[{
Cell[283597, 7793, 1170, 32, 241, "Input"],
Cell[284770, 7827, 192, 3, 88, "Output"]
}, Open  ]],
Cell[284977, 7833, 939, 27, 106, "Text"],
Cell[CellGroupData[{
Cell[285941, 7864, 1156, 33, 320, "Input"],
Cell[287100, 7899, 196, 3, 88, "Output"]
}, Open  ]],
Cell[287311, 7905, 1123, 34, 108, "Text"],
Cell[CellGroupData[{
Cell[288459, 7943, 1955, 53, 515, "Input"],
Cell[290417, 7998, 192, 3, 88, "Output"]
}, Open  ]],
Cell[290624, 8004, 1223, 35, 108, "Text"],
Cell[CellGroupData[{
Cell[291872, 8043, 2005, 53, 515, "Input"],
Cell[293880, 8098, 188, 3, 88, "Output"]
}, Open  ]],
Cell[294083, 8104, 1282, 37, 108, "Text"],
Cell[CellGroupData[{
Cell[295390, 8145, 2122, 56, 515, "Input"],
Cell[297515, 8203, 192, 3, 88, "Output"]
}, Open  ]],
Cell[297722, 8209, 1338, 38, 108, "Text"],
Cell[CellGroupData[{
Cell[299085, 8251, 2169, 57, 554, "Input"],
Cell[301257, 8310, 190, 3, 88, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301496, 8319, 176, 2, 232, "Section"],
Cell[301675, 8323, 1214, 21, 426, "Text"],
Cell[302892, 8346, 946, 19, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303875, 8370, 110, 1, 146, "Section"],
Cell[303988, 8373, 749, 15, 305, "Text"],
Cell[304740, 8390, 399, 5, 104, "Text"],
Cell[CellGroupData[{
Cell[305164, 8399, 2763, 45, 258, "Input"],
Cell[307930, 8446, 1221, 40, 276, "Output"],
Cell[309154, 8488, 1383, 44, 313, "Output"]
}, Open  ]],
Cell[310552, 8535, 408, 6, 104, "Text"],
Cell[CellGroupData[{
Cell[310985, 8545, 3443, 65, 531, "Input"],
Cell[314431, 8612, 388281, 6345, 1426, 202570, 3301, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[702727, 14960, 208, 4, 89, "Input"],
Cell[702938, 14966, 201, 3, 63, "Text"],
Cell[CellGroupData[{
Cell[703164, 14973, 1889, 43, 558, "Input"],
Cell[705056, 15018, 203260, 3323, 712, "Output"]
}, Open  ]],
Cell[908331, 18344, 300, 6, 144, "Text"],
Cell[CellGroupData[{
Cell[908656, 18354, 803, 18, 279, "Input"],
Cell[909462, 18374, 832, 23, 192, "Output"],
Cell[910297, 18399, 1021, 31, 249, "Output"]
}, Open  ]],
Cell[911333, 18433, 693, 10, 467, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
